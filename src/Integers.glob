DIGEST 22a5f5f3809f828836a47f9ca36fb602
FAV.Integers
R1125:1133 Coq.Logic.Eqdep_dec <> <> lib
R1135:1139 Coq.ZArith.Zquot <> <> lib
R1141:1143 Coq.ZArith.Zwf <> <> lib
R1161:1169 AV.Coqlib <> <> lib
ind 1226:1235 <> comparison
constr 1251:1253 <> Ceq
constr 1299:1301 <> Cne
constr 1352:1354 <> Clt
constr 1405:1407 <> Cle
constr 1467:1469 <> Cgt
constr 1523:1525 <> Cge
R1257:1266 AV.Integers <> comparison ind
R1305:1314 AV.Integers <> comparison ind
R1358:1367 AV.Integers <> comparison ind
R1411:1420 AV.Integers <> comparison ind
R1473:1482 AV.Integers <> comparison ind
R1529:1538 AV.Integers <> comparison ind
def 1596:1612 <> negate_comparison
R1618:1627 AV.Integers <> comparison ind
R1631:1640 AV.Integers <> comparison ind
R1653:1653 AV.Integers <> c var
R1664:1666 AV.Integers <> Ceq constr
R1671:1673 AV.Integers <> Cne constr
R1679:1681 AV.Integers <> Cne constr
R1686:1688 AV.Integers <> Ceq constr
R1694:1696 AV.Integers <> Clt constr
R1701:1703 AV.Integers <> Cge constr
R1709:1711 AV.Integers <> Cle constr
R1716:1718 AV.Integers <> Cgt constr
R1724:1726 AV.Integers <> Cgt constr
R1731:1733 AV.Integers <> Cle constr
R1739:1741 AV.Integers <> Cge constr
R1746:1748 AV.Integers <> Clt constr
def 1769:1783 <> swap_comparison
R1789:1798 AV.Integers <> comparison ind
R1802:1811 AV.Integers <> comparison ind
R1824:1824 AV.Integers <> c var
R1835:1837 AV.Integers <> Ceq constr
R1842:1844 AV.Integers <> Ceq constr
R1850:1852 AV.Integers <> Cne constr
R1857:1859 AV.Integers <> Cne constr
R1865:1867 AV.Integers <> Clt constr
R1872:1874 AV.Integers <> Cgt constr
R1880:1882 AV.Integers <> Cle constr
R1887:1889 AV.Integers <> Cge constr
R1895:1897 AV.Integers <> Cgt constr
R1902:1904 AV.Integers <> Clt constr
R1910:1912 AV.Integers <> Cge constr
R1917:1919 AV.Integers <> Cle constr
modtype 1995:2002 <> WORDSIZE
ax 2017:2024 WORDSIZE wordsize
R2027:2029 Coq.Init.Datatypes <> nat ind
ax 2040:2056 WORDSIZE wordsize_not_zero
R2067:2070 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2059:2066 AV.Integers WORDSIZE wordsize defax
R2082:2089 AV.Integers WORDSIZE <> modtype
R2245:2252 AV.Integers WORDSIZE <> mod
mod 2236:2239 <> Make
def 2268:2275 Make wordsize
R2278:2280 Coq.Init.Datatypes <> nat ind
R2285:2295 AV.Integers WS wordsize defax
def 2309:2317 Make zwordsize
R2320:2320 Coq.Numbers.BinNums <> Z ind
R2325:2332 Coq.ZArith.BinInt Z of_nat def
R2334:2341 AV.Integers Make wordsize def
def 2355:2361 Make modulus
R2365:2365 Coq.Numbers.BinNums <> Z ind
R2370:2382 Coq.ZArith.Zpower <> two_power_nat def
R2384:2391 AV.Integers Make wordsize def
def 2405:2416 Make half_modulus
R2420:2420 Coq.Numbers.BinNums <> Z ind
R2432:2434 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R2425:2431 AV.Integers Make modulus def
def 2449:2460 Make max_unsigned
R2464:2464 Coq.Numbers.BinNums <> Z ind
R2476:2478 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2469:2475 AV.Integers Make modulus def
def 2493:2502 Make max_signed
R2506:2506 Coq.Numbers.BinNums <> Z ind
R2523:2525 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2511:2522 AV.Integers Make half_modulus def
def 2540:2549 Make min_signed
R2553:2553 Coq.Numbers.BinNums <> Z ind
R2558:2559 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2560:2571 AV.Integers Make half_modulus def
prf 2582:2593 Make wordsize_pos
R2605:2607 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2596:2604 AV.Integers Make zwordsize def
R2627:2635 AV.Integers Make zwordsize def
R2638:2645 AV.Integers Make wordsize def
R2659:2678 AV.Integers WS wordsize_not_zero prfax
R2659:2678 AV.Integers WS wordsize_not_zero prfax
prf 2701:2713 Make modulus_power
R2723:2725 Coq.Init.Logic <> :type_scope:x_'='_x not
R2716:2722 AV.Integers Make modulus def
R2726:2730 Coq.ZArith.Zpower <> two_p def
R2732:2740 AV.Integers Make zwordsize def
R2759:2765 AV.Integers Make modulus def
R2774:2792 AV.Coqlib <> two_power_nat_two_p thm
R2774:2792 AV.Coqlib <> two_power_nat_two_p thm
prf 2808:2818 Make modulus_pos
R2828:2830 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2821:2827 AV.Integers Make modulus def
R2851:2863 AV.Integers Make modulus_power thm
R2851:2863 AV.Integers Make modulus_power thm
R2851:2863 AV.Integers Make modulus_power thm
R2872:2884 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2872:2884 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2898:2909 AV.Integers Make wordsize_pos thm
R2898:2909 AV.Integers Make wordsize_pos thm
constr 3171:3175 Make mkint
rec 3158:3160 Make int
proj 3179:3184 Make intval
proj 3190:3197 Make intrange
R3187:3187 Coq.Numbers.BinNums <> Z ind
R3202:3204 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3211:3213 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3205:3210 AV.Integers <> intval meth
R3205:3210 AV.Integers <> intval meth
R3214:3220 AV.Integers Make modulus def
def 3282:3292 Make P_mod_two_p
R3298:3305 Coq.Numbers.BinNums <> positive ind
R3312:3314 Coq.Init.Datatypes <> nat ind
R3330:3330 Coq.Numbers.BinNums <> Z ind
R3343:3343 AV.Integers <> n var
R3354:3354 Coq.Init.Datatypes <> O constr
R3365:3365 Coq.Init.Datatypes <> S constr
R3384:3384 AV.Integers <> p var
R3399:3400 Coq.Numbers.BinNums <> xH constr
R3415:3416 Coq.Numbers.BinNums <> xO constr
R3423:3430 Coq.ZArith.BinInt Z double def
R3433:3443 AV.Integers <> P_mod_two_p def
R3458:3459 Coq.Numbers.BinNums <> xI constr
R3466:3478 Coq.ZArith.BinInt Z succ_double def
R3481:3491 AV.Integers <> P_mod_two_p def
def 3527:3539 Make Z_mod_modulus
R3545:3545 Coq.Numbers.BinNums <> Z ind
R3550:3550 Coq.Numbers.BinNums <> Z ind
R3563:3563 AV.Integers <> x var
R3574:3575 Coq.Numbers.BinNums <> Z0 constr
R3586:3589 Coq.Numbers.BinNums <> Zpos constr
R3596:3606 AV.Integers Make P_mod_two_p def
R3610:3617 AV.Integers Make wordsize def
R3623:3626 Coq.Numbers.BinNums <> Zneg constr
R3642:3652 AV.Integers Make P_mod_two_p def
R3656:3663 AV.Integers Make wordsize def
R3671:3673 AV.Coqlib <> zeq def
R3675:3675 AV.Integers <> r var
R3698:3700 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R3691:3697 AV.Integers Make modulus def
R3701:3701 AV.Integers <> r var
prf 3717:3733 Make P_mod_two_p_range
R3751:3754 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3770:3772 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3755:3765 AV.Integers Make P_mod_two_p def
R3769:3769 AV.Integers <> n var
R3767:3767 AV.Integers <> p var
R3755:3765 AV.Integers Make P_mod_two_p def
R3769:3769 AV.Integers <> n var
R3767:3767 AV.Integers <> p var
R3773:3785 Coq.ZArith.Zpower <> two_power_nat def
R3787:3787 AV.Integers <> n var
R3839:3853 AV.Coqlib <> two_power_nat_O thm
R3839:3853 AV.Coqlib <> two_power_nat_O thm
R3839:3853 AV.Coqlib <> two_power_nat_O thm
R3875:3889 Coq.ZArith.Zpower <> two_power_nat_S thm
R3875:3889 Coq.ZArith.Zpower <> two_power_nat_S thm
R3875:3889 Coq.ZArith.Zpower <> two_power_nat_S thm
R3938:3955 Coq.ZArith.BinInt Z succ_double_spec thm
R3938:3955 Coq.ZArith.BinInt Z succ_double_spec thm
R3938:3955 Coq.ZArith.BinInt Z succ_double_spec thm
R3999:4011 Coq.ZArith.BinInt Z double_spec thm
R3999:4011 Coq.ZArith.BinInt Z double_spec thm
R3999:4011 Coq.ZArith.BinInt Z double_spec thm
R4039:4055 AV.Coqlib <> two_power_nat_pos thm
R4039:4055 AV.Coqlib <> two_power_nat_pos thm
prf 4080:4093 Make P_mod_two_p_eq
R4125:4127 Coq.Init.Logic <> :type_scope:x_'='_x not
R4110:4120 AV.Integers Make P_mod_two_p def
R4124:4124 AV.Integers <> n var
R4122:4122 AV.Integers <> p var
R4128:4128 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4135:4141 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4157:4157 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4129:4132 Coq.Numbers.BinNums <> Zpos constr
R4134:4134 AV.Integers <> p var
R4142:4154 Coq.ZArith.Zpower <> two_power_nat def
R4156:4156 AV.Integers <> n var
R4189:4195 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4197:4198 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4205:4207 Coq.Init.Logic <> :type_scope:x_'='_x not
R4199:4202 Coq.Numbers.BinNums <> Zpos constr
R4204:4204 AV.Integers <> p var
R4227:4229 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4209:4211 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4208:4208 AV.Integers <> y var
R4212:4224 Coq.ZArith.Zpower <> two_power_nat def
R4226:4226 AV.Integers <> n var
R4230:4240 AV.Integers Make P_mod_two_p def
R4244:4244 AV.Integers <> n var
R4242:4242 AV.Integers <> p var
R4189:4195 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4197:4198 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4205:4207 Coq.Init.Logic <> :type_scope:x_'='_x not
R4199:4202 Coq.Numbers.BinNums <> Zpos constr
R4204:4204 AV.Integers <> p var
R4227:4229 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4209:4211 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4208:4208 AV.Integers <> y var
R4212:4224 Coq.ZArith.Zpower <> two_power_nat def
R4226:4226 AV.Integers <> n var
R4230:4240 AV.Integers Make P_mod_two_p def
R4244:4244 AV.Integers <> n var
R4242:4242 AV.Integers <> p var
R4298:4312 AV.Coqlib <> two_power_nat_O thm
R4298:4312 AV.Coqlib <> two_power_nat_O thm
R4298:4312 AV.Coqlib <> two_power_nat_O thm
R4323:4326 Coq.Numbers.BinNums <> Zpos constr
R4323:4326 Coq.Numbers.BinNums <> Zpos constr
R4352:4366 Coq.ZArith.Zpower <> two_power_nat_S thm
R4352:4366 Coq.ZArith.Zpower <> two_power_nat_S thm
R4352:4366 Coq.ZArith.Zpower <> two_power_nat_S thm
R4469:4471 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4460:4462 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4463:4466 Coq.Numbers.BinNums <> Zpos constr
R4443:4446 Coq.Numbers.BinNums <> Zpos constr
R4449:4450 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4443:4446 Coq.Numbers.BinNums <> Zpos constr
R4449:4450 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4469:4471 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4460:4462 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4463:4466 Coq.Numbers.BinNums <> Zpos constr
R4504:4521 Coq.ZArith.BinInt Z succ_double_spec thm
R4504:4521 Coq.ZArith.BinInt Z succ_double_spec thm
R4504:4521 Coq.ZArith.BinInt Z succ_double_spec thm
R4609:4611 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4612:4615 Coq.Numbers.BinNums <> Zpos constr
R4592:4595 Coq.Numbers.BinNums <> Zpos constr
R4598:4599 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4592:4595 Coq.Numbers.BinNums <> Zpos constr
R4598:4599 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4609:4611 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4612:4615 Coq.Numbers.BinNums <> Zpos constr
R4650:4662 Coq.ZArith.BinInt Z double_spec thm
R4665:4675 AV.Integers Make P_mod_two_p def
R4650:4662 Coq.ZArith.BinInt Z double_spec thm
R4665:4675 AV.Integers Make P_mod_two_p def
R4650:4662 Coq.ZArith.BinInt Z double_spec thm
R4665:4675 AV.Integers Make P_mod_two_p def
R4777:4787 AV.Coqlib <> Zmod_unique thm
R4777:4787 AV.Coqlib <> Zmod_unique thm
R4809:4825 AV.Integers Make P_mod_two_p_range thm
R4809:4825 AV.Integers Make P_mod_two_p_range thm
prf 4840:4858 Make Z_mod_modulus_range
R4874:4877 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4893:4895 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4878:4890 AV.Integers Make Z_mod_modulus def
R4892:4892 AV.Integers <> x var
R4878:4890 AV.Integers Make Z_mod_modulus def
R4892:4892 AV.Integers <> x var
R4896:4902 AV.Integers Make modulus def
R4929:4941 AV.Integers Make Z_mod_modulus def
R4973:4983 AV.Integers Make modulus_pos thm
R4973:4983 AV.Integers Make modulus_pos thm
R5003:5019 AV.Integers Make P_mod_two_p_range thm
R5003:5019 AV.Integers Make P_mod_two_p_range thm
R5036:5046 AV.Integers Make P_mod_two_p def
R5050:5057 AV.Integers Make wordsize def
R5036:5046 AV.Integers Make P_mod_two_p def
R5050:5057 AV.Integers Make wordsize def
R5074:5077 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5079:5081 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5082:5088 AV.Integers Make modulus def
R5100:5116 AV.Integers Make P_mod_two_p_range thm
R5074:5077 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5079:5081 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5082:5088 AV.Integers Make modulus def
R5100:5116 AV.Integers Make P_mod_two_p_range thm
R5133:5135 AV.Coqlib <> zeq def
R5133:5135 AV.Coqlib <> zeq def
R5160:5170 AV.Integers Make modulus_pos thm
R5160:5170 AV.Integers Make modulus_pos thm
prf 5205:5224 Make Z_mod_modulus_range'
R5241:5243 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5259:5261 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5244:5256 AV.Integers Make Z_mod_modulus def
R5258:5258 AV.Integers <> x var
R5244:5256 AV.Integers Make Z_mod_modulus def
R5258:5258 AV.Integers <> x var
R5262:5268 AV.Integers Make modulus def
R5300:5318 AV.Integers Make Z_mod_modulus_range thm
R5300:5318 AV.Integers Make Z_mod_modulus_range thm
prf 5343:5358 Make Z_mod_modulus_eq
R5388:5390 Coq.Init.Logic <> :type_scope:x_'='_x not
R5373:5385 AV.Integers Make Z_mod_modulus def
R5387:5387 AV.Integers <> x var
R5392:5396 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R5391:5391 AV.Integers <> x var
R5397:5403 AV.Integers Make modulus def
R5430:5442 AV.Integers Make Z_mod_modulus def
R5469:5476 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5469:5476 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5469:5476 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5495:5508 AV.Integers Make P_mod_two_p_eq thm
R5495:5508 AV.Integers Make P_mod_two_p_eq thm
R5527:5543 AV.Integers Make P_mod_two_p_range thm
R5545:5552 AV.Integers Make wordsize def
R5558:5571 AV.Integers Make P_mod_two_p_eq thm
R5573:5580 AV.Integers Make wordsize def
R5527:5543 AV.Integers Make P_mod_two_p_range thm
R5545:5552 AV.Integers Make wordsize def
R5558:5571 AV.Integers Make P_mod_two_p_eq thm
R5573:5580 AV.Integers Make wordsize def
R5595:5601 AV.Integers Make modulus def
R5595:5601 AV.Integers Make modulus def
R5629:5640 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5651:5657 AV.Integers Make modulus def
R5643:5646 Coq.Numbers.BinNums <> Zpos constr
R5629:5640 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5651:5657 AV.Integers Make modulus def
R5643:5646 Coq.Numbers.BinNums <> Zpos constr
R5667:5677 AV.Integers Make modulus_pos thm
R5667:5677 AV.Integers Make modulus_pos thm
R5710:5712 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5704:5707 Coq.Numbers.BinNums <> Zpos constr
R5713:5719 AV.Integers Make modulus def
R5710:5712 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5704:5707 Coq.Numbers.BinNums <> Zpos constr
R5713:5719 AV.Integers Make modulus def
R5742:5752 AV.Integers Make P_mod_two_p def
R5756:5763 AV.Integers Make wordsize def
R5742:5752 AV.Integers Make P_mod_two_p def
R5756:5763 AV.Integers Make wordsize def
R5822:5824 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5832:5832 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5825:5829 Coq.ZArith.BinInt Z pos syndef
R5807:5811 Coq.ZArith.BinInt Z neg syndef
R5807:5811 Coq.ZArith.BinInt Z neg syndef
R5822:5824 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5832:5832 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5825:5829 Coq.ZArith.BinInt Z pos syndef
R5846:5848 AV.Coqlib <> zeq def
R5846:5848 AV.Coqlib <> zeq def
R5896:5896 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5878:5888 AV.Coqlib <> Zmod_unique thm
R5896:5896 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5878:5888 AV.Coqlib <> Zmod_unique thm
R5946:5956 AV.Integers Make modulus_pos thm
R5946:5956 AV.Integers Make modulus_pos thm
R6008:6010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6006:6006 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5988:5998 AV.Coqlib <> Zmod_unique thm
R6008:6010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6006:6006 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5988:5998 AV.Coqlib <> Zmod_unique thm
def 6227:6234 Make unsigned
R6240:6242 AV.Integers Make int rec
R6247:6247 Coq.Numbers.BinNums <> Z ind
R6252:6257 AV.Integers Make intval proj
R6259:6259 AV.Integers <> n var
def 6274:6279 Make signed
R6285:6287 AV.Integers Make int rec
R6292:6292 Coq.Numbers.BinNums <> Z ind
R6308:6315 AV.Integers Make unsigned def
R6317:6317 AV.Integers <> n var
R6327:6329 AV.Coqlib <> zlt def
R6333:6344 AV.Integers Make half_modulus def
R6331:6331 AV.Integers <> x var
R6359:6361 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6358:6358 AV.Integers <> x var
R6362:6368 AV.Integers Make modulus def
R6351:6351 AV.Integers <> x var
def 6522:6525 Make repr
R6531:6531 Coq.Numbers.BinNums <> Z ind
R6536:6538 AV.Integers Make int rec
R6545:6549 AV.Integers Make mkint constr
R6570:6589 AV.Integers Make Z_mod_modulus_range' thm
R6591:6591 AV.Integers <> x var
R6552:6564 AV.Integers Make Z_mod_modulus def
R6566:6566 AV.Integers <> x var
def 6607:6610 Make zero
R6615:6618 AV.Integers Make repr def
def 6634:6636 Make one
R6642:6645 AV.Integers Make repr def
def 6661:6664 Make mone
R6669:6672 AV.Integers Make repr def
def 6691:6699 Make iwordsize
R6704:6707 AV.Integers Make repr def
R6709:6717 AV.Integers Make zwordsize def
prf 6727:6734 Make mkint_eq
R6762:6765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6776:6778 Coq.Init.Logic <> :type_scope:x_'='_x not
R6766:6770 AV.Integers Make mkint constr
R6774:6775 AV.Integers <> Px var
R6772:6772 AV.Integers <> x var
R6779:6783 AV.Integers Make mkint constr
R6787:6788 AV.Integers <> Py var
R6785:6785 AV.Integers <> y var
R6758:6760 Coq.Init.Logic <> :type_scope:x_'='_x not
R6757:6757 AV.Integers <> x var
R6761:6761 AV.Integers <> y var
R6840:6840 Coq.Numbers.BinNums <> Z ind
R6852:6854 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6851:6851 AV.Integers <> n var
R6855:6855 AV.Integers <> m var
R6861:6863 Coq.Init.Logic <> :type_scope:x_'='_x not
R6859:6860 AV.Integers <> P1 var
R6864:6865 AV.Integers <> P2 var
R6840:6840 Coq.Numbers.BinNums <> Z ind
R6852:6854 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6851:6851 AV.Integers <> n var
R6855:6855 AV.Integers <> m var
R6861:6863 Coq.Init.Logic <> :type_scope:x_'='_x not
R6859:6860 AV.Integers <> P1 var
R6864:6865 AV.Integers <> P2 var
R6884:6887 Coq.ZArith.BinInt Z lt def
R6908:6924 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R6908:6924 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
prf 7154:7159 Make eq_dec
R7175:7177 AV.Integers Make int rec
R7181:7181 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7187:7191 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7198:7198 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7183:7185 Coq.Init.Logic <> :type_scope:x_'='_x not
R7182:7182 AV.Integers <> x var
R7186:7186 AV.Integers <> y var
R7193:7196 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7192:7192 AV.Integers <> x var
R7197:7197 AV.Integers <> y var
R7252:7254 AV.Coqlib <> zeq def
R7252:7254 AV.Coqlib <> zeq def
R7288:7295 AV.Integers Make mkint_eq thm
R7288:7295 AV.Integers Make mkint_eq thm
def 7434:7435 Make eq
R7443:7445 AV.Integers Make int rec
R7450:7453 Coq.Init.Datatypes <> bool ind
R7463:7465 AV.Coqlib <> zeq def
R7481:7488 AV.Integers Make unsigned def
R7490:7490 AV.Integers <> y var
R7468:7475 AV.Integers Make unsigned def
R7477:7477 AV.Integers <> x var
R7508:7512 Coq.Init.Datatypes <> false constr
R7498:7501 Coq.Init.Datatypes <> true constr
def 7526:7527 Make lt
R7535:7537 AV.Integers Make int rec
R7542:7545 Coq.Init.Datatypes <> bool ind
R7555:7557 AV.Coqlib <> zlt def
R7571:7576 AV.Integers Make signed def
R7578:7578 AV.Integers <> y var
R7560:7565 AV.Integers Make signed def
R7567:7567 AV.Integers <> x var
R7596:7600 Coq.Init.Datatypes <> false constr
R7586:7589 Coq.Init.Datatypes <> true constr
def 7614:7616 Make ltu
R7624:7626 AV.Integers Make int rec
R7631:7634 Coq.Init.Datatypes <> bool ind
R7644:7646 AV.Coqlib <> zlt def
R7662:7669 AV.Integers Make unsigned def
R7671:7671 AV.Integers <> y var
R7649:7656 AV.Integers Make unsigned def
R7658:7658 AV.Integers <> x var
R7689:7693 Coq.Init.Datatypes <> false constr
R7679:7682 Coq.Init.Datatypes <> true constr
def 7708:7710 Make neg
R7716:7718 AV.Integers Make int rec
R7723:7725 AV.Integers Make int rec
R7730:7733 AV.Integers Make repr def
R7736:7737 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R7738:7745 AV.Integers Make unsigned def
R7747:7747 AV.Integers <> x var
def 7763:7765 Make add
R7773:7775 AV.Integers Make int rec
R7780:7782 AV.Integers Make int rec
R7789:7792 AV.Integers Make repr def
R7805:7807 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7795:7802 AV.Integers Make unsigned def
R7804:7804 AV.Integers <> x var
R7808:7815 AV.Integers Make unsigned def
R7817:7817 AV.Integers <> y var
def 7832:7834 Make sub
R7842:7844 AV.Integers Make int rec
R7849:7851 AV.Integers Make int rec
R7858:7861 AV.Integers Make repr def
R7874:7876 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R7864:7871 AV.Integers Make unsigned def
R7873:7873 AV.Integers <> x var
R7877:7884 AV.Integers Make unsigned def
R7886:7886 AV.Integers <> y var
def 7901:7903 Make mul
R7911:7913 AV.Integers Make int rec
R7918:7920 AV.Integers Make int rec
R7927:7930 AV.Integers Make repr def
R7943:7945 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7933:7940 AV.Integers Make unsigned def
R7942:7942 AV.Integers <> x var
R7946:7953 AV.Integers Make unsigned def
R7955:7955 AV.Integers <> y var
def 7971:7974 Make divs
R7982:7984 AV.Integers Make int rec
R7989:7991 AV.Integers Make int rec
R7998:8001 AV.Integers Make repr def
R8004:8009 Coq.ZArith.BinInt Z quot def
R8023:8028 AV.Integers Make signed def
R8030:8030 AV.Integers <> y var
R8012:8017 AV.Integers Make signed def
R8019:8019 AV.Integers <> x var
def 8046:8049 Make mods
R8057:8059 AV.Integers Make int rec
R8064:8066 AV.Integers Make int rec
R8073:8076 AV.Integers Make repr def
R8079:8083 Coq.ZArith.BinInt Z rem def
R8097:8102 AV.Integers Make signed def
R8104:8104 AV.Integers <> y var
R8086:8091 AV.Integers Make signed def
R8093:8093 AV.Integers <> x var
def 8121:8124 Make divu
R8132:8134 AV.Integers Make int rec
R8139:8141 AV.Integers Make int rec
R8148:8151 AV.Integers Make repr def
R8164:8166 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R8154:8161 AV.Integers Make unsigned def
R8163:8163 AV.Integers <> x var
R8167:8174 AV.Integers Make unsigned def
R8176:8176 AV.Integers <> y var
def 8191:8194 Make modu
R8202:8204 AV.Integers Make int rec
R8209:8211 AV.Integers Make int rec
R8218:8221 AV.Integers Make repr def
R8224:8224 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8235:8241 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8252:8252 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8225:8232 AV.Integers Make unsigned def
R8234:8234 AV.Integers <> x var
R8242:8249 AV.Integers Make unsigned def
R8251:8251 AV.Integers <> y var
def 8304:8306 Make and
R8314:8316 AV.Integers Make int rec
R8320:8322 AV.Integers Make int rec
R8327:8330 AV.Integers Make repr def
R8333:8338 Coq.ZArith.BinInt Z land def
R8354:8361 AV.Integers Make unsigned def
R8363:8363 AV.Integers <> y var
R8341:8348 AV.Integers Make unsigned def
R8350:8350 AV.Integers <> x var
def 8379:8380 Make or
R8388:8390 AV.Integers Make int rec
R8394:8396 AV.Integers Make int rec
R8401:8404 AV.Integers Make repr def
R8407:8411 Coq.ZArith.BinInt Z lor def
R8427:8434 AV.Integers Make unsigned def
R8436:8436 AV.Integers <> y var
R8414:8421 AV.Integers Make unsigned def
R8423:8423 AV.Integers <> x var
def 8452:8454 Make xor
R8462:8464 AV.Integers Make int rec
R8469:8471 AV.Integers Make int rec
R8476:8479 AV.Integers Make repr def
R8482:8487 Coq.ZArith.BinInt Z lxor def
R8503:8510 AV.Integers Make unsigned def
R8512:8512 AV.Integers <> y var
R8490:8497 AV.Integers Make unsigned def
R8499:8499 AV.Integers <> x var
def 8529:8531 Make not
R8537:8539 AV.Integers Make int rec
R8544:8546 AV.Integers Make int rec
R8551:8553 AV.Integers Make xor def
R8557:8560 AV.Integers Make mone def
R8555:8555 AV.Integers <> x var
def 8603:8605 Make shl
R8613:8615 AV.Integers Make int rec
R8619:8621 AV.Integers Make int rec
R8626:8629 AV.Integers Make repr def
R8632:8639 Coq.ZArith.BinInt Z shiftl def
R8655:8662 AV.Integers Make unsigned def
R8664:8664 AV.Integers <> y var
R8642:8649 AV.Integers Make unsigned def
R8651:8651 AV.Integers <> x var
def 8680:8683 Make shru
R8691:8693 AV.Integers Make int rec
R8697:8699 AV.Integers Make int rec
R8704:8707 AV.Integers Make repr def
R8710:8717 Coq.ZArith.BinInt Z shiftr def
R8733:8740 AV.Integers Make unsigned def
R8742:8742 AV.Integers <> y var
R8720:8727 AV.Integers Make unsigned def
R8729:8729 AV.Integers <> x var
def 8758:8760 Make shr
R8768:8770 AV.Integers Make int rec
R8774:8776 AV.Integers Make int rec
R8781:8784 AV.Integers Make repr def
R8787:8794 Coq.ZArith.BinInt Z shiftr def
R8808:8815 AV.Integers Make unsigned def
R8817:8817 AV.Integers <> y var
R8797:8802 AV.Integers Make signed def
R8804:8804 AV.Integers <> x var
def 8834:8836 Make rol
R8844:8846 AV.Integers Make int rec
R8851:8853 AV.Integers Make int rec
R8869:8869 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8880:8885 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8870:8877 AV.Integers Make unsigned def
R8879:8879 AV.Integers <> y var
R8886:8894 AV.Integers Make zwordsize def
R8901:8904 AV.Integers Make repr def
R8907:8911 Coq.ZArith.BinInt Z lor def
R8940:8947 Coq.ZArith.BinInt Z shiftr def
R8972:8974 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R8963:8971 AV.Integers Make zwordsize def
R8975:8975 AV.Integers <> n var
R8950:8957 AV.Integers Make unsigned def
R8959:8959 AV.Integers <> x var
R8914:8921 Coq.ZArith.BinInt Z shiftl def
R8936:8936 AV.Integers <> n var
R8924:8931 AV.Integers Make unsigned def
R8933:8933 AV.Integers <> x var
def 8992:8994 Make ror
R9002:9004 AV.Integers Make int rec
R9009:9011 AV.Integers Make int rec
R9027:9027 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9038:9043 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9028:9035 AV.Integers Make unsigned def
R9037:9037 AV.Integers <> y var
R9044:9052 AV.Integers Make zwordsize def
R9059:9062 AV.Integers Make repr def
R9065:9069 Coq.ZArith.BinInt Z lor def
R9098:9105 Coq.ZArith.BinInt Z shiftl def
R9130:9132 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R9121:9129 AV.Integers Make zwordsize def
R9133:9133 AV.Integers <> n var
R9108:9115 AV.Integers Make unsigned def
R9117:9117 AV.Integers <> x var
R9072:9079 Coq.ZArith.BinInt Z shiftr def
R9094:9094 AV.Integers <> n var
R9082:9089 AV.Integers Make unsigned def
R9091:9091 AV.Integers <> x var
def 9151:9154 Make rolm
R9164:9166 AV.Integers Make int rec
R9170:9172 AV.Integers Make int rec
R9177:9179 AV.Integers Make and def
R9191:9191 AV.Integers <> m var
R9182:9184 AV.Integers Make rol def
R9188:9188 AV.Integers <> a var
R9186:9186 AV.Integers <> x var
def 9332:9335 Make shrx
R9343:9345 AV.Integers Make int rec
R9349:9351 AV.Integers Make int rec
R9358:9361 AV.Integers Make divs def
R9366:9368 AV.Integers Make shl def
R9374:9374 AV.Integers <> y var
R9370:9372 AV.Integers Make one def
R9363:9363 AV.Integers <> x var
def 9426:9430 Make mulhu
R9438:9440 AV.Integers Make int rec
R9444:9446 AV.Integers Make int rec
R9451:9454 AV.Integers Make repr def
R9457:9457 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9481:9484 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9468:9470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9458:9465 AV.Integers Make unsigned def
R9467:9467 AV.Integers <> x var
R9471:9478 AV.Integers Make unsigned def
R9480:9480 AV.Integers <> y var
R9485:9491 AV.Integers Make modulus def
def 9506:9510 Make mulhs
R9518:9520 AV.Integers Make int rec
R9524:9526 AV.Integers Make int rec
R9531:9534 AV.Integers Make repr def
R9537:9537 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9557:9560 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9546:9548 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9538:9543 AV.Integers Make signed def
R9545:9545 AV.Integers <> x var
R9549:9554 AV.Integers Make signed def
R9556:9556 AV.Integers <> y var
R9561:9567 AV.Integers Make modulus def
def 9607:9614 Make negative
R9620:9622 AV.Integers Make int rec
R9626:9628 AV.Integers Make int rec
R9638:9639 AV.Integers Make lt def
R9643:9646 AV.Integers Make zero def
R9641:9641 AV.Integers <> x var
R9662:9665 AV.Integers Make zero def
R9653:9655 AV.Integers Make one def
def 9680:9688 Make add_carry
R9700:9702 AV.Integers Make int rec
R9706:9708 AV.Integers Make int rec
R9718:9720 AV.Coqlib <> zlt def
R9763:9769 AV.Integers Make modulus def
R9746:9748 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9733:9735 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9723:9730 AV.Integers Make unsigned def
R9732:9732 AV.Integers <> x var
R9736:9743 AV.Integers Make unsigned def
R9745:9745 AV.Integers <> y var
R9749:9756 AV.Integers Make unsigned def
R9758:9760 AV.Integers <> cin var
R9786:9788 AV.Integers Make one def
R9776:9779 AV.Integers Make zero def
def 9803:9814 Make add_overflow
R9826:9828 AV.Integers Make int rec
R9832:9834 AV.Integers Make int rec
R9869:9871 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9858:9860 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9850:9855 AV.Integers Make signed def
R9857:9857 AV.Integers <> x var
R9861:9866 AV.Integers Make signed def
R9868:9868 AV.Integers <> y var
R9872:9877 AV.Integers Make signed def
R9879:9881 AV.Integers <> cin var
R9907:9910 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R9891:9893 AV.Coqlib <> zle def
R9906:9906 AV.Integers <> s var
R9895:9904 AV.Integers Make min_signed def
R9911:9913 AV.Coqlib <> zle def
R9917:9926 AV.Integers Make max_signed def
R9915:9915 AV.Integers <> s var
R9943:9945 AV.Integers Make one def
R9933:9936 AV.Integers Make zero def
def 9960:9969 Make sub_borrow
R9981:9983 AV.Integers Make int rec
R9987:9989 AV.Integers Make int rec
R9999:10001 AV.Coqlib <> zlt def
R10027:10029 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10014:10016 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10004:10011 AV.Integers Make unsigned def
R10013:10013 AV.Integers <> x var
R10017:10024 AV.Integers Make unsigned def
R10026:10026 AV.Integers <> y var
R10030:10037 AV.Integers Make unsigned def
R10039:10041 AV.Integers <> bin var
R10060:10063 AV.Integers Make zero def
R10051:10053 AV.Integers Make one def
def 10078:10089 Make sub_overflow
R10101:10103 AV.Integers Make int rec
R10107:10109 AV.Integers Make int rec
R10144:10146 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10133:10135 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10125:10130 AV.Integers Make signed def
R10132:10132 AV.Integers <> x var
R10136:10141 AV.Integers Make signed def
R10143:10143 AV.Integers <> y var
R10147:10152 AV.Integers Make signed def
R10154:10156 AV.Integers <> bin var
R10182:10185 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10166:10168 AV.Coqlib <> zle def
R10181:10181 AV.Integers <> s var
R10170:10179 AV.Integers Make min_signed def
R10186:10188 AV.Coqlib <> zle def
R10192:10201 AV.Integers Make max_signed def
R10190:10190 AV.Integers <> s var
R10218:10220 AV.Integers Make one def
R10208:10211 AV.Integers Make zero def
def 10323:10331 Make shr_carry
R10339:10341 AV.Integers Make int rec
R10346:10348 AV.Integers Make int rec
R10367:10370 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10358:10359 AV.Integers Make lt def
R10363:10366 AV.Integers Make zero def
R10361:10361 AV.Integers <> x var
R10371:10374 Coq.Init.Datatypes <> negb def
R10377:10378 AV.Integers Make eq def
R10410:10413 AV.Integers Make zero def
R10381:10383 AV.Integers Make and def
R10388:10390 AV.Integers Make sub def
R10404:10406 AV.Integers Make one def
R10393:10395 AV.Integers Make shl def
R10401:10401 AV.Integers <> y var
R10397:10399 AV.Integers Make one def
R10385:10385 AV.Integers <> x var
R10432:10435 AV.Integers Make zero def
R10423:10425 AV.Integers Make one def
def 10483:10490 Make Zshiftin
R10496:10499 Coq.Init.Datatypes <> bool ind
R10506:10506 Coq.Numbers.BinNums <> Z ind
R10511:10511 Coq.Numbers.BinNums <> Z ind
R10521:10521 AV.Integers <> b var
R10549:10556 Coq.ZArith.BinInt Z double def
R10558:10558 AV.Integers <> x var
R10528:10540 Coq.ZArith.BinInt Z succ_double def
R10542:10542 AV.Integers <> x var
def 11100:11108 Make Zzero_ext
R11114:11114 Coq.Numbers.BinNums <> Z ind
R11121:11121 Coq.Numbers.BinNums <> Z ind
R11126:11126 Coq.Numbers.BinNums <> Z ind
R11133:11138 Coq.ZArith.BinInt Z iter def
R11218:11218 AV.Integers <> x var
R11160:11167 AV.Integers Make Zshiftin def
R11180:11182 AV.Integers <> rec var
R11185:11190 Coq.ZArith.BinInt Z div2 def
R11192:11192 AV.Integers <> x var
R11170:11174 Coq.ZArith.BinInt Z odd def
R11176:11176 AV.Integers <> x var
R11140:11140 AV.Integers <> n var
def 11233:11241 Make Zsign_ext
R11247:11247 Coq.Numbers.BinNums <> Z ind
R11254:11254 Coq.Numbers.BinNums <> Z ind
R11259:11259 Coq.Numbers.BinNums <> Z ind
R11266:11271 Coq.ZArith.BinInt Z iter def
R11384:11384 AV.Integers <> x var
R11356:11360 Coq.ZArith.BinInt Z odd def
R11362:11362 AV.Integers <> x var
R11302:11309 AV.Integers Make Zshiftin def
R11322:11324 AV.Integers <> rec var
R11327:11332 Coq.ZArith.BinInt Z div2 def
R11334:11334 AV.Integers <> x var
R11312:11316 Coq.ZArith.BinInt Z odd def
R11318:11318 AV.Integers <> x var
R11274:11279 Coq.ZArith.BinInt Z pred def
R11281:11281 AV.Integers <> n var
def 11399:11406 Make zero_ext
R11412:11412 Coq.Numbers.BinNums <> Z ind
R11419:11421 AV.Integers Make int rec
R11426:11428 AV.Integers Make int rec
R11433:11436 AV.Integers Make repr def
R11439:11447 AV.Integers Make Zzero_ext def
R11452:11459 AV.Integers Make unsigned def
R11461:11461 AV.Integers <> x var
R11449:11449 AV.Integers <> n var
def 11478:11485 Make sign_ext
R11491:11491 Coq.Numbers.BinNums <> Z ind
R11498:11500 AV.Integers Make int rec
R11505:11507 AV.Integers Make int rec
R11512:11515 AV.Integers Make repr def
R11518:11526 AV.Integers Make Zsign_ext def
R11531:11538 AV.Integers Make unsigned def
R11540:11540 AV.Integers <> x var
R11528:11528 AV.Integers <> n var
def 11616:11625 Make Z_one_bits
R11631:11633 Coq.Init.Datatypes <> nat ind
R11640:11640 Coq.Numbers.BinNums <> Z ind
R11647:11647 Coq.Numbers.BinNums <> Z ind
R11662:11665 Coq.Init.Datatypes <> list ind
R11667:11667 Coq.Numbers.BinNums <> Z ind
R11680:11680 AV.Integers <> n var
R11691:11691 Coq.Init.Datatypes <> O constr
R11696:11698 Coq.Init.Datatypes <> nil constr
R11704:11704 Coq.Init.Datatypes <> S constr
R11720:11724 Coq.ZArith.BinInt Z odd def
R11726:11726 AV.Integers <> x var
R11785:11794 AV.Integers <> Z_one_bits def
R11811:11811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11810:11810 AV.Integers <> i var
R11799:11804 Coq.ZArith.BinInt Z div2 def
R11806:11806 AV.Integers <> x var
R11740:11743 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11739:11739 AV.Integers <> i var
R11744:11753 AV.Integers <> Z_one_bits def
R11770:11770 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11769:11769 AV.Integers <> i var
R11758:11763 Coq.ZArith.BinInt Z div2 def
R11765:11765 AV.Integers <> x var
def 11834:11841 Make one_bits
R11847:11849 AV.Integers Make int rec
R11854:11857 Coq.Init.Datatypes <> list ind
R11859:11861 AV.Integers Make int rec
R11868:11875 Coq.Lists.List <> map def
R11883:11892 AV.Integers Make Z_one_bits def
R11904:11911 AV.Integers Make unsigned def
R11913:11913 AV.Integers <> x var
R11894:11901 AV.Integers Make wordsize def
R11877:11880 AV.Integers Make repr def
def 11970:11978 Make is_power2
R11984:11986 AV.Integers Make int rec
R11991:11996 Coq.Init.Datatypes <> option ind
R11998:12000 AV.Integers Make int rec
R12013:12022 AV.Integers Make Z_one_bits def
R12034:12041 AV.Integers Make unsigned def
R12043:12043 AV.Integers <> x var
R12024:12031 AV.Integers Make wordsize def
R12058:12061 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12062:12064 Coq.Init.Datatypes <> nil constr
R12069:12072 Coq.Init.Datatypes <> Some constr
R12075:12078 AV.Integers Make repr def
R12092:12095 Coq.Init.Datatypes <> None constr
def 12137:12139 Make cmp
R12145:12154 AV.Integers <> comparison ind
R12163:12165 AV.Integers Make int rec
R12170:12173 Coq.Init.Datatypes <> bool ind
R12186:12186 AV.Integers <> c var
R12197:12199 AV.Integers <> Ceq constr
R12204:12205 AV.Integers Make eq def
R12209:12209 AV.Integers <> y var
R12207:12207 AV.Integers <> x var
R12215:12217 AV.Integers <> Cne constr
R12222:12225 Coq.Init.Datatypes <> negb def
R12228:12229 AV.Integers Make eq def
R12233:12233 AV.Integers <> y var
R12231:12231 AV.Integers <> x var
R12240:12242 AV.Integers <> Clt constr
R12247:12248 AV.Integers Make lt def
R12252:12252 AV.Integers <> y var
R12250:12250 AV.Integers <> x var
R12258:12260 AV.Integers <> Cle constr
R12265:12268 Coq.Init.Datatypes <> negb def
R12271:12272 AV.Integers Make lt def
R12276:12276 AV.Integers <> x var
R12274:12274 AV.Integers <> y var
R12283:12285 AV.Integers <> Cgt constr
R12290:12291 AV.Integers Make lt def
R12295:12295 AV.Integers <> x var
R12293:12293 AV.Integers <> y var
R12301:12303 AV.Integers <> Cge constr
R12308:12311 Coq.Init.Datatypes <> negb def
R12314:12315 AV.Integers Make lt def
R12319:12319 AV.Integers <> y var
R12317:12317 AV.Integers <> x var
def 12341:12344 Make cmpu
R12350:12359 AV.Integers <> comparison ind
R12368:12370 AV.Integers Make int rec
R12375:12378 Coq.Init.Datatypes <> bool ind
R12391:12391 AV.Integers <> c var
R12402:12404 AV.Integers <> Ceq constr
R12409:12410 AV.Integers Make eq def
R12414:12414 AV.Integers <> y var
R12412:12412 AV.Integers <> x var
R12420:12422 AV.Integers <> Cne constr
R12427:12430 Coq.Init.Datatypes <> negb def
R12433:12434 AV.Integers Make eq def
R12438:12438 AV.Integers <> y var
R12436:12436 AV.Integers <> x var
R12445:12447 AV.Integers <> Clt constr
R12452:12454 AV.Integers Make ltu def
R12458:12458 AV.Integers <> y var
R12456:12456 AV.Integers <> x var
R12464:12466 AV.Integers <> Cle constr
R12471:12474 Coq.Init.Datatypes <> negb def
R12477:12479 AV.Integers Make ltu def
R12483:12483 AV.Integers <> x var
R12481:12481 AV.Integers <> y var
R12490:12492 AV.Integers <> Cgt constr
R12497:12499 AV.Integers Make ltu def
R12503:12503 AV.Integers <> x var
R12501:12501 AV.Integers <> y var
R12509:12511 AV.Integers <> Cge constr
R12516:12519 Coq.Init.Datatypes <> negb def
R12522:12524 AV.Integers Make ltu def
R12528:12528 AV.Integers <> y var
R12526:12526 AV.Integers <> x var
def 12550:12557 Make is_false
R12563:12565 AV.Integers Make int rec
R12579:12581 Coq.Init.Logic <> :type_scope:x_'='_x not
R12578:12578 AV.Integers <> x var
R12582:12585 AV.Integers Make zero def
def 12599:12605 Make is_true
R12612:12614 AV.Integers Make int rec
R12628:12631 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12627:12627 AV.Integers <> x var
R12632:12635 AV.Integers Make zero def
def 12649:12655 Make notbool
R12662:12664 AV.Integers Make int rec
R12669:12671 AV.Integers Make int rec
R12680:12681 AV.Integers Make eq def
R12685:12688 AV.Integers Make zero def
R12683:12683 AV.Integers <> x var
R12704:12707 AV.Integers Make zero def
R12695:12697 AV.Integers Make one def
def 12770:12777 Make divmodu2
R12789:12791 AV.Integers Make int rec
R12798:12800 AV.Integers Make int rec
R12805:12810 Coq.Init.Datatypes <> option ind
R12816:12818 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R12813:12815 AV.Integers Make int rec
R12819:12821 AV.Integers Make int rec
R12832:12837 AV.Integers Make eq_dec thm
R12841:12844 AV.Integers Make zero def
R12839:12839 AV.Integers <> d var
R12879:12888 Coq.ZArith.BinInt Z div_eucl def
R12931:12938 AV.Integers Make unsigned def
R12940:12940 AV.Integers <> d var
R12913:12915 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R12903:12905 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R12891:12898 AV.Integers Make unsigned def
R12900:12902 AV.Integers <> nhi var
R12906:12912 AV.Integers Make modulus def
R12916:12923 AV.Integers Make unsigned def
R12925:12927 AV.Integers <> nlo var
R12953:12955 AV.Coqlib <> zle def
R12959:12970 AV.Integers Make max_unsigned def
R12957:12957 AV.Integers <> q var
R13003:13006 Coq.Init.Datatypes <> None constr
R12977:12980 Coq.Init.Datatypes <> Some constr
R12981:12981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12988:12989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12996:12996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12982:12985 AV.Integers Make repr def
R12987:12987 AV.Integers <> q var
R12990:12993 AV.Integers Make repr def
R12995:12995 AV.Integers <> r var
R12851:12854 Coq.Init.Datatypes <> None constr
def 13022:13029 Make divmods2
R13041:13043 AV.Integers Make int rec
R13050:13052 AV.Integers Make int rec
R13057:13062 Coq.Init.Datatypes <> option ind
R13068:13070 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13065:13067 AV.Integers Make int rec
R13071:13073 AV.Integers Make int rec
R13084:13089 AV.Integers Make eq_dec thm
R13093:13096 AV.Integers Make zero def
R13091:13091 AV.Integers <> d var
R13131:13139 Coq.ZArith.BinInt Z quotrem def
R13180:13185 AV.Integers Make signed def
R13187:13187 AV.Integers <> d var
R13162:13164 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13152:13154 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R13142:13147 AV.Integers Make signed def
R13149:13151 AV.Integers <> nhi var
R13155:13161 AV.Integers Make modulus def
R13165:13172 AV.Integers Make unsigned def
R13174:13176 AV.Integers <> nlo var
R13216:13219 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13200:13202 AV.Coqlib <> zle def
R13215:13215 AV.Integers <> q var
R13204:13213 AV.Integers Make min_signed def
R13220:13222 AV.Coqlib <> zle def
R13226:13235 AV.Integers Make max_signed def
R13224:13224 AV.Integers <> q var
R13268:13271 Coq.Init.Datatypes <> None constr
R13242:13245 Coq.Init.Datatypes <> Some constr
R13246:13246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13253:13254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13261:13261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13247:13250 AV.Integers Make repr def
R13252:13252 AV.Integers <> q var
R13255:13258 AV.Integers Make repr def
R13260:13260 AV.Integers <> r var
R13103:13106 Coq.Init.Datatypes <> None constr
prf 13396:13413 Make half_modulus_power
R13430:13432 Coq.Init.Logic <> :type_scope:x_'='_x not
R13418:13429 AV.Integers Make half_modulus def
R13433:13437 Coq.ZArith.Zpower <> two_p def
R13449:13451 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13440:13448 AV.Integers Make zwordsize def
R13472:13483 AV.Integers Make half_modulus def
R13494:13506 AV.Integers Make modulus_power thm
R13494:13506 AV.Integers Make modulus_power thm
R13494:13506 AV.Integers Make modulus_power thm
R13532:13534 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13523:13531 AV.Integers Make zwordsize def
R13532:13534 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13523:13531 AV.Integers Make zwordsize def
R13550:13558 AV.Integers Make zwordsize def
R13567:13572 Coq.ZArith.BinInt Z succ def
R13550:13558 AV.Integers Make zwordsize def
R13567:13572 Coq.ZArith.BinInt Z succ def
R13590:13596 Coq.ZArith.Zpower <> two_p_S thm
R13590:13596 Coq.ZArith.Zpower <> two_p_S thm
R13590:13596 Coq.ZArith.Zpower <> two_p_S thm
R13590:13596 Coq.ZArith.Zpower <> two_p_S thm
R13607:13616 Coq.ZArith.BinInt Z mul_comm thm
R13607:13616 Coq.ZArith.BinInt Z mul_comm thm
R13607:13616 Coq.ZArith.BinInt Z mul_comm thm
R13625:13634 Coq.ZArith.Zdiv <> Z_div_mult thm
R13625:13634 Coq.ZArith.Zdiv <> Z_div_mult thm
R13669:13680 AV.Integers Make wordsize_pos thm
R13669:13680 AV.Integers Make wordsize_pos thm
prf 13724:13743 Make half_modulus_modulus
R13753:13755 Coq.Init.Logic <> :type_scope:x_'='_x not
R13746:13752 AV.Integers Make modulus def
R13757:13759 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R13760:13771 AV.Integers Make half_modulus def
R13791:13808 AV.Integers Make half_modulus_power thm
R13791:13808 AV.Integers Make half_modulus_power thm
R13791:13808 AV.Integers Make half_modulus_power thm
R13819:13831 AV.Integers Make modulus_power thm
R13819:13831 AV.Integers Make modulus_power thm
R13819:13831 AV.Integers Make modulus_power thm
R13847:13853 Coq.ZArith.Zpower <> two_p_S thm
R13847:13853 Coq.ZArith.Zpower <> two_p_S thm
R13847:13853 Coq.ZArith.Zpower <> two_p_S thm
R13847:13853 Coq.ZArith.Zpower <> two_p_S thm
R13862:13868 Coq.Init.Logic <> f_equal thm
R13862:13868 Coq.Init.Logic <> f_equal thm
R13891:13902 AV.Integers Make wordsize_pos thm
R13891:13902 AV.Integers Make wordsize_pos thm
prf 14081:14096 Make half_modulus_pos
R14111:14113 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R14099:14110 AV.Integers Make half_modulus def
R14134:14151 AV.Integers Make half_modulus_power thm
R14134:14151 AV.Integers Make half_modulus_power thm
R14134:14151 AV.Integers Make half_modulus_power thm
R14160:14172 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R14160:14172 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R14186:14197 AV.Integers Make wordsize_pos thm
R14186:14197 AV.Integers Make wordsize_pos thm
prf 14220:14233 Make min_signed_neg
R14246:14248 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14236:14245 AV.Integers Make min_signed def
R14268:14277 AV.Integers Make min_signed def
R14291:14306 AV.Integers Make half_modulus_pos thm
R14291:14306 AV.Integers Make half_modulus_pos thm
prf 14329:14342 Make max_signed_pos
R14355:14358 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14345:14354 AV.Integers Make max_signed def
R14378:14387 AV.Integers Make max_signed def
R14401:14416 AV.Integers Make half_modulus_pos thm
R14401:14416 AV.Integers Make half_modulus_pos thm
prf 14439:14459 Make wordsize_max_unsigned
R14471:14474 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14462:14470 AV.Integers Make zwordsize def
R14475:14486 AV.Integers Make max_unsigned def
R14515:14517 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14506:14514 AV.Integers Make zwordsize def
R14518:14524 AV.Integers Make modulus def
R14515:14517 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14506:14514 AV.Integers Make zwordsize def
R14518:14524 AV.Integers Make modulus def
R14540:14552 AV.Integers Make modulus_power thm
R14540:14552 AV.Integers Make modulus_power thm
R14540:14552 AV.Integers Make modulus_power thm
R14561:14572 AV.Coqlib <> two_p_strict thm
R14561:14572 AV.Coqlib <> two_p_strict thm
R14590:14601 AV.Integers Make wordsize_pos thm
R14590:14601 AV.Integers Make wordsize_pos thm
R14620:14631 AV.Integers Make max_unsigned def
prf 14654:14678 Make two_wordsize_max_unsigned
R14698:14701 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14694:14696 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14682:14684 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14685:14693 AV.Integers Make zwordsize def
R14702:14713 AV.Integers Make max_unsigned def
R14750:14752 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14746:14748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14734:14736 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14737:14745 AV.Integers Make zwordsize def
R14753:14759 AV.Integers Make modulus def
R14750:14752 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14746:14748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14734:14736 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14737:14745 AV.Integers Make zwordsize def
R14753:14759 AV.Integers Make modulus def
R14775:14787 AV.Integers Make modulus_power thm
R14775:14787 AV.Integers Make modulus_power thm
R14775:14787 AV.Integers Make modulus_power thm
R14796:14809 AV.Coqlib <> two_p_strict_2 thm
R14796:14809 AV.Coqlib <> two_p_strict_2 thm
R14823:14834 AV.Integers Make wordsize_pos thm
R14823:14834 AV.Integers Make wordsize_pos thm
R14853:14864 AV.Integers Make max_unsigned def
prf 14887:14905 Make max_signed_unsigned
R14918:14920 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14908:14917 AV.Integers Make max_signed def
R14921:14932 AV.Integers Make max_unsigned def
R14951:14960 AV.Integers Make max_signed def
R14963:14974 AV.Integers Make max_unsigned def
R14985:15004 AV.Integers Make half_modulus_modulus thm
R14985:15004 AV.Integers Make half_modulus_modulus thm
R14985:15004 AV.Integers Make half_modulus_modulus thm
R15020:15035 AV.Integers Make half_modulus_pos thm
R15020:15035 AV.Integers Make half_modulus_pos thm
prf 15057:15072 Make unsigned_repr_eq
R15104:15106 Coq.Init.Logic <> :type_scope:x_'='_x not
R15087:15094 AV.Integers Make unsigned def
R15097:15100 AV.Integers Make repr def
R15102:15102 AV.Integers <> x var
R15107:15114 Coq.ZArith.BinInt Z modulo def
R15118:15124 AV.Integers Make modulus def
R15116:15116 AV.Integers <> x var
R15157:15172 AV.Integers Make Z_mod_modulus_eq thm
R15157:15172 AV.Integers Make Z_mod_modulus_eq thm
prf 15187:15200 Make signed_repr_eq
R15230:15232 Coq.Init.Logic <> :type_scope:x_'='_x not
R15215:15220 AV.Integers Make signed def
R15223:15226 AV.Integers Make repr def
R15228:15228 AV.Integers <> x var
R15236:15238 AV.Coqlib <> zlt def
R15261:15272 AV.Integers Make half_modulus def
R15241:15248 Coq.ZArith.BinInt Z modulo def
R15252:15258 AV.Integers Make modulus def
R15250:15250 AV.Integers <> x var
R15321:15323 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15303:15310 Coq.ZArith.BinInt Z modulo def
R15314:15320 AV.Integers Make modulus def
R15312:15312 AV.Integers <> x var
R15324:15330 AV.Integers Make modulus def
R15279:15286 Coq.ZArith.BinInt Z modulo def
R15290:15296 AV.Integers Make modulus def
R15288:15288 AV.Integers <> x var
R15357:15362 AV.Integers Make signed def
R15373:15388 AV.Integers Make unsigned_repr_eq thm
R15373:15388 AV.Integers Make unsigned_repr_eq thm
R15373:15388 AV.Integers Make unsigned_repr_eq thm
sec 15535:15543 Make EQ_MODULO
var 15556:15560 Make.EQ_MODULO modul
R15563:15563 Coq.Numbers.BinNums <> Z ind
var 15577:15585 Make.EQ_MODULO modul_pos
R15593:15595 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R15588:15592 AV.Integers <> Make.EQ_MODULO.modul var
def 15611:15615 Make eqmod
R15623:15623 Coq.Numbers.BinNums <> Z ind
R15636:15642 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15644:15645 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15647:15649 Coq.Init.Logic <> :type_scope:x_'='_x not
R15646:15646 AV.Integers <> x var
R15659:15661 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15651:15653 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R15650:15650 AV.Integers <> k var
R15654:15658 AV.Integers <> Make.EQ_MODULO.modul var
R15662:15662 AV.Integers <> y var
prf 15672:15681 Make eqmod_refl
R15694:15698 AV.Integers Make eqmod def
R15702:15702 AV.Integers <> x var
R15700:15700 AV.Integers <> x var
prf 15756:15766 Make eqmod_refl2
R15786:15789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15790:15794 AV.Integers Make eqmod def
R15798:15798 AV.Integers <> y var
R15796:15796 AV.Integers <> x var
R15782:15784 Coq.Init.Logic <> :type_scope:x_'='_x not
R15781:15781 AV.Integers <> x var
R15785:15785 AV.Integers <> y var
R15833:15842 AV.Integers Make eqmod_refl thm
R15833:15842 AV.Integers Make eqmod_refl thm
prf 15857:15865 Make eqmod_sym
R15889:15892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15893:15897 AV.Integers Make eqmod def
R15901:15901 AV.Integers <> x var
R15899:15899 AV.Integers <> y var
R15880:15884 AV.Integers Make eqmod def
R15888:15888 AV.Integers <> y var
R15886:15886 AV.Integers <> x var
R15945:15945 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R15945:15945 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 15977:15987 Make eqmod_trans
R16013:16016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16026:16029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16030:16034 AV.Integers Make eqmod def
R16038:16038 AV.Integers <> z var
R16036:16036 AV.Integers <> x var
R16017:16021 AV.Integers Make eqmod def
R16025:16025 AV.Integers <> z var
R16023:16023 AV.Integers <> y var
R16004:16008 AV.Integers Make eqmod def
R16012:16012 AV.Integers <> y var
R16010:16010 AV.Integers <> x var
R16099:16101 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16099:16101 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 16143:16156 Make eqmod_small_eq
R16182:16185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16200:16203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16218:16221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16223:16225 Coq.Init.Logic <> :type_scope:x_'='_x not
R16222:16222 AV.Integers <> x var
R16226:16226 AV.Integers <> y var
R16205:16208 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R16210:16212 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R16209:16209 AV.Integers <> y var
R16209:16209 AV.Integers <> y var
R16213:16217 AV.Integers <> Make.EQ_MODULO.modul var
R16187:16190 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R16192:16194 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R16191:16191 AV.Integers <> x var
R16191:16191 AV.Integers <> x var
R16195:16199 AV.Integers <> Make.EQ_MODULO.modul var
R16173:16177 AV.Integers Make eqmod def
R16181:16181 AV.Integers <> y var
R16179:16179 AV.Integers <> x var
R16277:16287 AV.Coqlib <> Zdiv_unique thm
R16277:16287 AV.Coqlib <> Zdiv_unique thm
R16323:16332 AV.Coqlib <> Zdiv_small thm
R16336:16340 AV.Integers <> Make.EQ_MODULO.modul var
R16323:16332 AV.Coqlib <> Zdiv_small thm
R16336:16340 AV.Integers <> Make.EQ_MODULO.modul var
R16323:16332 AV.Coqlib <> Zdiv_small thm
R16336:16340 AV.Integers <> Make.EQ_MODULO.modul var
prf 16380:16391 Make eqmod_mod_eq
R16417:16420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16432:16434 Coq.Init.Logic <> :type_scope:x_'='_x not
R16422:16426 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16421:16421 AV.Integers <> x var
R16427:16431 AV.Integers <> Make.EQ_MODULO.modul var
R16436:16440 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16435:16435 AV.Integers <> y var
R16441:16445 AV.Integers <> Make.EQ_MODULO.modul var
R16408:16412 AV.Integers Make eqmod def
R16416:16416 AV.Integers <> y var
R16414:16414 AV.Integers <> x var
R16495:16504 Coq.ZArith.BinInt Z add_comm thm
R16495:16504 Coq.ZArith.BinInt Z add_comm thm
R16495:16504 Coq.ZArith.BinInt Z add_comm thm
R16513:16522 Coq.ZArith.Zdiv <> Z_mod_plus thm
R16513:16522 Coq.ZArith.Zdiv <> Z_mod_plus thm
prf 16543:16551 Make eqmod_mod
R16566:16570 AV.Integers Make eqmod def
R16576:16580 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16575:16575 AV.Integers <> x var
R16581:16585 AV.Integers <> Make.EQ_MODULO.modul var
R16572:16572 AV.Integers <> x var
R16620:16622 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16623:16627 AV.Integers <> Make.EQ_MODULO.modul var
R16620:16622 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16623:16627 AV.Integers <> Make.EQ_MODULO.modul var
R16641:16650 Coq.ZArith.BinInt Z mul_comm thm
R16641:16650 Coq.ZArith.BinInt Z mul_comm thm
R16641:16650 Coq.ZArith.BinInt Z mul_comm thm
R16659:16670 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R16659:16670 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
prf 16691:16699 Make eqmod_add
R16729:16732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16742:16745 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16746:16750 AV.Integers Make eqmod def
R16762:16764 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16761:16761 AV.Integers <> b var
R16765:16765 AV.Integers <> d var
R16754:16756 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16753:16753 AV.Integers <> a var
R16757:16757 AV.Integers <> c var
R16733:16737 AV.Integers Make eqmod def
R16741:16741 AV.Integers <> d var
R16739:16739 AV.Integers <> c var
R16720:16724 AV.Integers Make eqmod def
R16728:16728 AV.Integers <> b var
R16726:16726 AV.Integers <> a var
R16847:16849 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16847:16849 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 16873:16881 Make eqmod_neg
R16907:16910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16911:16915 AV.Integers Make eqmod def
R16923:16923 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16924:16924 AV.Integers <> y var
R16918:16918 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16919:16919 AV.Integers <> x var
R16898:16902 AV.Integers Make eqmod def
R16906:16906 AV.Integers <> y var
R16904:16904 AV.Integers <> x var
R16969:16969 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16969:16969 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 17004:17012 Make eqmod_sub
R17042:17045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17055:17058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17059:17063 AV.Integers Make eqmod def
R17075:17077 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R17074:17074 AV.Integers <> b var
R17078:17078 AV.Integers <> d var
R17067:17069 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R17066:17066 AV.Integers <> a var
R17070:17070 AV.Integers <> c var
R17046:17050 AV.Integers Make eqmod def
R17054:17054 AV.Integers <> d var
R17052:17052 AV.Integers <> c var
R17033:17037 AV.Integers Make eqmod def
R17041:17041 AV.Integers <> b var
R17039:17039 AV.Integers <> a var
R17160:17162 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R17160:17162 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
prf 17186:17195 Make eqmod_mult
R17225:17228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17238:17241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17242:17246 AV.Integers Make eqmod def
R17258:17260 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17257:17257 AV.Integers <> c var
R17261:17261 AV.Integers <> d var
R17250:17252 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17249:17249 AV.Integers <> a var
R17253:17253 AV.Integers <> b var
R17229:17233 AV.Integers Make eqmod def
R17237:17237 AV.Integers <> d var
R17235:17235 AV.Integers <> b var
R17216:17220 AV.Integers Make eqmod def
R17224:17224 AV.Integers <> c var
R17222:17222 AV.Integers <> a var
R17367:17369 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17358:17360 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17350:17352 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17345:17347 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17353:17357 AV.Integers <> Make.EQ_MODULO.modul var
R17362:17364 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17372:17374 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17367:17369 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17358:17360 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17350:17352 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17345:17347 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17353:17357 AV.Integers <> Make.EQ_MODULO.modul var
R17362:17364 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17372:17374 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17397:17405 AV.Integers Make.EQ_MODULO <> sec
prf 17415:17427 Make eqmod_divides
R17459:17462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17475:17478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17479:17483 AV.Integers Make eqmod def
R17489:17489 AV.Integers <> y var
R17487:17487 AV.Integers <> x var
R17485:17485 AV.Integers <> m var
R17463:17470 Coq.ZArith.BinInt Z divide def
R17474:17474 AV.Integers <> n var
R17472:17472 AV.Integers <> m var
R17448:17452 AV.Integers Make eqmod def
R17458:17458 AV.Integers <> y var
R17456:17456 AV.Integers <> x var
R17454:17454 AV.Integers <> n var
R17570:17570 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17570:17570 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17587:17597 Coq.ZArith.BinInt Z mul_assoc thm
R17587:17597 Coq.ZArith.BinInt Z mul_assoc thm
R17587:17597 Coq.ZArith.BinInt Z mul_assoc thm
def 17777:17779 Make eqm
R17784:17788 AV.Integers Make eqmod def
R17790:17796 AV.Integers Make modulus def
prf 17806:17813 Make eqm_refl
R17826:17828 AV.Integers Make eqm def
R17832:17832 AV.Integers <> x var
R17830:17830 AV.Integers <> x var
R17842:17851 AV.Integers Make eqmod_refl thm
R17853:17859 AV.Integers Make modulus def
prf 17899:17907 Make eqm_refl2
R17929:17932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17933:17935 AV.Integers Make eqm def
R17939:17939 AV.Integers <> y var
R17937:17937 AV.Integers <> x var
R17925:17927 Coq.Init.Logic <> :type_scope:x_'='_x not
R17924:17924 AV.Integers <> x var
R17928:17928 AV.Integers <> y var
R17949:17959 AV.Integers Make eqmod_refl2 thm
R17961:17967 AV.Integers Make modulus def
prf 18008:18014 Make eqm_sym
R18036:18039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18040:18042 AV.Integers Make eqm def
R18046:18046 AV.Integers <> x var
R18044:18044 AV.Integers <> y var
R18029:18031 AV.Integers Make eqm def
R18035:18035 AV.Integers <> y var
R18033:18033 AV.Integers <> x var
R18056:18064 AV.Integers Make eqmod_sym thm
R18066:18072 AV.Integers Make modulus def
prf 18111:18119 Make eqm_trans
R18143:18146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18154:18157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18158:18160 AV.Integers Make eqm def
R18164:18164 AV.Integers <> z var
R18162:18162 AV.Integers <> x var
R18147:18149 AV.Integers Make eqm def
R18153:18153 AV.Integers <> z var
R18151:18151 AV.Integers <> y var
R18136:18138 AV.Integers Make eqm def
R18142:18142 AV.Integers <> y var
R18140:18140 AV.Integers <> x var
R18174:18184 AV.Integers Make eqmod_trans thm
R18186:18192 AV.Integers Make modulus def
prf 18233:18244 Make eqm_small_eq
R18268:18271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18288:18291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18308:18311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18313:18315 Coq.Init.Logic <> :type_scope:x_'='_x not
R18312:18312 AV.Integers <> x var
R18316:18316 AV.Integers <> y var
R18293:18296 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R18298:18300 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R18297:18297 AV.Integers <> y var
R18297:18297 AV.Integers <> y var
R18301:18307 AV.Integers Make modulus def
R18273:18276 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R18278:18280 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R18277:18277 AV.Integers <> x var
R18277:18277 AV.Integers <> x var
R18281:18287 AV.Integers Make modulus def
R18261:18263 AV.Integers Make eqm def
R18267:18267 AV.Integers <> y var
R18265:18265 AV.Integers <> x var
R18326:18339 AV.Integers Make eqmod_small_eq thm
R18341:18347 AV.Integers Make modulus def
prf 18391:18397 Make eqm_add
R18425:18428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18436:18439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18440:18442 AV.Integers Make eqm def
R18454:18456 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18453:18453 AV.Integers <> b var
R18457:18457 AV.Integers <> d var
R18446:18448 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18445:18445 AV.Integers <> a var
R18449:18449 AV.Integers <> c var
R18429:18431 AV.Integers Make eqm def
R18435:18435 AV.Integers <> d var
R18433:18433 AV.Integers <> c var
R18418:18420 AV.Integers Make eqm def
R18424:18424 AV.Integers <> b var
R18422:18422 AV.Integers <> a var
R18468:18476 AV.Integers Make eqmod_add thm
R18478:18484 AV.Integers Make modulus def
prf 18523:18529 Make eqm_neg
R18553:18556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18557:18559 AV.Integers Make eqm def
R18567:18567 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R18568:18568 AV.Integers <> y var
R18562:18562 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R18563:18563 AV.Integers <> x var
R18546:18548 AV.Integers Make eqm def
R18552:18552 AV.Integers <> y var
R18550:18550 AV.Integers <> x var
R18579:18587 AV.Integers Make eqmod_neg thm
R18589:18595 AV.Integers Make modulus def
prf 18634:18640 Make eqm_sub
R18668:18671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18679:18682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18683:18685 AV.Integers Make eqm def
R18697:18699 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18696:18696 AV.Integers <> b var
R18700:18700 AV.Integers <> d var
R18689:18691 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18688:18688 AV.Integers <> a var
R18692:18692 AV.Integers <> c var
R18672:18674 AV.Integers Make eqm def
R18678:18678 AV.Integers <> d var
R18676:18676 AV.Integers <> c var
R18661:18663 AV.Integers Make eqm def
R18667:18667 AV.Integers <> b var
R18665:18665 AV.Integers <> a var
R18711:18719 AV.Integers Make eqmod_sub thm
R18721:18727 AV.Integers Make modulus def
prf 18766:18773 Make eqm_mult
R18801:18804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18812:18815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18816:18818 AV.Integers Make eqm def
R18830:18832 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18829:18829 AV.Integers <> c var
R18833:18833 AV.Integers <> d var
R18822:18824 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18821:18821 AV.Integers <> a var
R18825:18825 AV.Integers <> b var
R18805:18807 AV.Integers Make eqm def
R18811:18811 AV.Integers <> d var
R18809:18809 AV.Integers <> b var
R18794:18796 AV.Integers Make eqm def
R18800:18800 AV.Integers <> c var
R18798:18798 AV.Integers <> a var
R18844:18853 AV.Integers Make eqmod_mult thm
R18855:18861 AV.Integers Make modulus def
prf 18962:18973 Make eqm_samerepr
R18995:18998 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19005:19007 Coq.Init.Logic <> :type_scope:x_'='_x not
R18999:19002 AV.Integers Make repr def
R19004:19004 AV.Integers <> x var
R19008:19011 AV.Integers Make repr def
R19013:19013 AV.Integers <> y var
R18988:18990 AV.Integers Make eqm def
R18994:18994 AV.Integers <> y var
R18992:18992 AV.Integers <> x var
R19040:19043 AV.Integers Make repr def
R19052:19059 AV.Integers Make mkint_eq thm
R19052:19059 AV.Integers Make mkint_eq thm
R19073:19088 AV.Integers Make Z_mod_modulus_eq thm
R19073:19088 AV.Integers Make Z_mod_modulus_eq thm
R19073:19088 AV.Integers Make Z_mod_modulus_eq thm
R19073:19088 AV.Integers Make Z_mod_modulus_eq thm
R19073:19088 AV.Integers Make Z_mod_modulus_eq thm
R19097:19108 AV.Integers Make eqmod_mod_eq thm
R19097:19108 AV.Integers Make eqmod_mod_eq thm
prf 19148:19164 Make eqm_unsigned_repr
R19179:19181 AV.Integers Make eqm def
R19186:19193 AV.Integers Make unsigned def
R19196:19199 AV.Integers Make repr def
R19201:19201 AV.Integers <> z var
R19183:19183 AV.Integers <> z var
R19222:19224 AV.Integers Make eqm def
R19243:19258 AV.Integers Make unsigned_repr_eq thm
R19243:19258 AV.Integers Make unsigned_repr_eq thm
R19243:19258 AV.Integers Make unsigned_repr_eq thm
R19267:19275 AV.Integers Make eqmod_mod thm
R19267:19275 AV.Integers Make eqmod_mod thm
prf 19344:19362 Make eqm_unsigned_repr_l
R19386:19389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19390:19392 AV.Integers Make eqm def
R19414:19414 AV.Integers <> b var
R19395:19402 AV.Integers Make unsigned def
R19405:19408 AV.Integers Make repr def
R19410:19410 AV.Integers <> a var
R19379:19381 AV.Integers Make eqm def
R19385:19385 AV.Integers <> b var
R19383:19383 AV.Integers <> a var
R19440:19448 AV.Integers Make eqm_trans thm
R19440:19448 AV.Integers Make eqm_trans thm
R19466:19472 AV.Integers Make eqm_sym thm
R19466:19472 AV.Integers Make eqm_sym thm
R19481:19497 AV.Integers Make eqm_unsigned_repr thm
R19481:19497 AV.Integers Make eqm_unsigned_repr thm
prf 19558:19576 Make eqm_unsigned_repr_r
R19600:19603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19604:19606 AV.Integers Make eqm def
R19611:19618 AV.Integers Make unsigned def
R19621:19624 AV.Integers Make repr def
R19626:19626 AV.Integers <> b var
R19608:19608 AV.Integers <> a var
R19593:19595 AV.Integers Make eqm def
R19599:19599 AV.Integers <> b var
R19597:19597 AV.Integers <> a var
R19654:19662 AV.Integers Make eqm_trans thm
R19654:19662 AV.Integers Make eqm_trans thm
R19686:19702 AV.Integers Make eqm_unsigned_repr thm
R19686:19702 AV.Integers Make eqm_unsigned_repr thm
prf 19757:19775 Make eqm_signed_unsigned
R19790:19792 AV.Integers Make eqm def
R19806:19813 AV.Integers Make unsigned def
R19815:19815 AV.Integers <> x var
R19795:19800 AV.Integers Make signed def
R19802:19802 AV.Integers <> x var
R19848:19853 AV.Integers Make signed def
R19866:19873 AV.Integers Make unsigned def
R19866:19873 AV.Integers Make unsigned def
R19887:19889 AV.Coqlib <> zlt def
R19893:19904 AV.Integers Make half_modulus def
R19887:19889 AV.Coqlib <> zlt def
R19893:19904 AV.Integers Make half_modulus def
R19923:19932 AV.Integers Make eqmod_refl thm
R19923:19932 AV.Integers Make eqmod_refl thm
prf 19973:19986 Make unsigned_range
R20002:20005 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R20016:20018 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R20006:20013 AV.Integers Make unsigned def
R20015:20015 AV.Integers <> i var
R20006:20013 AV.Integers Make unsigned def
R20015:20015 AV.Integers <> i var
R20019:20025 AV.Integers Make modulus def
prf 20112:20127 Make unsigned_range_2
R20143:20146 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20157:20160 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20147:20154 AV.Integers Make unsigned def
R20156:20156 AV.Integers <> i var
R20147:20154 AV.Integers Make unsigned def
R20156:20156 AV.Integers <> i var
R20161:20172 AV.Integers Make max_unsigned def
R20198:20209 AV.Integers Make max_unsigned def
R20226:20239 AV.Integers Make unsigned_range thm
R20226:20239 AV.Integers Make unsigned_range thm
prf 20303:20314 Make signed_range
R20339:20342 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20351:20354 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20329:20338 AV.Integers Make min_signed def
R20343:20348 AV.Integers Make signed def
R20350:20350 AV.Integers <> i var
R20343:20348 AV.Integers Make signed def
R20350:20350 AV.Integers <> i var
R20355:20364 AV.Integers Make max_signed def
R20391:20396 AV.Integers Make signed def
R20413:20426 AV.Integers Make unsigned_range thm
R20413:20426 AV.Integers Make unsigned_range thm
R20442:20449 AV.Integers Make unsigned def
R20442:20449 AV.Integers Make unsigned def
R20471:20473 AV.Coqlib <> zlt def
R20477:20488 AV.Integers Make half_modulus def
R20471:20473 AV.Coqlib <> zlt def
R20477:20488 AV.Integers Make half_modulus def
R20508:20517 AV.Integers Make max_signed def
R20531:20544 AV.Integers Make min_signed_neg thm
R20531:20544 AV.Integers Make min_signed_neg thm
R20563:20572 AV.Integers Make min_signed def
R20575:20584 AV.Integers Make max_signed def
R20597:20616 AV.Integers Make half_modulus_modulus thm
R20597:20616 AV.Integers Make half_modulus_modulus thm
R20597:20616 AV.Integers Make half_modulus_modulus thm
prf 20645:20657 Make repr_unsigned
R20689:20691 Coq.Init.Logic <> :type_scope:x_'='_x not
R20672:20675 AV.Integers Make repr def
R20678:20685 AV.Integers Make unsigned def
R20687:20687 AV.Integers <> i var
R20692:20692 AV.Integers <> i var
R20730:20733 AV.Integers Make repr def
R20742:20749 AV.Integers Make mkint_eq thm
R20742:20749 AV.Integers Make mkint_eq thm
R20762:20777 AV.Integers Make Z_mod_modulus_eq thm
R20762:20777 AV.Integers Make Z_mod_modulus_eq thm
R20762:20777 AV.Integers Make Z_mod_modulus_eq thm
R20786:20795 AV.Coqlib <> Zmod_small thm
R20786:20795 AV.Coqlib <> Zmod_small thm
prf 20851:20861 Make repr_signed
R20891:20893 Coq.Init.Logic <> :type_scope:x_'='_x not
R20876:20879 AV.Integers Make repr def
R20882:20887 AV.Integers Make signed def
R20889:20889 AV.Integers <> i var
R20894:20894 AV.Integers <> i var
R20928:20931 AV.Integers Make repr def
R20934:20941 AV.Integers Make unsigned def
R20928:20931 AV.Integers Make repr def
R20934:20941 AV.Integers Make unsigned def
R20956:20967 AV.Integers Make eqm_samerepr thm
R20956:20967 AV.Integers Make eqm_samerepr thm
R20976:20994 AV.Integers Make eqm_signed_unsigned thm
R20976:20994 AV.Integers Make eqm_signed_unsigned thm
R21058:21061 AV.Integers Make repr def
prf 21071:21081 Make eqm_repr_eq
R21114:21117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21124:21126 Coq.Init.Logic <> :type_scope:x_'='_x not
R21118:21121 AV.Integers Make repr def
R21123:21123 AV.Integers <> x var
R21127:21127 AV.Integers <> y var
R21096:21098 AV.Integers Make eqm def
R21103:21110 AV.Integers Make unsigned def
R21112:21112 AV.Integers <> y var
R21100:21100 AV.Integers <> x var
R21159:21171 AV.Integers Make repr_unsigned thm
R21159:21171 AV.Integers Make repr_unsigned thm
R21159:21171 AV.Integers Make repr_unsigned thm
R21183:21194 AV.Integers Make eqm_samerepr thm
R21183:21194 AV.Integers Make eqm_samerepr thm
prf 21217:21229 Make unsigned_repr
R21266:21269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21287:21289 Coq.Init.Logic <> :type_scope:x_'='_x not
R21270:21277 AV.Integers Make unsigned def
R21280:21283 AV.Integers Make repr def
R21285:21285 AV.Integers <> z var
R21290:21290 AV.Integers <> z var
R21245:21248 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R21250:21253 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R21249:21249 AV.Integers <> z var
R21249:21249 AV.Integers <> z var
R21254:21265 AV.Integers Make max_unsigned def
R21318:21333 AV.Integers Make unsigned_repr_eq thm
R21318:21333 AV.Integers Make unsigned_repr_eq thm
R21318:21333 AV.Integers Make unsigned_repr_eq thm
R21344:21353 AV.Coqlib <> Zmod_small thm
R21344:21353 AV.Coqlib <> Zmod_small thm
R21363:21374 AV.Integers Make max_unsigned def
prf 21437:21447 Make signed_repr
R21491:21494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21510:21512 Coq.Init.Logic <> :type_scope:x_'='_x not
R21495:21500 AV.Integers Make signed def
R21503:21506 AV.Integers Make repr def
R21508:21508 AV.Integers <> z var
R21513:21513 AV.Integers <> z var
R21472:21475 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R21477:21480 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R21462:21471 AV.Integers Make min_signed def
R21476:21476 AV.Integers <> z var
R21476:21476 AV.Integers <> z var
R21481:21490 AV.Integers Make max_signed def
R21540:21545 AV.Integers Make signed def
R21558:21560 AV.Coqlib <> zle def
R21558:21560 AV.Coqlib <> zle def
R21579:21586 AV.Integers Make unsigned def
R21589:21592 AV.Integers Make repr def
R21579:21586 AV.Integers Make unsigned def
R21589:21592 AV.Integers Make repr def
R21616:21623 AV.Coqlib <> zlt_true thm
R21616:21623 AV.Coqlib <> zlt_true thm
R21616:21623 AV.Coqlib <> zlt_true thm
R21616:21623 AV.Coqlib <> zlt_true thm
R21639:21648 AV.Integers Make max_signed def
R21681:21693 AV.Integers Make unsigned_repr thm
R21681:21693 AV.Integers Make unsigned_repr thm
R21707:21725 AV.Integers Make max_signed_unsigned thm
R21707:21725 AV.Integers Make max_signed_unsigned thm
R21750:21752 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21753:21759 AV.Integers Make modulus def
R21750:21752 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21753:21759 AV.Integers Make modulus def
R21774:21777 AV.Integers Make repr def
R21788:21791 AV.Integers Make repr def
R21774:21777 AV.Integers Make repr def
R21788:21791 AV.Integers Make repr def
R21809:21816 AV.Integers Make unsigned def
R21819:21822 AV.Integers Make repr def
R21809:21816 AV.Integers Make unsigned def
R21819:21822 AV.Integers Make repr def
R21848:21856 AV.Coqlib <> zlt_false thm
R21848:21856 AV.Coqlib <> zlt_false thm
R21848:21856 AV.Coqlib <> zlt_false thm
R21848:21856 AV.Coqlib <> zlt_false thm
R21897:21906 AV.Integers Make min_signed def
R21924:21943 AV.Integers Make half_modulus_modulus thm
R21924:21943 AV.Integers Make half_modulus_modulus thm
R21924:21943 AV.Integers Make half_modulus_modulus thm
R21971:21983 AV.Integers Make unsigned_repr thm
R21971:21983 AV.Integers Make unsigned_repr thm
R21999:22010 AV.Integers Make max_unsigned def
R22020:22029 AV.Integers Make min_signed def
R22032:22041 AV.Integers Make max_signed def
R22059:22078 AV.Integers Make half_modulus_modulus thm
R22059:22078 AV.Integers Make half_modulus_modulus thm
R22059:22078 AV.Integers Make half_modulus_modulus thm
R22096:22107 AV.Integers Make eqm_samerepr thm
R22096:22107 AV.Integers Make eqm_samerepr thm
prf 22157:22174 Make signed_eq_unsigned
R22213:22216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22225:22227 Coq.Init.Logic <> :type_scope:x_'='_x not
R22217:22222 AV.Integers Make signed def
R22224:22224 AV.Integers <> x var
R22228:22235 AV.Integers Make unsigned def
R22237:22237 AV.Integers <> x var
R22199:22202 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22189:22196 AV.Integers Make unsigned def
R22198:22198 AV.Integers <> x var
R22203:22212 AV.Integers Make max_signed def
R22264:22269 AV.Integers Make signed def
R22282:22284 AV.Coqlib <> zlt def
R22299:22310 AV.Integers Make half_modulus def
R22287:22294 AV.Integers Make unsigned def
R22282:22284 AV.Coqlib <> zlt def
R22299:22310 AV.Integers Make half_modulus def
R22287:22294 AV.Integers Make unsigned def
R22329:22338 AV.Integers Make max_signed def
prf 22380:22394 Make signed_positive
R22422:22426 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R22417:22420 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R22409:22414 AV.Integers Make signed def
R22416:22416 AV.Integers <> x var
R22437:22440 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22427:22434 AV.Integers Make unsigned def
R22436:22436 AV.Integers <> x var
R22441:22450 AV.Integers Make max_signed def
R22477:22482 AV.Integers Make signed def
R22485:22494 AV.Integers Make max_signed def
R22511:22524 AV.Integers Make unsigned_range thm
R22529:22548 AV.Integers Make half_modulus_modulus thm
R22550:22565 AV.Integers Make half_modulus_pos thm
R22511:22524 AV.Integers Make unsigned_range thm
R22529:22548 AV.Integers Make half_modulus_modulus thm
R22550:22565 AV.Integers Make half_modulus_pos thm
R22588:22590 AV.Coqlib <> zlt def
R22605:22616 AV.Integers Make half_modulus def
R22593:22600 AV.Integers Make unsigned def
R22588:22590 AV.Coqlib <> zlt def
R22605:22616 AV.Integers Make half_modulus def
R22593:22600 AV.Integers Make unsigned def
prf 22687:22699 Make unsigned_zero
R22715:22717 Coq.Init.Logic <> :type_scope:x_'='_x not
R22702:22709 AV.Integers Make unsigned def
R22711:22714 AV.Integers Make zero def
R22737:22740 AV.Integers Make zero def
R22751:22766 AV.Integers Make unsigned_repr_eq thm
R22751:22766 AV.Integers Make unsigned_repr_eq thm
R22751:22766 AV.Integers Make unsigned_repr_eq thm
R22775:22782 Coq.ZArith.Zdiv <> Zmod_0_l thm
R22775:22782 Coq.ZArith.Zdiv <> Zmod_0_l thm
prf 22799:22810 Make unsigned_one
R22825:22827 Coq.Init.Logic <> :type_scope:x_'='_x not
R22813:22820 AV.Integers Make unsigned def
R22822:22824 AV.Integers Make one def
R22847:22849 AV.Integers Make one def
R22860:22875 AV.Integers Make unsigned_repr_eq thm
R22860:22875 AV.Integers Make unsigned_repr_eq thm
R22860:22875 AV.Integers Make unsigned_repr_eq thm
R22884:22893 AV.Coqlib <> Zmod_small thm
R22884:22893 AV.Coqlib <> Zmod_small thm
R22919:22925 AV.Integers Make modulus def
R22936:22943 AV.Integers Make wordsize def
R22951:22951 Coq.Init.Datatypes <> S constr
R22953:22965 Coq.Init.Nat <> pred def
R22967:22974 AV.Integers Make wordsize def
R22936:22943 AV.Integers Make wordsize def
R22951:22951 Coq.Init.Datatypes <> S constr
R22953:22965 Coq.Init.Nat <> pred def
R22967:22974 AV.Integers Make wordsize def
R22989:23003 Coq.ZArith.Zpower <> two_power_nat_S thm
R22989:23003 Coq.ZArith.Zpower <> two_power_nat_S thm
R22989:23003 Coq.ZArith.Zpower <> two_power_nat_S thm
R23018:23034 AV.Coqlib <> two_power_nat_pos thm
R23037:23049 Coq.Init.Nat <> pred def
R23051:23058 AV.Integers Make wordsize def
R23018:23034 AV.Coqlib <> two_power_nat_pos thm
R23037:23049 Coq.Init.Nat <> pred def
R23051:23058 AV.Integers Make wordsize def
R23085:23096 AV.Integers Make wordsize_pos thm
R23085:23096 AV.Integers Make wordsize_pos thm
R23106:23114 AV.Integers Make zwordsize def
prf 23138:23150 Make unsigned_mone
R23166:23168 Coq.Init.Logic <> :type_scope:x_'='_x not
R23153:23160 AV.Integers Make unsigned def
R23162:23165 AV.Integers Make mone def
R23176:23178 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23169:23175 AV.Integers Make modulus def
R23198:23201 AV.Integers Make mone def
R23212:23227 AV.Integers Make unsigned_repr_eq thm
R23212:23227 AV.Integers Make unsigned_repr_eq thm
R23212:23227 AV.Integers Make unsigned_repr_eq thm
R23251:23251 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23263:23266 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23259:23261 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23252:23258 AV.Integers Make modulus def
R23267:23267 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R23270:23273 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R23274:23280 AV.Integers Make modulus def
R23251:23251 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23263:23266 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23259:23261 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23252:23258 AV.Integers Make modulus def
R23267:23267 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R23270:23273 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R23274:23280 AV.Integers Make modulus def
R23294:23308 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R23294:23308 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R23294:23308 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R23317:23326 AV.Coqlib <> Zmod_small thm
R23317:23326 AV.Coqlib <> Zmod_small thm
R23342:23352 AV.Integers Make modulus_pos thm
R23342:23352 AV.Integers Make modulus_pos thm
prf 23383:23393 Make signed_zero
R23407:23409 Coq.Init.Logic <> :type_scope:x_'='_x not
R23396:23401 AV.Integers Make signed def
R23403:23406 AV.Integers Make zero def
R23429:23434 AV.Integers Make signed def
R23445:23457 AV.Integers Make unsigned_zero thm
R23445:23457 AV.Integers Make unsigned_zero thm
R23445:23457 AV.Integers Make unsigned_zero thm
R23466:23473 AV.Coqlib <> zlt_true thm
R23466:23473 AV.Coqlib <> zlt_true thm
R23487:23502 AV.Integers Make half_modulus_pos thm
R23487:23502 AV.Integers Make half_modulus_pos thm
prf 23526:23535 Make signed_one
R23551:23554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23565:23567 Coq.Init.Logic <> :type_scope:x_'='_x not
R23555:23560 AV.Integers Make signed def
R23562:23564 AV.Integers Make one def
R23547:23549 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R23538:23546 AV.Integers Make zwordsize def
R23595:23600 AV.Integers Make signed def
R23611:23622 AV.Integers Make unsigned_one thm
R23611:23622 AV.Integers Make unsigned_one thm
R23611:23622 AV.Integers Make unsigned_one thm
R23631:23638 AV.Coqlib <> zlt_true thm
R23631:23638 AV.Coqlib <> zlt_true thm
R23659:23663 Coq.ZArith.Zpower <> two_p def
R23659:23663 Coq.ZArith.Zpower <> two_p def
R23677:23694 AV.Integers Make half_modulus_power thm
R23677:23694 AV.Integers Make half_modulus_power thm
R23677:23694 AV.Integers Make half_modulus_power thm
R23703:23723 AV.Coqlib <> two_p_monotone_strict thm
R23703:23723 AV.Coqlib <> two_p_monotone_strict thm
prf 23748:23758 Make signed_mone
R23772:23774 Coq.Init.Logic <> :type_scope:x_'='_x not
R23761:23766 AV.Integers Make signed def
R23768:23771 AV.Integers Make mone def
R23795:23800 AV.Integers Make signed def
R23811:23823 AV.Integers Make unsigned_mone thm
R23811:23823 AV.Integers Make unsigned_mone thm
R23811:23823 AV.Integers Make unsigned_mone thm
R23836:23844 AV.Coqlib <> zlt_false thm
R23836:23844 AV.Coqlib <> zlt_false thm
R23836:23844 AV.Coqlib <> zlt_false thm
R23836:23844 AV.Coqlib <> zlt_false thm
R23864:23883 AV.Integers Make half_modulus_modulus thm
R23864:23883 AV.Integers Make half_modulus_modulus thm
R23864:23883 AV.Integers Make half_modulus_modulus thm
R23897:23912 AV.Integers Make half_modulus_pos thm
R23897:23912 AV.Integers Make half_modulus_pos thm
prf 23936:23947 Make one_not_zero
R23953:23956 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23950:23952 AV.Integers Make one def
R23957:23960 AV.Integers Make zero def
R23992:23995 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23980:23987 AV.Integers Make unsigned def
R23989:23991 AV.Integers Make one def
R23996:24003 AV.Integers Make unsigned def
R24005:24008 AV.Integers Make zero def
R23992:23995 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23980:23987 AV.Integers Make unsigned def
R23989:23991 AV.Integers Make one def
R23996:24003 AV.Integers Make unsigned def
R24005:24008 AV.Integers Make zero def
R24022:24033 AV.Integers Make unsigned_one thm
R24044:24056 AV.Integers Make unsigned_zero thm
R24022:24033 AV.Integers Make unsigned_one thm
R24022:24033 AV.Integers Make unsigned_one thm
R24044:24056 AV.Integers Make unsigned_zero thm
R24044:24056 AV.Integers Make unsigned_zero thm
prf 24099:24120 Make unsigned_repr_wordsize
R24143:24145 Coq.Init.Logic <> :type_scope:x_'='_x not
R24125:24132 AV.Integers Make unsigned def
R24134:24142 AV.Integers Make iwordsize def
R24146:24154 AV.Integers Make zwordsize def
R24173:24181 AV.Integers Make iwordsize def
R24192:24207 AV.Integers Make unsigned_repr_eq thm
R24192:24207 AV.Integers Make unsigned_repr_eq thm
R24192:24207 AV.Integers Make unsigned_repr_eq thm
R24216:24225 AV.Coqlib <> Zmod_small thm
R24216:24225 AV.Coqlib <> Zmod_small thm
R24241:24252 AV.Integers Make wordsize_pos thm
R24254:24274 AV.Integers Make wordsize_max_unsigned thm
R24284:24295 AV.Integers Make max_unsigned def
R24241:24252 AV.Integers Make wordsize_pos thm
R24254:24274 AV.Integers Make wordsize_max_unsigned thm
prf 24353:24358 Make eq_sym
R24381:24383 Coq.Init.Logic <> :type_scope:x_'='_x not
R24375:24376 AV.Integers Make eq def
R24380:24380 AV.Integers <> y var
R24378:24378 AV.Integers <> x var
R24384:24385 AV.Integers Make eq def
R24389:24389 AV.Integers <> x var
R24387:24387 AV.Integers <> y var
R24416:24417 AV.Integers Make eq def
R24426:24428 AV.Coqlib <> zeq def
R24444:24451 AV.Integers Make unsigned def
R24431:24438 AV.Integers Make unsigned def
R24426:24428 AV.Coqlib <> zeq def
R24444:24451 AV.Integers Make unsigned def
R24431:24438 AV.Integers Make unsigned def
R24486:24493 AV.Coqlib <> zeq_true thm
R24486:24493 AV.Coqlib <> zeq_true thm
R24486:24493 AV.Coqlib <> zeq_true thm
R24512:24520 AV.Coqlib <> zeq_false thm
R24512:24520 AV.Coqlib <> zeq_false thm
R24512:24520 AV.Coqlib <> zeq_false thm
R24512:24520 AV.Coqlib <> zeq_false thm
prf 24549:24555 Make eq_spec
R24571:24573 AV.Integers Make int rec
R24580:24581 AV.Integers Make eq def
R24585:24585 AV.Integers <> y var
R24583:24583 AV.Integers <> x var
R24604:24607 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24603:24603 AV.Integers <> x var
R24608:24608 AV.Integers <> y var
R24593:24595 Coq.Init.Logic <> :type_scope:x_'='_x not
R24592:24592 AV.Integers <> x var
R24596:24596 AV.Integers <> y var
R24635:24636 AV.Integers Make eq def
R24645:24650 AV.Integers Make eq_dec thm
R24645:24650 AV.Integers Make eq_dec thm
R24684:24691 AV.Coqlib <> zeq_true thm
R24684:24691 AV.Coqlib <> zeq_true thm
R24684:24691 AV.Coqlib <> zeq_true thm
R24710:24718 AV.Coqlib <> zeq_false thm
R24710:24718 AV.Coqlib <> zeq_false thm
R24710:24718 AV.Coqlib <> zeq_false thm
R24710:24718 AV.Coqlib <> zeq_false thm
R24788:24795 AV.Integers Make mkint_eq thm
R24788:24795 AV.Integers Make mkint_eq thm
prf 24818:24824 Make eq_true
R24843:24845 Coq.Init.Logic <> :type_scope:x_'='_x not
R24837:24838 AV.Integers Make eq def
R24842:24842 AV.Integers <> x var
R24840:24840 AV.Integers <> x var
R24846:24849 Coq.Init.Datatypes <> true constr
R24881:24887 AV.Integers Make eq_spec thm
R24901:24902 AV.Integers Make eq def
R24881:24887 AV.Integers Make eq_spec thm
R24901:24902 AV.Integers Make eq def
prf 24944:24951 Make eq_false
R24972:24975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24982:24984 Coq.Init.Logic <> :type_scope:x_'='_x not
R24976:24977 AV.Integers Make eq def
R24981:24981 AV.Integers <> y var
R24979:24979 AV.Integers <> x var
R24985:24989 Coq.Init.Datatypes <> false constr
R24967:24970 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24966:24966 AV.Integers <> x var
R24971:24971 AV.Integers <> y var
R25021:25027 AV.Integers Make eq_spec thm
R25041:25042 AV.Integers Make eq def
R25021:25027 AV.Integers Make eq_spec thm
R25041:25042 AV.Integers Make eq def
prf 25084:25092 Make eq_signed
R25115:25117 Coq.Init.Logic <> :type_scope:x_'='_x not
R25109:25110 AV.Integers Make eq def
R25114:25114 AV.Integers <> y var
R25112:25112 AV.Integers <> x var
R25121:25123 AV.Coqlib <> zeq def
R25137:25142 AV.Integers Make signed def
R25144:25144 AV.Integers <> y var
R25126:25131 AV.Integers Make signed def
R25133:25133 AV.Integers <> x var
R25162:25166 Coq.Init.Datatypes <> false constr
R25152:25155 Coq.Init.Datatypes <> true constr
R25195:25196 AV.Integers Make eq def
R25198:25204 AV.Integers Make eq_spec thm
R25230:25237 AV.Coqlib <> zeq_true thm
R25230:25237 AV.Coqlib <> zeq_true thm
R25230:25237 AV.Coqlib <> zeq_true thm
R25258:25260 AV.Coqlib <> zeq def
R25274:25279 AV.Integers Make signed def
R25263:25268 AV.Integers Make signed def
R25258:25260 AV.Coqlib <> zeq def
R25274:25279 AV.Integers Make signed def
R25263:25268 AV.Integers Make signed def
R25314:25324 AV.Integers Make repr_signed thm
R25314:25324 AV.Integers Make repr_signed thm
R25314:25324 AV.Integers Make repr_signed thm
R25342:25352 AV.Integers Make repr_signed thm
R25342:25352 AV.Integers Make repr_signed thm
R25342:25352 AV.Integers Make repr_signed thm
prf 25418:25429 Make add_unsigned
R25451:25453 Coq.Init.Logic <> :type_scope:x_'='_x not
R25444:25446 AV.Integers Make add def
R25450:25450 AV.Integers <> y var
R25448:25448 AV.Integers <> x var
R25454:25457 AV.Integers Make repr def
R25470:25472 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25460:25467 AV.Integers Make unsigned def
R25469:25469 AV.Integers <> x var
R25473:25480 AV.Integers Make unsigned def
R25482:25482 AV.Integers <> y var
prf 25528:25537 Make add_signed
R25559:25561 Coq.Init.Logic <> :type_scope:x_'='_x not
R25552:25554 AV.Integers Make add def
R25558:25558 AV.Integers <> y var
R25556:25556 AV.Integers <> x var
R25562:25565 AV.Integers Make repr def
R25576:25578 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25568:25573 AV.Integers Make signed def
R25575:25575 AV.Integers <> x var
R25579:25584 AV.Integers Make signed def
R25586:25586 AV.Integers <> y var
R25615:25626 AV.Integers Make add_unsigned thm
R25615:25626 AV.Integers Make add_unsigned thm
R25615:25626 AV.Integers Make add_unsigned thm
R25635:25646 AV.Integers Make eqm_samerepr thm
R25635:25646 AV.Integers Make eqm_samerepr thm
R25657:25663 AV.Integers Make eqm_add thm
R25672:25678 AV.Integers Make eqm_sym thm
R25687:25705 AV.Integers Make eqm_signed_unsigned thm
R25657:25663 AV.Integers Make eqm_add thm
R25672:25678 AV.Integers Make eqm_sym thm
R25672:25678 AV.Integers Make eqm_sym thm
R25687:25705 AV.Integers Make eqm_signed_unsigned thm
R25687:25705 AV.Integers Make eqm_signed_unsigned thm
prf 25722:25731 Make add_commut
R25753:25755 Coq.Init.Logic <> :type_scope:x_'='_x not
R25746:25748 AV.Integers Make add def
R25752:25752 AV.Integers <> y var
R25750:25750 AV.Integers <> x var
R25756:25758 AV.Integers Make add def
R25762:25762 AV.Integers <> x var
R25760:25760 AV.Integers <> y var
R25787:25789 AV.Integers Make add def
prf 25820:25827 Make add_zero
R25850:25852 Coq.Init.Logic <> :type_scope:x_'='_x not
R25840:25842 AV.Integers Make add def
R25846:25849 AV.Integers Make zero def
R25844:25844 AV.Integers <> x var
R25853:25853 AV.Integers <> x var
R25880:25882 AV.Integers Make add def
R25893:25905 AV.Integers Make unsigned_zero thm
R25893:25905 AV.Integers Make unsigned_zero thm
R25893:25905 AV.Integers Make unsigned_zero thm
R25918:25926 Coq.ZArith.BinInt Z add_0_r thm
R25918:25926 Coq.ZArith.BinInt Z add_0_r thm
R25918:25926 Coq.ZArith.BinInt Z add_0_r thm
R25935:25947 AV.Integers Make repr_unsigned thm
R25935:25947 AV.Integers Make repr_unsigned thm
prf 25964:25973 Make add_zero_l
R25996:25998 Coq.Init.Logic <> :type_scope:x_'='_x not
R25986:25988 AV.Integers Make add def
R25995:25995 AV.Integers <> x var
R25990:25993 AV.Integers Make zero def
R25999:25999 AV.Integers <> x var
R26027:26036 AV.Integers Make add_commut thm
R26027:26036 AV.Integers Make add_commut thm
R26027:26036 AV.Integers Make add_commut thm
R26045:26052 AV.Integers Make add_zero thm
R26045:26052 AV.Integers Make add_zero thm
prf 26069:26077 Make add_assoc
R26109:26111 Coq.Init.Logic <> :type_scope:x_'='_x not
R26094:26096 AV.Integers Make add def
R26108:26108 AV.Integers <> z var
R26099:26101 AV.Integers Make add def
R26105:26105 AV.Integers <> y var
R26103:26103 AV.Integers <> x var
R26112:26114 AV.Integers Make add def
R26119:26121 AV.Integers Make add def
R26125:26125 AV.Integers <> z var
R26123:26123 AV.Integers <> y var
R26116:26116 AV.Integers <> x var
R26153:26155 AV.Integers Make add def
R26171:26178 AV.Integers Make unsigned def
R26171:26178 AV.Integers Make unsigned def
R26197:26204 AV.Integers Make unsigned def
R26197:26204 AV.Integers Make unsigned def
R26223:26230 AV.Integers Make unsigned def
R26223:26230 AV.Integers Make unsigned def
R26244:26255 AV.Integers Make eqm_samerepr thm
R26244:26255 AV.Integers Make eqm_samerepr thm
R26282:26282 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26290:26293 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26285:26287 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26266:26274 AV.Integers Make eqm_trans thm
R26282:26282 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26290:26293 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26285:26287 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26266:26274 AV.Integers Make eqm_trans thm
R26330:26340 Coq.ZArith.BinInt Z add_assoc thm
R26330:26340 Coq.ZArith.BinInt Z add_assoc thm
R26330:26340 Coq.ZArith.BinInt Z add_assoc thm
prf 26373:26382 Make add_permut
R26414:26416 Coq.Init.Logic <> :type_scope:x_'='_x not
R26399:26401 AV.Integers Make add def
R26406:26408 AV.Integers Make add def
R26412:26412 AV.Integers <> z var
R26410:26410 AV.Integers <> y var
R26403:26403 AV.Integers <> x var
R26417:26419 AV.Integers Make add def
R26424:26426 AV.Integers Make add def
R26430:26430 AV.Integers <> z var
R26428:26428 AV.Integers <> x var
R26421:26421 AV.Integers <> y var
R26460:26469 AV.Integers Make add_commut thm
R26460:26469 AV.Integers Make add_commut thm
R26460:26469 AV.Integers Make add_commut thm
R26488:26496 AV.Integers Make add_assoc thm
R26488:26496 AV.Integers Make add_assoc thm
R26488:26496 AV.Integers Make add_assoc thm
R26505:26514 AV.Integers Make add_commut thm
R26505:26514 AV.Integers Make add_commut thm
prf 26531:26542 Make add_neg_zero
R26568:26570 Coq.Init.Logic <> :type_scope:x_'='_x not
R26555:26557 AV.Integers Make add def
R26562:26564 AV.Integers Make neg def
R26566:26566 AV.Integers <> x var
R26559:26559 AV.Integers <> x var
R26571:26574 AV.Integers Make zero def
R26601:26603 AV.Integers Make add def
R26606:26608 AV.Integers Make neg def
R26611:26614 AV.Integers Make zero def
R26623:26634 AV.Integers Make eqm_samerepr thm
R26623:26634 AV.Integers Make eqm_samerepr thm
R26665:26668 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26683:26683 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26655:26662 AV.Integers Make unsigned def
R26669:26671 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26682:26682 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26672:26679 AV.Integers Make unsigned def
R26665:26668 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26683:26683 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26655:26662 AV.Integers Make unsigned def
R26669:26671 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26682:26682 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26672:26679 AV.Integers Make unsigned def
prf 26726:26743 Make unsigned_add_carry
R26780:26782 Coq.Init.Logic <> :type_scope:x_'='_x not
R26762:26769 AV.Integers Make unsigned def
R26772:26774 AV.Integers Make add def
R26778:26778 AV.Integers <> y var
R26776:26776 AV.Integers <> x var
R26806:26808 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R26793:26795 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26783:26790 AV.Integers Make unsigned def
R26792:26792 AV.Integers <> x var
R26796:26803 AV.Integers Make unsigned def
R26805:26805 AV.Integers <> y var
R26838:26840 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R26809:26816 AV.Integers Make unsigned def
R26819:26827 AV.Integers Make add_carry def
R26833:26836 AV.Integers Make zero def
R26831:26831 AV.Integers <> y var
R26829:26829 AV.Integers <> x var
R26841:26847 AV.Integers Make modulus def
R26876:26878 AV.Integers Make add def
R26881:26889 AV.Integers Make add_carry def
R26900:26912 AV.Integers Make unsigned_zero thm
R26900:26912 AV.Integers Make unsigned_zero thm
R26900:26912 AV.Integers Make unsigned_zero thm
R26923:26931 Coq.ZArith.BinInt Z add_0_r thm
R26923:26931 Coq.ZArith.BinInt Z add_0_r thm
R26923:26931 Coq.ZArith.BinInt Z add_0_r thm
R26944:26959 AV.Integers Make unsigned_repr_eq thm
R26944:26959 AV.Integers Make unsigned_repr_eq thm
R26944:26959 AV.Integers Make unsigned_repr_eq thm
R26976:26989 AV.Integers Make unsigned_range thm
R26995:27008 AV.Integers Make unsigned_range thm
R26976:26989 AV.Integers Make unsigned_range thm
R26995:27008 AV.Integers Make unsigned_range thm
R27034:27036 AV.Coqlib <> zlt def
R27064:27070 AV.Integers Make modulus def
R27049:27051 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27039:27046 AV.Integers Make unsigned def
R27052:27059 AV.Integers Make unsigned def
R27034:27036 AV.Coqlib <> zlt def
R27064:27070 AV.Integers Make modulus def
R27049:27051 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27039:27046 AV.Integers Make unsigned def
R27052:27059 AV.Integers Make unsigned def
R27084:27096 AV.Integers Make unsigned_zero thm
R27084:27096 AV.Integers Make unsigned_zero thm
R27084:27096 AV.Integers Make unsigned_zero thm
R27105:27115 AV.Coqlib <> Zmod_unique thm
R27105:27115 AV.Coqlib <> Zmod_unique thm
R27149:27160 AV.Integers Make unsigned_one thm
R27149:27160 AV.Integers Make unsigned_one thm
R27149:27160 AV.Integers Make unsigned_one thm
R27169:27179 AV.Coqlib <> Zmod_unique thm
R27169:27179 AV.Coqlib <> Zmod_unique thm
prf 27219:27237 Make unsigned_add_either
R27300:27305 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27274:27276 Coq.Init.Logic <> :type_scope:x_'='_x not
R27256:27263 AV.Integers Make unsigned def
R27266:27268 AV.Integers Make add def
R27272:27272 AV.Integers <> y var
R27270:27270 AV.Integers <> x var
R27287:27289 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27277:27284 AV.Integers Make unsigned def
R27286:27286 AV.Integers <> x var
R27290:27297 AV.Integers Make unsigned def
R27299:27299 AV.Integers <> y var
R27324:27326 Coq.Init.Logic <> :type_scope:x_'='_x not
R27306:27313 AV.Integers Make unsigned def
R27316:27318 AV.Integers Make add def
R27322:27322 AV.Integers <> y var
R27320:27320 AV.Integers <> x var
R27350:27352 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27337:27339 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27327:27334 AV.Integers Make unsigned def
R27336:27336 AV.Integers <> x var
R27340:27347 AV.Integers Make unsigned def
R27349:27349 AV.Integers <> y var
R27353:27359 AV.Integers Make modulus def
R27387:27404 AV.Integers Make unsigned_add_carry thm
R27387:27404 AV.Integers Make unsigned_add_carry thm
R27387:27404 AV.Integers Make unsigned_add_carry thm
R27414:27422 AV.Integers Make add_carry def
R27435:27447 AV.Integers Make unsigned_zero thm
R27435:27447 AV.Integers Make unsigned_zero thm
R27435:27447 AV.Integers Make unsigned_zero thm
R27458:27466 Coq.ZArith.BinInt Z add_0_r thm
R27458:27466 Coq.ZArith.BinInt Z add_0_r thm
R27458:27466 Coq.ZArith.BinInt Z add_0_r thm
R27481:27483 AV.Coqlib <> zlt def
R27511:27517 AV.Integers Make modulus def
R27496:27498 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27486:27493 AV.Integers Make unsigned def
R27499:27506 AV.Integers Make unsigned def
R27481:27483 AV.Coqlib <> zlt def
R27511:27517 AV.Integers Make modulus def
R27496:27498 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27486:27493 AV.Integers Make unsigned def
R27499:27506 AV.Integers Make unsigned def
R27531:27543 AV.Integers Make unsigned_zero thm
R27531:27543 AV.Integers Make unsigned_zero thm
R27531:27543 AV.Integers Make unsigned_zero thm
R27569:27580 AV.Integers Make unsigned_one thm
R27569:27580 AV.Integers Make unsigned_one thm
R27569:27580 AV.Integers Make unsigned_one thm
prf 27645:27652 Make neg_repr
R27677:27679 Coq.Init.Logic <> :type_scope:x_'='_x not
R27665:27667 AV.Integers Make neg def
R27670:27673 AV.Integers Make repr def
R27675:27675 AV.Integers <> z var
R27680:27683 AV.Integers Make repr def
R27686:27686 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27687:27687 AV.Integers <> z var
R27715:27717 AV.Integers Make neg def
R27726:27737 AV.Integers Make eqm_samerepr thm
R27726:27737 AV.Integers Make eqm_samerepr thm
prf 27770:27777 Make neg_zero
R27788:27790 Coq.Init.Logic <> :type_scope:x_'='_x not
R27780:27782 AV.Integers Make neg def
R27784:27787 AV.Integers Make zero def
R27791:27794 AV.Integers Make zero def
R27813:27815 AV.Integers Make neg def
R27826:27838 AV.Integers Make unsigned_zero thm
R27826:27838 AV.Integers Make unsigned_zero thm
R27826:27838 AV.Integers Make unsigned_zero thm
prf 27861:27874 Make neg_involutive
R27898:27900 Coq.Init.Logic <> :type_scope:x_'='_x not
R27887:27889 AV.Integers Make neg def
R27892:27894 AV.Integers Make neg def
R27896:27896 AV.Integers <> x var
R27901:27901 AV.Integers <> x var
R27928:27930 AV.Integers Make neg def
R27941:27951 AV.Integers Make eqm_repr_eq thm
R27941:27951 AV.Integers Make eqm_repr_eq thm
R27961:27969 AV.Integers Make eqm_trans thm
R27961:27969 AV.Integers Make eqm_trans thm
R27978:27984 AV.Integers Make eqm_neg thm
R27978:27984 AV.Integers Make eqm_neg thm
R27995:28013 AV.Integers Make eqm_unsigned_repr_l thm
R27995:28013 AV.Integers Make eqm_unsigned_repr_l thm
R28022:28029 AV.Integers Make eqm_refl thm
R28022:28029 AV.Integers Make eqm_refl thm
R28038:28046 AV.Integers Make eqm_refl2 thm
R28038:28046 AV.Integers Make eqm_refl2 thm
prf 28070:28082 Make neg_add_distr
R28109:28111 Coq.Init.Logic <> :type_scope:x_'='_x not
R28097:28099 AV.Integers Make neg def
R28101:28103 AV.Integers Make add def
R28107:28107 AV.Integers <> y var
R28105:28105 AV.Integers <> x var
R28112:28114 AV.Integers Make add def
R28125:28127 AV.Integers Make neg def
R28129:28129 AV.Integers <> y var
R28117:28119 AV.Integers Make neg def
R28121:28121 AV.Integers <> x var
R28157:28159 AV.Integers Make neg def
R28162:28164 AV.Integers Make add def
R28173:28184 AV.Integers Make eqm_samerepr thm
R28173:28184 AV.Integers Make eqm_samerepr thm
R28211:28213 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28237:28237 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28224:28226 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28214:28221 AV.Integers Make unsigned def
R28227:28234 AV.Integers Make unsigned def
R28195:28203 AV.Integers Make eqm_trans thm
R28211:28213 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28237:28237 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28224:28226 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28214:28221 AV.Integers Make unsigned def
R28227:28234 AV.Integers Make unsigned def
R28195:28203 AV.Integers Make eqm_trans thm
R28270:28272 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28296:28296 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28283:28285 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28273:28280 AV.Integers Make unsigned def
R28286:28293 AV.Integers Make unsigned def
R28310:28310 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28323:28327 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28340:28340 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28311:28312 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28313:28320 AV.Integers Make unsigned def
R28328:28329 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28330:28337 AV.Integers Make unsigned def
R28270:28272 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28296:28296 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28283:28285 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28273:28280 AV.Integers Make unsigned def
R28286:28293 AV.Integers Make unsigned def
R28310:28310 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28323:28327 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28340:28340 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28311:28312 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28313:28320 AV.Integers Make unsigned def
R28328:28329 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R28330:28337 AV.Integers Make unsigned def
prf 28420:28429 Make sub_zero_l
R28452:28454 Coq.Init.Logic <> :type_scope:x_'='_x not
R28442:28444 AV.Integers Make sub def
R28448:28451 AV.Integers Make zero def
R28446:28446 AV.Integers <> x var
R28455:28455 AV.Integers <> x var
R28482:28484 AV.Integers Make sub def
R28495:28507 AV.Integers Make unsigned_zero thm
R28495:28507 AV.Integers Make unsigned_zero thm
R28495:28507 AV.Integers Make unsigned_zero thm
R28531:28533 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28521:28528 AV.Integers Make unsigned def
R28543:28550 AV.Integers Make unsigned def
R28531:28533 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28521:28528 AV.Integers Make unsigned def
R28543:28550 AV.Integers Make unsigned def
R28571:28583 AV.Integers Make repr_unsigned thm
R28571:28583 AV.Integers Make repr_unsigned thm
prf 28600:28609 Make sub_zero_r
R28632:28634 Coq.Init.Logic <> :type_scope:x_'='_x not
R28622:28624 AV.Integers Make sub def
R28631:28631 AV.Integers <> x var
R28626:28629 AV.Integers Make zero def
R28635:28637 AV.Integers Make neg def
R28639:28639 AV.Integers <> x var
R28666:28668 AV.Integers Make sub def
R28671:28673 AV.Integers Make neg def
R28684:28696 AV.Integers Make unsigned_zero thm
R28684:28696 AV.Integers Make unsigned_zero thm
R28684:28696 AV.Integers Make unsigned_zero thm
prf 28719:28729 Make sub_add_opp
R28751:28753 Coq.Init.Logic <> :type_scope:x_'='_x not
R28744:28746 AV.Integers Make sub def
R28750:28750 AV.Integers <> y var
R28748:28748 AV.Integers <> x var
R28754:28756 AV.Integers Make add def
R28761:28763 AV.Integers Make neg def
R28765:28765 AV.Integers <> y var
R28758:28758 AV.Integers <> x var
R28793:28795 AV.Integers Make sub def
R28798:28800 AV.Integers Make add def
R28803:28805 AV.Integers Make neg def
R28814:28825 AV.Integers Make eqm_samerepr thm
R28814:28825 AV.Integers Make eqm_samerepr thm
R28836:28842 AV.Integers Make eqm_add thm
R28836:28842 AV.Integers Make eqm_add thm
prf 28875:28882 Make sub_idem
R28902:28904 Coq.Init.Logic <> :type_scope:x_'='_x not
R28895:28897 AV.Integers Make sub def
R28901:28901 AV.Integers <> x var
R28899:28899 AV.Integers <> x var
R28905:28908 AV.Integers Make zero def
R28935:28937 AV.Integers Make sub def
R28947:28950 AV.Integers Make zero def
prf 28981:28989 Make sub_add_l
R29021:29023 Coq.Init.Logic <> :type_scope:x_'='_x not
R29006:29008 AV.Integers Make sub def
R29020:29020 AV.Integers <> z var
R29011:29013 AV.Integers Make add def
R29017:29017 AV.Integers <> y var
R29015:29015 AV.Integers <> x var
R29024:29026 AV.Integers Make add def
R29038:29038 AV.Integers <> y var
R29029:29031 AV.Integers Make sub def
R29035:29035 AV.Integers <> z var
R29033:29033 AV.Integers <> x var
R29073:29083 AV.Integers Make sub_add_opp thm
R29073:29083 AV.Integers Make sub_add_opp thm
R29073:29083 AV.Integers Make sub_add_opp thm
R29073:29083 AV.Integers Make sub_add_opp thm
R29073:29083 AV.Integers Make sub_add_opp thm
R29073:29083 AV.Integers Make sub_add_opp thm
R29103:29111 AV.Integers Make add_assoc thm
R29103:29111 AV.Integers Make add_assoc thm
R29103:29111 AV.Integers Make add_assoc thm
R29103:29111 AV.Integers Make add_assoc thm
R29103:29111 AV.Integers Make add_assoc thm
R29103:29111 AV.Integers Make add_assoc thm
R29127:29136 AV.Integers Make add_commut thm
R29127:29136 AV.Integers Make add_commut thm
prf 29153:29161 Make sub_add_r
R29193:29195 Coq.Init.Logic <> :type_scope:x_'='_x not
R29178:29180 AV.Integers Make sub def
R29185:29187 AV.Integers Make add def
R29191:29191 AV.Integers <> z var
R29189:29189 AV.Integers <> y var
R29182:29182 AV.Integers <> x var
R29196:29198 AV.Integers Make add def
R29211:29213 AV.Integers Make neg def
R29215:29215 AV.Integers <> y var
R29201:29203 AV.Integers Make sub def
R29207:29207 AV.Integers <> z var
R29205:29205 AV.Integers <> x var
R29251:29261 AV.Integers Make sub_add_opp thm
R29251:29261 AV.Integers Make sub_add_opp thm
R29251:29261 AV.Integers Make sub_add_opp thm
R29251:29261 AV.Integers Make sub_add_opp thm
R29251:29261 AV.Integers Make sub_add_opp thm
R29251:29261 AV.Integers Make sub_add_opp thm
R29274:29286 AV.Integers Make neg_add_distr thm
R29274:29286 AV.Integers Make neg_add_distr thm
R29274:29286 AV.Integers Make neg_add_distr thm
R29297:29306 AV.Integers Make add_permut thm
R29297:29306 AV.Integers Make add_permut thm
R29297:29306 AV.Integers Make add_permut thm
R29315:29324 AV.Integers Make add_commut thm
R29315:29324 AV.Integers Make add_commut thm
prf 29341:29351 Make sub_shifted
R29395:29397 Coq.Init.Logic <> :type_scope:x_'='_x not
R29372:29374 AV.Integers Make sub def
R29387:29389 AV.Integers Make add def
R29393:29393 AV.Integers <> z var
R29391:29391 AV.Integers <> y var
R29377:29379 AV.Integers Make add def
R29383:29383 AV.Integers <> z var
R29381:29381 AV.Integers <> x var
R29398:29400 AV.Integers Make sub def
R29404:29404 AV.Integers <> y var
R29402:29402 AV.Integers <> x var
R29432:29442 AV.Integers Make sub_add_opp thm
R29432:29442 AV.Integers Make sub_add_opp thm
R29432:29442 AV.Integers Make sub_add_opp thm
R29453:29465 AV.Integers Make neg_add_distr thm
R29453:29465 AV.Integers Make neg_add_distr thm
R29453:29465 AV.Integers Make neg_add_distr thm
R29478:29486 AV.Integers Make add_assoc thm
R29478:29486 AV.Integers Make add_assoc thm
R29478:29486 AV.Integers Make add_assoc thm
R29500:29509 AV.Integers Make add_commut thm
R29520:29522 AV.Integers Make neg def
R29512:29514 AV.Integers Make neg def
R29500:29509 AV.Integers Make add_commut thm
R29520:29522 AV.Integers Make neg def
R29512:29514 AV.Integers Make neg def
R29500:29509 AV.Integers Make add_commut thm
R29520:29522 AV.Integers Make neg def
R29512:29514 AV.Integers Make neg def
R29543:29551 AV.Integers Make add_assoc thm
R29543:29551 AV.Integers Make add_assoc thm
R29543:29551 AV.Integers Make add_assoc thm
R29565:29576 AV.Integers Make add_neg_zero thm
R29565:29576 AV.Integers Make add_neg_zero thm
R29565:29576 AV.Integers Make add_neg_zero thm
R29590:29599 AV.Integers Make add_commut thm
R29601:29604 AV.Integers Make zero def
R29590:29599 AV.Integers Make add_commut thm
R29601:29604 AV.Integers Make zero def
R29590:29599 AV.Integers Make add_commut thm
R29601:29604 AV.Integers Make zero def
R29616:29623 AV.Integers Make add_zero thm
R29616:29623 AV.Integers Make add_zero thm
R29616:29623 AV.Integers Make add_zero thm
R29644:29654 AV.Integers Make sub_add_opp thm
R29644:29654 AV.Integers Make sub_add_opp thm
prf 29671:29680 Make sub_signed
R29704:29706 Coq.Init.Logic <> :type_scope:x_'='_x not
R29697:29699 AV.Integers Make sub def
R29703:29703 AV.Integers <> y var
R29701:29701 AV.Integers <> x var
R29707:29710 AV.Integers Make repr def
R29721:29723 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29713:29718 AV.Integers Make signed def
R29720:29720 AV.Integers <> x var
R29724:29729 AV.Integers Make signed def
R29731:29731 AV.Integers <> y var
R29759:29761 AV.Integers Make sub def
R29770:29781 AV.Integers Make eqm_samerepr thm
R29770:29781 AV.Integers Make eqm_samerepr thm
R29792:29798 AV.Integers Make eqm_sub thm
R29807:29813 AV.Integers Make eqm_sym thm
R29822:29840 AV.Integers Make eqm_signed_unsigned thm
R29792:29798 AV.Integers Make eqm_sub thm
R29807:29813 AV.Integers Make eqm_sym thm
R29807:29813 AV.Integers Make eqm_sym thm
R29822:29840 AV.Integers Make eqm_signed_unsigned thm
R29822:29840 AV.Integers Make eqm_signed_unsigned thm
prf 29857:29875 Make unsigned_sub_borrow
R29912:29914 Coq.Init.Logic <> :type_scope:x_'='_x not
R29894:29901 AV.Integers Make unsigned def
R29904:29906 AV.Integers Make sub def
R29910:29910 AV.Integers <> y var
R29908:29908 AV.Integers <> x var
R29938:29940 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R29925:29927 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29915:29922 AV.Integers Make unsigned def
R29924:29924 AV.Integers <> x var
R29928:29935 AV.Integers Make unsigned def
R29937:29937 AV.Integers <> y var
R29971:29973 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R29941:29948 AV.Integers Make unsigned def
R29951:29960 AV.Integers Make sub_borrow def
R29966:29969 AV.Integers Make zero def
R29964:29964 AV.Integers <> y var
R29962:29962 AV.Integers <> x var
R29974:29980 AV.Integers Make modulus def
R30009:30011 AV.Integers Make sub def
R30014:30023 AV.Integers Make sub_borrow def
R30034:30046 AV.Integers Make unsigned_zero thm
R30034:30046 AV.Integers Make unsigned_zero thm
R30034:30046 AV.Integers Make unsigned_zero thm
R30057:30065 Coq.ZArith.BinInt Z sub_0_r thm
R30057:30065 Coq.ZArith.BinInt Z sub_0_r thm
R30057:30065 Coq.ZArith.BinInt Z sub_0_r thm
R30078:30093 AV.Integers Make unsigned_repr_eq thm
R30078:30093 AV.Integers Make unsigned_repr_eq thm
R30078:30093 AV.Integers Make unsigned_repr_eq thm
R30110:30123 AV.Integers Make unsigned_range thm
R30129:30142 AV.Integers Make unsigned_range thm
R30110:30123 AV.Integers Make unsigned_range thm
R30129:30142 AV.Integers Make unsigned_range thm
R30168:30170 AV.Coqlib <> zlt def
R30183:30185 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30173:30180 AV.Integers Make unsigned def
R30186:30193 AV.Integers Make unsigned def
R30168:30170 AV.Coqlib <> zlt def
R30183:30185 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30173:30180 AV.Integers Make unsigned def
R30186:30193 AV.Integers Make unsigned def
R30212:30223 AV.Integers Make unsigned_one thm
R30212:30223 AV.Integers Make unsigned_one thm
R30212:30223 AV.Integers Make unsigned_one thm
R30232:30242 AV.Coqlib <> Zmod_unique thm
R30232:30242 AV.Coqlib <> Zmod_unique thm
R30279:30291 AV.Integers Make unsigned_zero thm
R30279:30291 AV.Integers Make unsigned_zero thm
R30279:30291 AV.Integers Make unsigned_zero thm
R30300:30310 AV.Coqlib <> Zmod_unique thm
R30300:30310 AV.Coqlib <> Zmod_unique thm
prf 30388:30397 Make mul_commut
R30419:30421 Coq.Init.Logic <> :type_scope:x_'='_x not
R30412:30414 AV.Integers Make mul def
R30418:30418 AV.Integers <> y var
R30416:30416 AV.Integers <> x var
R30422:30424 AV.Integers Make mul def
R30428:30428 AV.Integers <> x var
R30426:30426 AV.Integers <> y var
R30455:30457 AV.Integers Make mul def
prf 30487:30494 Make mul_zero
R30517:30519 Coq.Init.Logic <> :type_scope:x_'='_x not
R30507:30509 AV.Integers Make mul def
R30513:30516 AV.Integers Make zero def
R30511:30511 AV.Integers <> x var
R30520:30523 AV.Integers Make zero def
R30550:30552 AV.Integers Make mul def
R30563:30575 AV.Integers Make unsigned_zero thm
R30563:30575 AV.Integers Make unsigned_zero thm
R30563:30575 AV.Integers Make unsigned_zero thm
R30587:30590 AV.Integers Make zero def
prf 30620:30626 Make mul_one
R30648:30650 Coq.Init.Logic <> :type_scope:x_'='_x not
R30639:30641 AV.Integers Make mul def
R30645:30647 AV.Integers Make one def
R30643:30643 AV.Integers <> x var
R30651:30651 AV.Integers <> x var
R30678:30680 AV.Integers Make mul def
R30691:30702 AV.Integers Make unsigned_one thm
R30691:30702 AV.Integers Make unsigned_one thm
R30691:30702 AV.Integers Make unsigned_one thm
R30721:30724 AV.Integers Make repr def
R30727:30734 AV.Integers Make unsigned def
R30721:30724 AV.Integers Make repr def
R30727:30734 AV.Integers Make unsigned def
R30762:30774 AV.Integers Make repr_unsigned thm
R30762:30774 AV.Integers Make repr_unsigned thm
prf 30791:30798 Make mul_mone
R30821:30823 Coq.Init.Logic <> :type_scope:x_'='_x not
R30811:30813 AV.Integers Make mul def
R30817:30820 AV.Integers Make mone def
R30815:30815 AV.Integers <> x var
R30824:30826 AV.Integers Make neg def
R30828:30828 AV.Integers <> x var
R30855:30857 AV.Integers Make mul def
R30860:30862 AV.Integers Make neg def
R30873:30885 AV.Integers Make unsigned_mone thm
R30873:30885 AV.Integers Make unsigned_mone thm
R30873:30885 AV.Integers Make unsigned_mone thm
R30896:30907 AV.Integers Make eqm_samerepr thm
R30896:30907 AV.Integers Make eqm_samerepr thm
R30921:30921 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30922:30929 AV.Integers Make unsigned def
R30941:30943 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30944:30951 AV.Integers Make unsigned def
R30921:30921 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30922:30929 AV.Integers Make unsigned def
R30941:30943 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30944:30951 AV.Integers Make unsigned def
R30987:30990 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31002:31002 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30977:30984 AV.Integers Make unsigned def
R30998:31000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30991:30997 AV.Integers Make modulus def
R31031:31033 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31021:31023 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31011:31018 AV.Integers Make unsigned def
R31024:31030 AV.Integers Make modulus def
R31034:31041 AV.Integers Make unsigned def
R30987:30990 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31002:31002 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30977:30984 AV.Integers Make unsigned def
R30998:31000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30991:30997 AV.Integers Make modulus def
R31031:31033 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31021:31023 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31011:31018 AV.Integers Make unsigned def
R31024:31030 AV.Integers Make modulus def
R31034:31041 AV.Integers Make unsigned def
R31063:31069 AV.Integers Make eqm_sub thm
R31063:31069 AV.Integers Make eqm_sub thm
R31080:31087 AV.Integers Make unsigned def
R31080:31087 AV.Integers Make unsigned def
R31106:31113 AV.Integers Make eqm_refl thm
R31106:31113 AV.Integers Make eqm_refl thm
prf 31130:31138 Make mul_assoc
R31170:31172 Coq.Init.Logic <> :type_scope:x_'='_x not
R31155:31157 AV.Integers Make mul def
R31169:31169 AV.Integers <> z var
R31160:31162 AV.Integers Make mul def
R31166:31166 AV.Integers <> y var
R31164:31164 AV.Integers <> x var
R31173:31175 AV.Integers Make mul def
R31180:31182 AV.Integers Make mul def
R31186:31186 AV.Integers <> z var
R31184:31184 AV.Integers <> y var
R31177:31177 AV.Integers <> x var
R31214:31216 AV.Integers Make mul def
R31232:31239 AV.Integers Make unsigned def
R31232:31239 AV.Integers Make unsigned def
R31258:31265 AV.Integers Make unsigned def
R31258:31265 AV.Integers Make unsigned def
R31284:31291 AV.Integers Make unsigned def
R31284:31291 AV.Integers Make unsigned def
R31305:31316 AV.Integers Make eqm_samerepr thm
R31305:31316 AV.Integers Make eqm_samerepr thm
R31341:31341 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31349:31352 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31344:31346 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31325:31333 AV.Integers Make eqm_trans thm
R31341:31341 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31349:31352 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31344:31346 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31325:31333 AV.Integers Make eqm_trans thm
R31389:31399 Coq.ZArith.BinInt Z mul_assoc thm
R31389:31399 Coq.ZArith.BinInt Z mul_assoc thm
R31389:31399 Coq.ZArith.BinInt Z mul_assoc thm
prf 31432:31446 Make mul_add_distr_l
R31480:31482 Coq.Init.Logic <> :type_scope:x_'='_x not
R31465:31467 AV.Integers Make mul def
R31479:31479 AV.Integers <> z var
R31470:31472 AV.Integers Make add def
R31476:31476 AV.Integers <> y var
R31474:31474 AV.Integers <> x var
R31483:31485 AV.Integers Make add def
R31498:31500 AV.Integers Make mul def
R31504:31504 AV.Integers <> z var
R31502:31502 AV.Integers <> y var
R31488:31490 AV.Integers Make mul def
R31494:31494 AV.Integers <> z var
R31492:31492 AV.Integers <> x var
R31532:31534 AV.Integers Make mul def
R31537:31539 AV.Integers Make add def
R31550:31561 AV.Integers Make eqm_samerepr thm
R31550:31561 AV.Integers Make eqm_samerepr thm
R31577:31584 AV.Integers Make unsigned def
R31577:31584 AV.Integers Make unsigned def
R31603:31610 AV.Integers Make unsigned def
R31603:31610 AV.Integers Make unsigned def
R31629:31636 AV.Integers Make unsigned def
R31629:31636 AV.Integers Make unsigned def
R31666:31666 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31674:31677 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31669:31671 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31650:31658 AV.Integers Make eqm_trans thm
R31666:31666 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31674:31677 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31669:31671 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31650:31658 AV.Integers Make eqm_trans thm
R31712:31712 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31720:31723 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31715:31717 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31741:31743 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31736:31738 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31746:31748 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31712:31712 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31720:31723 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31715:31717 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31741:31743 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31736:31738 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31746:31748 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
prf 31794:31808 Make mul_add_distr_r
R31842:31844 Coq.Init.Logic <> :type_scope:x_'='_x not
R31827:31829 AV.Integers Make mul def
R31834:31836 AV.Integers Make add def
R31840:31840 AV.Integers <> z var
R31838:31838 AV.Integers <> y var
R31831:31831 AV.Integers <> x var
R31845:31847 AV.Integers Make add def
R31860:31862 AV.Integers Make mul def
R31866:31866 AV.Integers <> z var
R31864:31864 AV.Integers <> x var
R31850:31852 AV.Integers Make mul def
R31856:31856 AV.Integers <> y var
R31854:31854 AV.Integers <> x var
R31895:31904 AV.Integers Make mul_commut thm
R31895:31904 AV.Integers Make mul_commut thm
R31895:31904 AV.Integers Make mul_commut thm
R31915:31929 AV.Integers Make mul_add_distr_l thm
R31915:31929 AV.Integers Make mul_add_distr_l thm
R31915:31929 AV.Integers Make mul_add_distr_l thm
R31947:31956 AV.Integers Make mul_commut thm
R31947:31956 AV.Integers Make mul_commut thm
R31947:31956 AV.Integers Make mul_commut thm
prf 31973:31987 Make neg_mul_distr_l
R32016:32018 Coq.Init.Logic <> :type_scope:x_'='_x not
R32004:32006 AV.Integers Make neg def
R32008:32010 AV.Integers Make mul def
R32014:32014 AV.Integers <> y var
R32012:32012 AV.Integers <> x var
R32019:32021 AV.Integers Make mul def
R32031:32031 AV.Integers <> y var
R32024:32026 AV.Integers Make neg def
R32028:32028 AV.Integers <> x var
R32058:32060 AV.Integers Make mul def
R32063:32065 AV.Integers Make neg def
R32081:32088 AV.Integers Make unsigned def
R32081:32088 AV.Integers Make unsigned def
R32106:32113 AV.Integers Make unsigned def
R32106:32113 AV.Integers Make unsigned def
R32127:32138 AV.Integers Make eqm_samerepr thm
R32127:32138 AV.Integers Make eqm_samerepr thm
R32163:32165 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32173:32173 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32168:32170 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32147:32155 AV.Integers Make eqm_trans thm
R32163:32165 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32173:32173 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32168:32170 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32147:32155 AV.Integers Make eqm_trans thm
R32206:32208 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32216:32216 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32211:32213 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32225:32225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32229:32232 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32226:32226 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32206:32208 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32216:32216 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R32211:32213 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32225:32225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32229:32232 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32226:32226 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 32278:32292 Make neg_mul_distr_r
R32322:32324 Coq.Init.Logic <> :type_scope:x_'='_x not
R32310:32312 AV.Integers Make neg def
R32314:32316 AV.Integers Make mul def
R32320:32320 AV.Integers <> y var
R32318:32318 AV.Integers <> x var
R32325:32327 AV.Integers Make mul def
R32332:32334 AV.Integers Make neg def
R32336:32336 AV.Integers <> y var
R32329:32329 AV.Integers <> x var
R32366:32375 AV.Integers Make mul_commut thm
R32366:32375 AV.Integers Make mul_commut thm
R32366:32375 AV.Integers Make mul_commut thm
R32392:32401 AV.Integers Make mul_commut thm
R32406:32408 AV.Integers Make neg def
R32392:32401 AV.Integers Make mul_commut thm
R32406:32408 AV.Integers Make neg def
R32392:32401 AV.Integers Make mul_commut thm
R32406:32408 AV.Integers Make neg def
R32423:32437 AV.Integers Make neg_mul_distr_l thm
R32423:32437 AV.Integers Make neg_mul_distr_l thm
prf 32454:32463 Make mul_signed
R32487:32489 Coq.Init.Logic <> :type_scope:x_'='_x not
R32480:32482 AV.Integers Make mul def
R32486:32486 AV.Integers <> y var
R32484:32484 AV.Integers <> x var
R32490:32493 AV.Integers Make repr def
R32504:32506 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32496:32501 AV.Integers Make signed def
R32503:32503 AV.Integers <> x var
R32507:32512 AV.Integers Make signed def
R32514:32514 AV.Integers <> y var
R32542:32544 AV.Integers Make mul def
R32553:32564 AV.Integers Make eqm_samerepr thm
R32553:32564 AV.Integers Make eqm_samerepr thm
R32575:32582 AV.Integers Make eqm_mult thm
R32591:32597 AV.Integers Make eqm_sym thm
R32606:32624 AV.Integers Make eqm_signed_unsigned thm
R32575:32582 AV.Integers Make eqm_mult thm
R32591:32597 AV.Integers Make eqm_sym thm
R32591:32597 AV.Integers Make eqm_sym thm
R32606:32624 AV.Integers Make eqm_signed_unsigned thm
R32606:32624 AV.Integers Make eqm_signed_unsigned thm
prf 32685:32700 Make modu_divu_Euclid
R32726:32729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32731:32733 Coq.Init.Logic <> :type_scope:x_'='_x not
R32730:32730 AV.Integers <> x var
R32734:32736 AV.Integers Make add def
R32758:32761 AV.Integers Make modu def
R32765:32765 AV.Integers <> y var
R32763:32763 AV.Integers <> x var
R32739:32741 AV.Integers Make mul def
R32754:32754 AV.Integers <> y var
R32744:32747 AV.Integers Make divu def
R32751:32751 AV.Integers <> y var
R32749:32749 AV.Integers <> x var
R32718:32721 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32717:32717 AV.Integers <> y var
R32722:32725 AV.Integers Make zero def
R32793:32795 AV.Integers Make add def
R32798:32800 AV.Integers Make mul def
R32803:32806 AV.Integers Make divu def
R32809:32812 AV.Integers Make modu def
R32831:32834 AV.Integers Make repr def
R32837:32844 AV.Integers Make unsigned def
R32831:32834 AV.Integers Make repr def
R32837:32844 AV.Integers Make unsigned def
R32875:32886 AV.Integers Make eqm_samerepr thm
R32875:32886 AV.Integers Make eqm_samerepr thm
R32902:32909 AV.Integers Make unsigned def
R32902:32909 AV.Integers Make unsigned def
R32926:32933 AV.Integers Make unsigned def
R32926:32933 AV.Integers Make unsigned def
R32977:32979 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32963:32963 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32971:32974 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32966:32968 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32982:32986 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32947:32955 AV.Integers Make eqm_trans thm
R32977:32979 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32963:32963 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32971:32974 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32966:32968 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32982:32986 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32947:32955 AV.Integers Make eqm_trans thm
R33000:33008 AV.Integers Make eqm_refl2 thm
R33000:33008 AV.Integers Make eqm_refl2 thm
R33019:33028 Coq.ZArith.BinInt Z mul_comm thm
R33019:33028 Coq.ZArith.BinInt Z mul_comm thm
R33019:33028 Coq.ZArith.BinInt Z mul_comm thm
R33037:33048 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R33037:33048 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R33065:33078 AV.Integers Make unsigned_range thm
R33065:33078 AV.Integers Make unsigned_range thm
R33111:33114 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33101:33108 AV.Integers Make unsigned def
R33111:33114 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33101:33108 AV.Integers Make unsigned def
R33153:33165 AV.Integers Make repr_unsigned thm
R33153:33165 AV.Integers Make repr_unsigned thm
R33153:33165 AV.Integers Make repr_unsigned thm
R33178:33181 AV.Integers Make zero def
prf 33248:33256 Make modu_divu
R33282:33285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33294:33296 Coq.Init.Logic <> :type_scope:x_'='_x not
R33286:33289 AV.Integers Make modu def
R33293:33293 AV.Integers <> y var
R33291:33291 AV.Integers <> x var
R33297:33299 AV.Integers Make sub def
R33304:33306 AV.Integers Make mul def
R33319:33319 AV.Integers <> y var
R33309:33312 AV.Integers Make divu def
R33316:33316 AV.Integers <> y var
R33314:33314 AV.Integers <> x var
R33301:33301 AV.Integers <> x var
R33274:33277 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33273:33273 AV.Integers <> y var
R33278:33281 AV.Integers Make zero def
R33375:33378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33380:33382 Coq.Init.Logic <> :type_scope:x_'='_x not
R33379:33379 AV.Integers <> c var
R33383:33385 AV.Integers Make sub def
R33389:33389 AV.Integers <> b var
R33387:33387 AV.Integers <> a var
R33365:33367 Coq.Init.Logic <> :type_scope:x_'='_x not
R33364:33364 AV.Integers <> a var
R33368:33370 AV.Integers Make add def
R33374:33374 AV.Integers <> c var
R33372:33372 AV.Integers <> b var
R33375:33378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33380:33382 Coq.Init.Logic <> :type_scope:x_'='_x not
R33379:33379 AV.Integers <> c var
R33383:33385 AV.Integers Make sub def
R33389:33389 AV.Integers <> b var
R33387:33387 AV.Integers <> a var
R33365:33367 Coq.Init.Logic <> :type_scope:x_'='_x not
R33364:33364 AV.Integers <> a var
R33368:33370 AV.Integers Make add def
R33374:33374 AV.Integers <> c var
R33372:33372 AV.Integers <> b var
R33420:33428 AV.Integers Make sub_add_l thm
R33420:33428 AV.Integers Make sub_add_l thm
R33420:33428 AV.Integers Make sub_add_l thm
R33439:33446 AV.Integers Make sub_idem thm
R33439:33446 AV.Integers Make sub_idem thm
R33439:33446 AV.Integers Make sub_idem thm
R33459:33468 AV.Integers Make add_commut thm
R33459:33468 AV.Integers Make add_commut thm
R33459:33468 AV.Integers Make add_commut thm
R33479:33486 AV.Integers Make add_zero thm
R33479:33486 AV.Integers Make add_zero thm
R33479:33486 AV.Integers Make add_zero thm
R33513:33528 AV.Integers Make modu_divu_Euclid thm
R33513:33528 AV.Integers Make modu_divu_Euclid thm
prf 33549:33564 Make mods_divs_Euclid
R33582:33584 Coq.Init.Logic <> :type_scope:x_'='_x not
R33581:33581 AV.Integers <> x var
R33585:33587 AV.Integers Make add def
R33609:33612 AV.Integers Make mods def
R33616:33616 AV.Integers <> y var
R33614:33614 AV.Integers <> x var
R33590:33592 AV.Integers Make mul def
R33605:33605 AV.Integers <> y var
R33595:33598 AV.Integers Make divs def
R33602:33602 AV.Integers <> y var
R33600:33600 AV.Integers <> x var
R33644:33646 AV.Integers Make add def
R33649:33651 AV.Integers Make mul def
R33654:33657 AV.Integers Make divs def
R33660:33663 AV.Integers Make mods def
R33682:33685 AV.Integers Make repr def
R33688:33693 AV.Integers Make signed def
R33682:33685 AV.Integers Make repr def
R33688:33693 AV.Integers Make signed def
R33724:33735 AV.Integers Make eqm_samerepr thm
R33724:33735 AV.Integers Make eqm_samerepr thm
R33751:33756 AV.Integers Make signed def
R33751:33756 AV.Integers Make signed def
R33773:33778 AV.Integers Make signed def
R33773:33778 AV.Integers Make signed def
R33827:33829 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R33808:33808 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33821:33824 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33809:33814 Coq.ZArith.BinInt Z quot def
R33830:33834 Coq.ZArith.BinInt Z rem def
R33792:33800 AV.Integers Make eqm_trans thm
R33827:33829 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R33808:33808 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33821:33824 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33809:33814 Coq.ZArith.BinInt Z quot def
R33830:33834 Coq.ZArith.BinInt Z rem def
R33792:33800 AV.Integers Make eqm_trans thm
R33852:33860 AV.Integers Make eqm_refl2 thm
R33852:33860 AV.Integers Make eqm_refl2 thm
R33871:33880 Coq.ZArith.BinInt Z mul_comm thm
R33871:33880 Coq.ZArith.BinInt Z mul_comm thm
R33871:33880 Coq.ZArith.BinInt Z mul_comm thm
R33889:33899 Coq.ZArith.BinInt Z quot_rem' thm
R33889:33899 Coq.ZArith.BinInt Z quot_rem' thm
R33910:33916 AV.Integers Make eqm_add thm
R33910:33916 AV.Integers Make eqm_add thm
R33943:33961 AV.Integers Make eqm_unsigned_repr_r thm
R33943:33961 AV.Integers Make eqm_unsigned_repr_r thm
R33970:33977 AV.Integers Make eqm_mult thm
R33970:33977 AV.Integers Make eqm_mult thm
R34015:34033 AV.Integers Make eqm_signed_unsigned thm
R34015:34033 AV.Integers Make eqm_signed_unsigned thm
prf 34050:34058 Make mods_divs
R34083:34085 Coq.Init.Logic <> :type_scope:x_'='_x not
R34075:34078 AV.Integers Make mods def
R34082:34082 AV.Integers <> y var
R34080:34080 AV.Integers <> x var
R34086:34088 AV.Integers Make sub def
R34093:34095 AV.Integers Make mul def
R34108:34108 AV.Integers <> y var
R34098:34101 AV.Integers Make divs def
R34105:34105 AV.Integers <> y var
R34103:34103 AV.Integers <> x var
R34090:34090 AV.Integers <> x var
R34164:34167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34169:34171 Coq.Init.Logic <> :type_scope:x_'='_x not
R34168:34168 AV.Integers <> c var
R34172:34174 AV.Integers Make sub def
R34178:34178 AV.Integers <> b var
R34176:34176 AV.Integers <> a var
R34154:34156 Coq.Init.Logic <> :type_scope:x_'='_x not
R34153:34153 AV.Integers <> a var
R34157:34159 AV.Integers Make add def
R34163:34163 AV.Integers <> c var
R34161:34161 AV.Integers <> b var
R34164:34167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34169:34171 Coq.Init.Logic <> :type_scope:x_'='_x not
R34168:34168 AV.Integers <> c var
R34172:34174 AV.Integers Make sub def
R34178:34178 AV.Integers <> b var
R34176:34176 AV.Integers <> a var
R34154:34156 Coq.Init.Logic <> :type_scope:x_'='_x not
R34153:34153 AV.Integers <> a var
R34157:34159 AV.Integers Make add def
R34163:34163 AV.Integers <> c var
R34161:34161 AV.Integers <> b var
R34209:34217 AV.Integers Make sub_add_l thm
R34209:34217 AV.Integers Make sub_add_l thm
R34209:34217 AV.Integers Make sub_add_l thm
R34228:34235 AV.Integers Make sub_idem thm
R34228:34235 AV.Integers Make sub_idem thm
R34228:34235 AV.Integers Make sub_idem thm
R34248:34257 AV.Integers Make add_commut thm
R34248:34257 AV.Integers Make add_commut thm
R34248:34257 AV.Integers Make add_commut thm
R34268:34275 AV.Integers Make add_zero thm
R34268:34275 AV.Integers Make add_zero thm
R34268:34275 AV.Integers Make add_zero thm
R34301:34316 AV.Integers Make mods_divs_Euclid thm
R34301:34316 AV.Integers Make mods_divs_Euclid thm
prf 34333:34340 Make divu_one
R34365:34367 Coq.Init.Logic <> :type_scope:x_'='_x not
R34355:34358 AV.Integers Make divu def
R34362:34364 AV.Integers Make one def
R34360:34360 AV.Integers <> x var
R34368:34368 AV.Integers <> x var
R34387:34390 AV.Integers Make divu def
R34409:34420 AV.Integers Make unsigned_one thm
R34409:34420 AV.Integers Make unsigned_one thm
R34409:34420 AV.Integers Make unsigned_one thm
R34431:34438 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R34431:34438 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R34431:34438 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R34447:34459 AV.Integers Make repr_unsigned thm
R34447:34459 AV.Integers Make repr_unsigned thm
prf 34476:34483 Make divs_one
R34511:34514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34525:34527 Coq.Init.Logic <> :type_scope:x_'='_x not
R34515:34518 AV.Integers Make divs def
R34522:34524 AV.Integers Make one def
R34520:34520 AV.Integers <> x var
R34528:34528 AV.Integers <> x var
R34507:34509 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R34498:34506 AV.Integers Make zwordsize def
R34547:34550 AV.Integers Make divs def
R34569:34578 AV.Integers Make signed_one thm
R34569:34578 AV.Integers Make signed_one thm
R34569:34578 AV.Integers Make signed_one thm
R34569:34578 AV.Integers Make signed_one thm
R34589:34598 Coq.ZArith.BinInt Z quot_1_r thm
R34589:34598 Coq.ZArith.BinInt Z quot_1_r thm
R34589:34598 Coq.ZArith.BinInt Z quot_1_r thm
R34607:34617 AV.Integers Make repr_signed thm
R34607:34617 AV.Integers Make repr_signed thm
prf 34640:34647 Make modu_one
R34672:34674 Coq.Init.Logic <> :type_scope:x_'='_x not
R34662:34665 AV.Integers Make modu def
R34669:34671 AV.Integers Make one def
R34667:34667 AV.Integers <> x var
R34675:34678 AV.Integers Make zero def
R34706:34714 AV.Integers Make modu_divu thm
R34706:34714 AV.Integers Make modu_divu thm
R34706:34714 AV.Integers Make modu_divu thm
R34706:34714 AV.Integers Make modu_divu thm
R34725:34732 AV.Integers Make divu_one thm
R34725:34732 AV.Integers Make divu_one thm
R34725:34732 AV.Integers Make divu_one thm
R34743:34749 AV.Integers Make mul_one thm
R34743:34749 AV.Integers Make mul_one thm
R34743:34749 AV.Integers Make mul_one thm
R34758:34765 AV.Integers Make sub_idem thm
R34758:34765 AV.Integers Make sub_idem thm
R34776:34787 AV.Integers Make one_not_zero thm
R34776:34787 AV.Integers Make one_not_zero thm
prf 34804:34812 Make divs_mone
R34838:34840 Coq.Init.Logic <> :type_scope:x_'='_x not
R34827:34830 AV.Integers Make divs def
R34834:34837 AV.Integers Make mone def
R34832:34832 AV.Integers <> x var
R34841:34843 AV.Integers Make neg def
R34845:34845 AV.Integers <> x var
R34864:34867 AV.Integers Make divs def
R34870:34872 AV.Integers Make neg def
R34893:34903 AV.Integers Make signed_mone thm
R34893:34903 AV.Integers Make signed_mone thm
R34893:34903 AV.Integers Make signed_mone thm
R34917:34922 Coq.ZArith.BinInt Z quot def
R34925:34930 AV.Integers Make signed def
R34947:34949 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34958:34958 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34950:34955 AV.Integers Make signed def
R34917:34922 Coq.ZArith.BinInt Z quot def
R34925:34930 AV.Integers Make signed def
R34947:34949 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34958:34958 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34950:34955 AV.Integers Make signed def
R34970:34981 AV.Integers Make eqm_samerepr thm
R34970:34981 AV.Integers Make eqm_samerepr thm
R34990:34996 AV.Integers Make eqm_neg thm
R34990:34996 AV.Integers Make eqm_neg thm
R35005:35023 AV.Integers Make eqm_signed_unsigned thm
R35005:35023 AV.Integers Make eqm_signed_unsigned thm
R35039:35044 AV.Integers Make signed def
R35039:35044 AV.Integers Make signed def
R35088:35089 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R35088:35089 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R35104:35114 Coq.ZArith.Zquot <> Zquot_opp_r thm
R35104:35114 Coq.ZArith.Zquot <> Zquot_opp_r thm
R35104:35114 Coq.ZArith.Zquot <> Zquot_opp_r thm
R35140:35142 Coq.Init.Logic <> :type_scope:x_'='_x not
R35127:35132 Coq.ZArith.BinInt Z quot def
R35140:35142 Coq.Init.Logic <> :type_scope:x_'='_x not
R35127:35132 Coq.ZArith.BinInt Z quot def
R35166:35182 Coq.ZArith.Zquot <> Zquot_unique_full thm
R35166:35182 Coq.ZArith.Zquot <> Zquot_unique_full thm
R35207:35211 Coq.ZArith.BinInt Z abs def
R35207:35211 Coq.ZArith.BinInt Z abs def
R35238:35240 AV.Coqlib <> zle def
R35238:35240 AV.Coqlib <> zle def
R35285:35287 AV.Integers Make one def
prf 35324:35332 Make mods_mone
R35358:35360 Coq.Init.Logic <> :type_scope:x_'='_x not
R35347:35350 AV.Integers Make mods def
R35354:35357 AV.Integers Make mone def
R35352:35352 AV.Integers <> x var
R35361:35364 AV.Integers Make zero def
R35392:35400 AV.Integers Make mods_divs thm
R35392:35400 AV.Integers Make mods_divs thm
R35392:35400 AV.Integers Make mods_divs thm
R35411:35419 AV.Integers Make divs_mone thm
R35411:35419 AV.Integers Make divs_mone thm
R35411:35419 AV.Integers Make divs_mone thm
R35435:35449 AV.Integers Make neg_mul_distr_l thm
R35435:35449 AV.Integers Make neg_mul_distr_l thm
R35435:35449 AV.Integers Make neg_mul_distr_l thm
R35460:35467 AV.Integers Make mul_mone thm
R35460:35467 AV.Integers Make mul_mone thm
R35460:35467 AV.Integers Make mul_mone thm
R35478:35491 AV.Integers Make neg_involutive thm
R35478:35491 AV.Integers Make neg_involutive thm
R35478:35491 AV.Integers Make neg_involutive thm
R35500:35507 AV.Integers Make sub_idem thm
R35500:35507 AV.Integers Make sub_idem thm
prf 35524:35541 Make divmodu2_divu_modu
R35569:35572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35590:35592 Coq.Init.Logic <> :type_scope:x_'='_x not
R35573:35580 AV.Integers Make divmodu2 def
R35589:35589 AV.Integers <> d var
R35587:35587 AV.Integers <> n var
R35582:35585 AV.Integers Make zero def
R35593:35596 Coq.Init.Datatypes <> Some constr
R35598:35598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35607:35608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35617:35617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35599:35602 AV.Integers Make divu def
R35606:35606 AV.Integers <> d var
R35604:35604 AV.Integers <> n var
R35609:35612 AV.Integers Make modu def
R35616:35616 AV.Integers <> d var
R35614:35614 AV.Integers <> n var
R35561:35564 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35560:35560 AV.Integers <> d var
R35565:35568 AV.Integers Make zero def
R35636:35643 AV.Integers Make divmodu2 def
R35646:35649 AV.Integers Make divu def
R35652:35655 AV.Integers Make modu def
R35676:35687 AV.Coqlib <> dec_eq_false thm
R35676:35687 AV.Coqlib <> dec_eq_false thm
R35676:35687 AV.Coqlib <> dec_eq_false thm
R35733:35735 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35723:35725 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R35710:35717 AV.Integers Make unsigned def
R35719:35722 AV.Integers Make zero def
R35726:35732 AV.Integers Make modulus def
R35736:35743 AV.Integers Make unsigned def
R35733:35735 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35723:35725 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R35710:35717 AV.Integers Make unsigned def
R35719:35722 AV.Integers Make zero def
R35726:35732 AV.Integers Make modulus def
R35736:35743 AV.Integers Make unsigned def
R35773:35775 Coq.Init.Logic <> :type_scope:x_'='_x not
R35763:35770 AV.Integers Make unsigned def
R35790:35790 Coq.Numbers.BinNums <> N ind
R35801:35813 AV.Integers Make unsigned_zero thm
R35773:35775 Coq.Init.Logic <> :type_scope:x_'='_x not
R35763:35770 AV.Integers Make unsigned def
R35801:35813 AV.Integers Make unsigned_zero thm
R35801:35813 AV.Integers Make unsigned_zero thm
R35849:35856 AV.Integers Make unsigned def
R35849:35856 AV.Integers Make unsigned def
R35875:35877 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R35893:35897 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R35875:35877 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R35893:35897 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R35930:35932 Coq.Init.Logic <> :type_scope:x_'='_x not
R35916:35925 Coq.ZArith.BinInt Z div_eucl def
R35933:35933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35935:35936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35938:35938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35930:35932 Coq.Init.Logic <> :type_scope:x_'='_x not
R35916:35925 Coq.ZArith.BinInt Z div_eucl def
R35933:35933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35935:35936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35938:35938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35959:35963 Coq.ZArith.BinInt Z div def
R35966:35973 Coq.ZArith.BinInt Z modulo def
R35986:35995 Coq.ZArith.BinInt Z div_eucl def
R35986:35995 Coq.ZArith.BinInt Z div_eucl def
R36033:36040 AV.Coqlib <> zle_true thm
R36033:36040 AV.Coqlib <> zle_true thm
R36033:36040 AV.Coqlib <> zle_true thm
R36033:36040 AV.Coqlib <> zle_true thm
R36069:36072 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36059:36066 AV.Integers Make unsigned def
R36069:36072 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36059:36066 AV.Integers Make unsigned def
R36114:36126 AV.Integers Make repr_unsigned thm
R36114:36126 AV.Integers Make repr_unsigned thm
R36114:36126 AV.Integers Make repr_unsigned thm
R36163:36165 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R36163:36165 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R36196:36209 AV.Integers Make unsigned_range thm
R36196:36209 AV.Integers Make unsigned_range thm
R36243:36246 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36248:36251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36252:36263 AV.Integers Make max_unsigned def
R36243:36246 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36248:36251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36252:36263 AV.Integers Make max_unsigned def
R36287:36301 AV.Coqlib <> Zdiv_interval_2 thm
R36287:36301 AV.Coqlib <> Zdiv_interval_2 thm
R36329:36344 AV.Integers Make unsigned_range_2 thm
R36329:36344 AV.Integers Make unsigned_range_2 thm
R36365:36376 AV.Integers Make max_unsigned def
R36390:36400 AV.Integers Make modulus_pos thm
R36390:36400 AV.Integers Make modulus_pos thm
prf 36440:36454 Make unsigned_signed
R36479:36481 Coq.Init.Logic <> :type_scope:x_'='_x not
R36469:36476 AV.Integers Make unsigned def
R36478:36478 AV.Integers <> n var
R36485:36486 AV.Integers Make lt def
R36490:36493 AV.Integers Make zero def
R36488:36488 AV.Integers <> n var
R36524:36529 AV.Integers Make signed def
R36531:36531 AV.Integers <> n var
R36508:36510 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36500:36505 AV.Integers Make signed def
R36507:36507 AV.Integers <> n var
R36511:36517 AV.Integers Make modulus def
R36558:36559 AV.Integers Make lt def
R36570:36580 AV.Integers Make signed_zero thm
R36570:36580 AV.Integers Make signed_zero thm
R36570:36580 AV.Integers Make signed_zero thm
R36590:36595 AV.Integers Make signed def
R36612:36625 AV.Integers Make unsigned_range thm
R36612:36625 AV.Integers Make unsigned_range thm
R36639:36658 AV.Integers Make half_modulus_modulus thm
R36639:36658 AV.Integers Make half_modulus_modulus thm
R36639:36658 AV.Integers Make half_modulus_modulus thm
R36681:36683 AV.Coqlib <> zlt def
R36698:36709 AV.Integers Make half_modulus def
R36686:36693 AV.Integers Make unsigned def
R36681:36683 AV.Coqlib <> zlt def
R36698:36709 AV.Integers Make half_modulus def
R36686:36693 AV.Integers Make unsigned def
R36723:36731 AV.Coqlib <> zlt_false thm
R36723:36731 AV.Coqlib <> zlt_false thm
R36723:36731 AV.Coqlib <> zlt_false thm
R36759:36766 AV.Coqlib <> zlt_true thm
R36759:36766 AV.Coqlib <> zlt_true thm
R36759:36766 AV.Coqlib <> zlt_true thm
prf 36798:36815 Make divmods2_divs_mods
R36843:36846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36880:36885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36933:36935 Coq.Init.Logic <> :type_scope:x_'='_x not
R36886:36893 AV.Integers Make divmods2 def
R36932:36932 AV.Integers <> d var
R36930:36930 AV.Integers <> n var
R36899:36900 AV.Integers Make lt def
R36904:36907 AV.Integers Make zero def
R36902:36902 AV.Integers <> n var
R36924:36927 AV.Integers Make zero def
R36914:36917 AV.Integers Make mone def
R36936:36939 Coq.Init.Datatypes <> Some constr
R36941:36941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36950:36951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36960:36960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36942:36945 AV.Integers Make divs def
R36949:36949 AV.Integers <> d var
R36947:36947 AV.Integers <> n var
R36952:36955 AV.Integers Make mods def
R36959:36959 AV.Integers <> d var
R36957:36957 AV.Integers <> n var
R36867:36870 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36848:36851 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36847:36847 AV.Integers <> n var
R36852:36855 AV.Integers Make repr def
R36857:36866 AV.Integers Make min_signed def
R36872:36875 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36871:36871 AV.Integers <> d var
R36876:36879 AV.Integers Make mone def
R36835:36838 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36834:36834 AV.Integers <> d var
R36839:36842 AV.Integers Make zero def
R36979:36986 AV.Integers Make divmods2 def
R36989:36992 AV.Integers Make divs def
R36995:36998 AV.Integers Make mods def
R37019:37030 AV.Coqlib <> dec_eq_false thm
R37019:37030 AV.Coqlib <> dec_eq_false thm
R37019:37030 AV.Coqlib <> dec_eq_false thm
R37104:37106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37094:37096 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R37053:37058 AV.Integers Make signed def
R37064:37065 AV.Integers Make lt def
R37069:37072 AV.Integers Make zero def
R37089:37092 AV.Integers Make zero def
R37079:37082 AV.Integers Make mone def
R37097:37103 AV.Integers Make modulus def
R37107:37114 AV.Integers Make unsigned def
R37104:37106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37094:37096 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R37053:37058 AV.Integers Make signed def
R37064:37065 AV.Integers Make lt def
R37069:37072 AV.Integers Make zero def
R37089:37092 AV.Integers Make zero def
R37079:37082 AV.Integers Make mone def
R37097:37103 AV.Integers Make modulus def
R37107:37114 AV.Integers Make unsigned def
R37132:37137 AV.Integers Make signed def
R37132:37137 AV.Integers Make signed def
R37154:37157 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37154:37157 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37209:37219 AV.Integers Make repr_signed thm
R37209:37219 AV.Integers Make repr_signed thm
R37209:37219 AV.Integers Make repr_signed thm
R37256:37258 Coq.Init.Logic <> :type_scope:x_'='_x not
R37259:37264 AV.Integers Make signed def
R37256:37258 Coq.Init.Logic <> :type_scope:x_'='_x not
R37259:37264 AV.Integers Make signed def
R37281:37281 Coq.Numbers.BinNums <> N ind
R37292:37306 AV.Integers Make unsigned_signed thm
R37292:37306 AV.Integers Make unsigned_signed thm
R37292:37306 AV.Integers Make unsigned_signed thm
R37319:37320 AV.Integers Make lt def
R37324:37327 AV.Integers Make zero def
R37319:37320 AV.Integers Make lt def
R37324:37327 AV.Integers Make zero def
R37343:37353 AV.Integers Make signed_mone thm
R37343:37353 AV.Integers Make signed_mone thm
R37343:37353 AV.Integers Make signed_mone thm
R37374:37384 AV.Integers Make signed_zero thm
R37374:37384 AV.Integers Make signed_zero thm
R37374:37384 AV.Integers Make signed_zero thm
R37407:37412 Coq.ZArith.BinInt Z quot def
R37430:37434 Coq.ZArith.BinInt Z rem def
R37407:37412 Coq.ZArith.BinInt Z quot def
R37430:37434 Coq.ZArith.BinInt Z rem def
R37469:37471 Coq.Init.Logic <> :type_scope:x_'='_x not
R37456:37464 Coq.ZArith.BinInt Z quotrem def
R37472:37472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37474:37475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37477:37477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37469:37471 Coq.Init.Logic <> :type_scope:x_'='_x not
R37456:37464 Coq.ZArith.BinInt Z quotrem def
R37472:37472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37474:37475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37477:37477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37498:37503 Coq.ZArith.BinInt Z quot def
R37506:37510 Coq.ZArith.BinInt Z rem def
R37523:37531 Coq.ZArith.BinInt Z quotrem def
R37523:37531 Coq.ZArith.BinInt Z quotrem def
R37581:37584 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37586:37589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37571:37580 AV.Integers Make min_signed def
R37590:37599 AV.Integers Make max_signed def
R37624:37635 AV.Integers Make signed_range thm
R37581:37584 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37586:37589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37571:37580 AV.Integers Make min_signed def
R37590:37599 AV.Integers Make max_signed def
R37624:37635 AV.Integers Make signed_range thm
R37659:37662 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37664:37667 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37649:37658 AV.Integers Make min_signed def
R37668:37677 AV.Integers Make max_signed def
R37659:37662 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37664:37667 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R37649:37658 AV.Integers Make min_signed def
R37668:37677 AV.Integers Make max_signed def
R37705:37707 AV.Coqlib <> zeq def
R37729:37731 AV.Coqlib <> zeq def
R37705:37707 AV.Coqlib <> zeq def
R37729:37731 AV.Coqlib <> zeq def
R37782:37791 Coq.ZArith.BinInt Z quot_1_r thm
R37782:37791 Coq.ZArith.BinInt Z quot_1_r thm
R37782:37791 Coq.ZArith.BinInt Z quot_1_r thm
R37850:37854 Coq.ZArith.BinInt Z opp def
R37850:37854 Coq.ZArith.BinInt Z opp def
R37850:37854 Coq.ZArith.BinInt Z opp def
R37868:37879 Coq.ZArith.BinInt Z quot_opp_r thm
R37868:37879 Coq.ZArith.BinInt Z quot_opp_r thm
R37868:37879 Coq.ZArith.BinInt Z quot_opp_r thm
R37903:37912 Coq.ZArith.BinInt Z quot_1_r thm
R37903:37912 Coq.ZArith.BinInt Z quot_1_r thm
R37903:37912 Coq.ZArith.BinInt Z quot_1_r thm
R37928:37931 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37932:37941 AV.Integers Make min_signed def
R37928:37931 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37932:37941 AV.Integers Make min_signed def
R38004:38014 AV.Integers Make repr_signed thm
R38004:38014 AV.Integers Make repr_signed thm
R38004:38014 AV.Integers Make repr_signed thm
R38080:38090 AV.Integers Make repr_signed thm
R38080:38090 AV.Integers Make repr_signed thm
R38080:38090 AV.Integers Make repr_signed thm
R38141:38150 AV.Integers Make min_signed def
R38153:38162 AV.Integers Make max_signed def
R38225:38227 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R38207:38211 Coq.ZArith.BinInt Z abs def
R38214:38219 Coq.ZArith.BinInt Z quot def
R38228:38239 AV.Integers Make half_modulus def
R38225:38227 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R38207:38211 Coq.ZArith.BinInt Z abs def
R38214:38219 Coq.ZArith.BinInt Z quot def
R38228:38239 AV.Integers Make half_modulus def
R38260:38269 Coq.ZArith.BinInt Z quot_abs thm
R38260:38269 Coq.ZArith.BinInt Z quot_abs thm
R38260:38269 Coq.ZArith.BinInt Z quot_abs thm
R38287:38306 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R38287:38306 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R38375:38377 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38363:38374 AV.Integers Make half_modulus def
R38343:38355 Coq.ZArith.BinInt Z le_lt_trans thm
R38375:38377 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38363:38374 AV.Integers Make half_modulus def
R38343:38355 Coq.ZArith.BinInt Z le_lt_trans thm
R38396:38404 Coq.ZArith.BinInt Z mul_1_r thm
R38396:38404 Coq.ZArith.BinInt Z mul_1_r thm
R38396:38404 Coq.ZArith.BinInt Z mul_1_r thm
R38414:38423 AV.Integers Make min_signed def
R38426:38435 AV.Integers Make max_signed def
R38464:38480 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R38464:38480 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R38494:38509 AV.Integers Make half_modulus_pos thm
R38494:38509 AV.Integers Make half_modulus_pos thm
R38541:38548 Coq.ZArith.BinInt Z abs_lt thm
R38541:38548 Coq.ZArith.BinInt Z abs_lt thm
R38541:38548 Coq.ZArith.BinInt Z abs_lt thm
R38568:38577 AV.Integers Make min_signed def
R38580:38589 AV.Integers Make max_signed def
R38612:38623 AV.Coqlib <> proj_sumbool def
R38636:38643 AV.Coqlib <> zle_true thm
R38636:38643 AV.Coqlib <> zle_true thm
R38636:38643 AV.Coqlib <> zle_true thm
R38636:38643 AV.Coqlib <> zle_true thm
R38636:38643 AV.Coqlib <> zle_true thm
prf 38795:38804 Make Ztestbit_0
R38830:38832 Coq.Init.Logic <> :type_scope:x_'='_x not
R38817:38825 Coq.ZArith.BinInt Z testbit def
R38829:38829 AV.Integers <> n var
R38833:38837 Coq.Init.Datatypes <> false constr
R38846:38858 Coq.ZArith.BinInt Z testbit_0_l thm
prf 38869:38878 Make Ztestbit_1
R38904:38906 Coq.Init.Logic <> :type_scope:x_'='_x not
R38891:38899 Coq.ZArith.BinInt Z testbit def
R38903:38903 AV.Integers <> n var
R38907:38909 AV.Coqlib <> zeq def
R38911:38911 AV.Integers <> n var
prf 38971:38981 Make Ztestbit_m1
R39000:39003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39020:39022 Coq.Init.Logic <> :type_scope:x_'='_x not
R39004:39012 Coq.ZArith.BinInt Z testbit def
R39019:39019 AV.Integers <> n var
R39023:39026 Coq.Init.Datatypes <> true constr
R38995:38998 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R38999:38999 AV.Integers <> n var
prf 39084:39096 Make Zshiftin_spec
R39125:39127 Coq.Init.Logic <> :type_scope:x_'='_x not
R39113:39120 AV.Integers Make Zshiftin def
R39124:39124 AV.Integers <> x var
R39122:39122 AV.Integers <> b var
R39133:39136 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39155:39155 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39129:39131 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R39132:39132 AV.Integers <> x var
R39140:39140 AV.Integers <> b var
R39174:39181 AV.Integers Make Zshiftin def
R39216:39233 Coq.ZArith.BinInt Z succ_double_spec thm
R39216:39233 Coq.ZArith.BinInt Z succ_double_spec thm
R39216:39233 Coq.ZArith.BinInt Z succ_double_spec thm
R39255:39267 Coq.ZArith.BinInt Z double_spec thm
R39255:39267 Coq.ZArith.BinInt Z double_spec thm
R39255:39267 Coq.ZArith.BinInt Z double_spec thm
prf 39290:39301 Make Zshiftin_inj
R39359:39362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39370:39373 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39365:39367 Coq.Init.Logic <> :type_scope:x_'='_x not
R39363:39364 AV.Integers <> b1 var
R39368:39369 AV.Integers <> b2 var
R39376:39378 Coq.Init.Logic <> :type_scope:x_'='_x not
R39374:39375 AV.Integers <> x1 var
R39379:39380 AV.Integers <> x2 var
R39342:39344 Coq.Init.Logic <> :type_scope:x_'='_x not
R39328:39335 AV.Integers Make Zshiftin def
R39340:39341 AV.Integers <> x1 var
R39337:39338 AV.Integers <> b1 var
R39345:39352 AV.Integers Make Zshiftin def
R39357:39358 AV.Integers <> x2 var
R39354:39355 AV.Integers <> b2 var
R39409:39421 AV.Integers Make Zshiftin_spec thm
R39409:39421 AV.Integers Make Zshiftin_spec thm
R39409:39421 AV.Integers Make Zshiftin_spec thm
R39409:39421 AV.Integers Make Zshiftin_spec thm
R39409:39421 AV.Integers Make Zshiftin_spec thm
prf 39560:39566 Make Zdecomp
R39582:39584 Coq.Init.Logic <> :type_scope:x_'='_x not
R39581:39581 AV.Integers <> x var
R39585:39592 AV.Integers Make Zshiftin def
R39605:39610 Coq.ZArith.BinInt Z div2 def
R39612:39612 AV.Integers <> x var
R39595:39599 Coq.ZArith.BinInt Z odd def
R39601:39601 AV.Integers <> x var
R39721:39740 Coq.PArith.BinPos Pos pred_double_succ thm
R39721:39740 Coq.PArith.BinPos Pos pred_double_succ thm
R39721:39740 Coq.PArith.BinPos Pos pred_double_succ thm
prf 39762:39777 Make Ztestbit_shiftin
R39804:39809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39836:39838 Coq.Init.Logic <> :type_scope:x_'='_x not
R39810:39818 Coq.ZArith.BinInt Z testbit def
R39835:39835 AV.Integers <> n var
R39821:39828 AV.Integers Make Zshiftin def
R39832:39832 AV.Integers <> x var
R39830:39830 AV.Integers <> b var
R39842:39844 AV.Coqlib <> zeq def
R39846:39846 AV.Integers <> n var
R39862:39870 Coq.ZArith.BinInt Z testbit def
R39875:39880 Coq.ZArith.BinInt Z pred def
R39882:39882 AV.Integers <> n var
R39872:39872 AV.Integers <> x var
R39855:39855 AV.Integers <> b var
R39799:39802 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39803:39803 AV.Integers <> n var
R39911:39923 AV.Integers Make Zshiftin_spec thm
R39911:39923 AV.Integers Make Zshiftin_spec thm
R39911:39923 AV.Integers Make Zshiftin_spec thm
R39936:39938 AV.Coqlib <> zeq def
R39936:39938 AV.Coqlib <> zeq def
R39983:39997 Coq.ZArith.BinInt Z testbit_odd_0 thm
R39983:39997 Coq.ZArith.BinInt Z testbit_odd_0 thm
R40014:40022 Coq.ZArith.BinInt Z add_0_r thm
R40014:40022 Coq.ZArith.BinInt Z add_0_r thm
R40014:40022 Coq.ZArith.BinInt Z add_0_r thm
R40031:40046 Coq.ZArith.BinInt Z testbit_even_0 thm
R40031:40046 Coq.ZArith.BinInt Z testbit_even_0 thm
R40062:40065 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40066:40071 Coq.ZArith.BinInt Z pred def
R40062:40065 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40066:40071 Coq.ZArith.BinInt Z pred def
R40101:40106 Coq.ZArith.BinInt Z pred def
R40101:40106 Coq.ZArith.BinInt Z pred def
R40137:40142 Coq.ZArith.BinInt Z succ def
R40137:40142 Coq.ZArith.BinInt Z succ def
R40199:40216 Coq.ZArith.BinInt Z testbit_odd_succ thm
R40199:40216 Coq.ZArith.BinInt Z testbit_odd_succ thm
R40239:40247 Coq.ZArith.BinInt Z add_0_r thm
R40239:40247 Coq.ZArith.BinInt Z add_0_r thm
R40239:40247 Coq.ZArith.BinInt Z add_0_r thm
R40256:40274 Coq.ZArith.BinInt Z testbit_even_succ thm
R40256:40274 Coq.ZArith.BinInt Z testbit_even_succ thm
prf 40296:40316 Make Ztestbit_shiftin_base
R40359:40361 Coq.Init.Logic <> :type_scope:x_'='_x not
R40333:40341 Coq.ZArith.BinInt Z testbit def
R40344:40351 AV.Integers Make Zshiftin def
R40355:40355 AV.Integers <> x var
R40353:40353 AV.Integers <> b var
R40362:40362 AV.Integers <> b var
R40390:40405 AV.Integers Make Ztestbit_shiftin thm
R40390:40405 AV.Integers Make Ztestbit_shiftin thm
R40390:40405 AV.Integers Make Ztestbit_shiftin thm
R40390:40405 AV.Integers Make Ztestbit_shiftin thm
R40414:40421 AV.Coqlib <> zeq_true thm
R40414:40421 AV.Coqlib <> zeq_true thm
prf 40444:40464 Make Ztestbit_shiftin_succ
R40489:40492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40528:40530 Coq.Init.Logic <> :type_scope:x_'='_x not
R40493:40501 Coq.ZArith.BinInt Z testbit def
R40519:40524 Coq.ZArith.BinInt Z succ def
R40526:40526 AV.Integers <> n var
R40504:40511 AV.Integers Make Zshiftin def
R40515:40515 AV.Integers <> x var
R40513:40513 AV.Integers <> b var
R40531:40539 Coq.ZArith.BinInt Z testbit def
R40543:40543 AV.Integers <> n var
R40541:40541 AV.Integers <> x var
R40484:40487 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40488:40488 AV.Integers <> n var
R40571:40586 AV.Integers Make Ztestbit_shiftin thm
R40571:40586 AV.Integers Make Ztestbit_shiftin thm
R40571:40586 AV.Integers Make Ztestbit_shiftin thm
R40571:40586 AV.Integers Make Ztestbit_shiftin thm
R40597:40605 AV.Coqlib <> zeq_false thm
R40597:40605 AV.Coqlib <> zeq_false thm
R40597:40605 AV.Coqlib <> zeq_false thm
R40597:40605 AV.Coqlib <> zeq_false thm
R40616:40626 Coq.ZArith.BinInt Z pred_succ thm
R40616:40626 Coq.ZArith.BinInt Z pred_succ thm
R40616:40626 Coq.ZArith.BinInt Z pred_succ thm
prf 40664:40674 Make Ztestbit_eq
R40697:40702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40716:40718 Coq.Init.Logic <> :type_scope:x_'='_x not
R40703:40711 Coq.ZArith.BinInt Z testbit def
R40715:40715 AV.Integers <> n var
R40713:40713 AV.Integers <> x var
R40722:40724 AV.Coqlib <> zeq def
R40726:40726 AV.Integers <> n var
R40748:40756 Coq.ZArith.BinInt Z testbit def
R40770:40775 Coq.ZArith.BinInt Z pred def
R40777:40777 AV.Integers <> n var
R40759:40764 Coq.ZArith.BinInt Z div2 def
R40766:40766 AV.Integers <> x var
R40735:40739 Coq.ZArith.BinInt Z odd def
R40741:40741 AV.Integers <> x var
R40692:40695 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40696:40696 AV.Integers <> n var
R40807:40813 AV.Integers Make Zdecomp thm
R40807:40813 AV.Integers Make Zdecomp thm
R40807:40813 AV.Integers Make Zdecomp thm
R40830:40845 AV.Integers Make Ztestbit_shiftin thm
R40830:40845 AV.Integers Make Ztestbit_shiftin thm
prf 40867:40879 Make Ztestbit_base
R40907:40909 Coq.Init.Logic <> :type_scope:x_'='_x not
R40894:40902 Coq.ZArith.BinInt Z testbit def
R40904:40904 AV.Integers <> x var
R40910:40914 Coq.ZArith.BinInt Z odd def
R40916:40916 AV.Integers <> x var
R40944:40954 AV.Integers Make Ztestbit_eq thm
R40944:40954 AV.Integers Make Ztestbit_eq thm
R40944:40954 AV.Integers Make Ztestbit_eq thm
R40944:40954 AV.Integers Make Ztestbit_eq thm
R40963:40970 AV.Coqlib <> zeq_true thm
R40963:40970 AV.Coqlib <> zeq_true thm
prf 40993:41005 Make Ztestbit_succ
R41028:41031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41054:41056 Coq.Init.Logic <> :type_scope:x_'='_x not
R41032:41040 Coq.ZArith.BinInt Z testbit def
R41045:41050 Coq.ZArith.BinInt Z succ def
R41052:41052 AV.Integers <> n var
R41042:41042 AV.Integers <> x var
R41057:41065 Coq.ZArith.BinInt Z testbit def
R41078:41078 AV.Integers <> n var
R41068:41073 Coq.ZArith.BinInt Z div2 def
R41075:41075 AV.Integers <> x var
R41023:41026 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41027:41027 AV.Integers <> n var
R41106:41116 AV.Integers Make Ztestbit_eq thm
R41106:41116 AV.Integers Make Ztestbit_eq thm
R41106:41116 AV.Integers Make Ztestbit_eq thm
R41106:41116 AV.Integers Make Ztestbit_eq thm
R41127:41135 AV.Coqlib <> zeq_false thm
R41127:41135 AV.Coqlib <> zeq_false thm
R41127:41135 AV.Coqlib <> zeq_false thm
R41127:41135 AV.Coqlib <> zeq_false thm
R41146:41156 Coq.ZArith.BinInt Z pred_succ thm
R41146:41156 Coq.ZArith.BinInt Z pred_succ thm
R41146:41156 Coq.ZArith.BinInt Z pred_succ thm
prf 41193:41207 Make eqmod_same_bits
R41228:41228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41291:41297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41298:41302 AV.Integers Make eqmod def
R41324:41324 AV.Integers <> y var
R41322:41322 AV.Integers <> x var
R41305:41317 Coq.ZArith.Zpower <> two_power_nat def
R41319:41319 AV.Integers <> n var
R41258:41261 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41275:41277 Coq.Init.Logic <> :type_scope:x_'='_x not
R41262:41270 Coq.ZArith.BinInt Z testbit def
R41274:41274 AV.Integers <> i var
R41272:41272 AV.Integers <> x var
R41278:41286 Coq.ZArith.BinInt Z testbit def
R41290:41290 AV.Integers <> i var
R41288:41288 AV.Integers <> y var
R41240:41243 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41245:41247 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41244:41244 AV.Integers <> i var
R41244:41244 AV.Integers <> i var
R41248:41255 Coq.ZArith.BinInt Z of_nat def
R41257:41257 AV.Integers <> n var
R41369:41381 Coq.ZArith.Zpower <> two_power_nat def
R41369:41381 Coq.ZArith.Zpower <> two_power_nat def
R41403:41403 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41403:41403 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41426:41440 Coq.ZArith.Zpower <> two_power_nat_S thm
R41426:41440 Coq.ZArith.Zpower <> two_power_nat_S thm
R41426:41440 Coq.ZArith.Zpower <> two_power_nat_S thm
R41455:41459 AV.Integers Make eqmod def
R41491:41496 Coq.ZArith.BinInt Z div2 def
R41480:41485 Coq.ZArith.BinInt Z div2 def
R41462:41474 Coq.ZArith.Zpower <> two_power_nat def
R41455:41459 AV.Integers Make eqmod def
R41491:41496 Coq.ZArith.BinInt Z div2 def
R41480:41485 Coq.ZArith.BinInt Z div2 def
R41462:41474 Coq.ZArith.Zpower <> two_power_nat def
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41540:41552 AV.Integers Make Ztestbit_succ thm
R41572:41585 Coq.ZArith.Znat Nat2Z inj_succ thm
R41572:41585 Coq.ZArith.Znat Nat2Z inj_succ thm
R41572:41585 Coq.ZArith.Znat Nat2Z inj_succ thm
R41661:41667 AV.Integers Make Zdecomp thm
R41661:41667 AV.Integers Make Zdecomp thm
R41661:41667 AV.Integers Make Zdecomp thm
R41682:41688 AV.Integers Make Zdecomp thm
R41682:41688 AV.Integers Make Zdecomp thm
R41682:41688 AV.Integers Make Zdecomp thm
R41705:41709 Coq.ZArith.BinInt Z odd def
R41720:41724 Coq.ZArith.BinInt Z odd def
R41705:41709 Coq.ZArith.BinInt Z odd def
R41720:41724 Coq.ZArith.BinInt Z odd def
R41753:41765 AV.Integers Make Zshiftin_spec thm
R41753:41765 AV.Integers Make Zshiftin_spec thm
R41753:41765 AV.Integers Make Zshiftin_spec thm
R41753:41765 AV.Integers Make Zshiftin_spec thm
R41753:41765 AV.Integers Make Zshiftin_spec thm
R41799:41812 Coq.ZArith.Znat Nat2Z inj_succ thm
R41799:41812 Coq.ZArith.Znat Nat2Z inj_succ thm
R41799:41812 Coq.ZArith.Znat Nat2Z inj_succ thm
R41833:41845 AV.Integers Make Ztestbit_base thm
R41833:41845 AV.Integers Make Ztestbit_base thm
R41833:41845 AV.Integers Make Ztestbit_base thm
R41833:41845 AV.Integers Make Ztestbit_base thm
R41833:41845 AV.Integers Make Ztestbit_base thm
prf 41866:41878 Make eqm_same_bits
R41897:41897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41959:41965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41966:41968 AV.Integers Make eqm def
R41972:41972 AV.Integers <> y var
R41970:41970 AV.Integers <> x var
R41926:41929 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41943:41945 Coq.Init.Logic <> :type_scope:x_'='_x not
R41930:41938 Coq.ZArith.BinInt Z testbit def
R41942:41942 AV.Integers <> i var
R41940:41940 AV.Integers <> x var
R41946:41954 Coq.ZArith.BinInt Z testbit def
R41958:41958 AV.Integers <> i var
R41956:41956 AV.Integers <> y var
R41909:41912 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41914:41916 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41913:41913 AV.Integers <> i var
R41913:41913 AV.Integers <> i var
R41917:41925 AV.Integers Make zwordsize def
R41982:41996 AV.Integers Make eqmod_same_bits thm
R41998:42005 AV.Integers Make wordsize def
prf 42016:42030 Make same_bits_eqmod
R42080:42083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42103:42108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42122:42124 Coq.Init.Logic <> :type_scope:x_'='_x not
R42109:42117 Coq.ZArith.BinInt Z testbit def
R42121:42121 AV.Integers <> i var
R42119:42119 AV.Integers <> x var
R42125:42133 Coq.ZArith.BinInt Z testbit def
R42137:42137 AV.Integers <> i var
R42135:42135 AV.Integers <> y var
R42085:42088 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42090:42092 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42089:42089 AV.Integers <> i var
R42089:42089 AV.Integers <> i var
R42093:42100 Coq.ZArith.BinInt Z of_nat def
R42102:42102 AV.Integers <> n var
R42053:42057 AV.Integers Make eqmod def
R42079:42079 AV.Integers <> y var
R42077:42077 AV.Integers <> x var
R42060:42072 Coq.ZArith.Zpower <> two_power_nat def
R42074:42074 AV.Integers <> n var
R42219:42232 Coq.ZArith.Znat Nat2Z inj_succ thm
R42219:42232 Coq.ZArith.Znat Nat2Z inj_succ thm
R42219:42232 Coq.ZArith.Znat Nat2Z inj_succ thm
R42249:42263 Coq.ZArith.Zpower <> two_power_nat_S thm
R42249:42263 Coq.ZArith.Zpower <> two_power_nat_S thm
R42249:42263 Coq.ZArith.Zpower <> two_power_nat_S thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42285:42295 AV.Integers Make Ztestbit_eq thm
R42384:42403 Coq.Init.Logic <> :type_scope:x_'='_x not
R42355:42362 AV.Integers Make Zshiftin def
R42375:42380 Coq.ZArith.BinInt Z div2 def
R42365:42369 Coq.ZArith.BinInt Z odd def
R42404:42411 AV.Integers Make Zshiftin def
R42443:42445 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42425:42427 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R42428:42440 Coq.ZArith.Zpower <> two_power_nat def
R42446:42451 Coq.ZArith.BinInt Z div2 def
R42414:42418 Coq.ZArith.BinInt Z odd def
R42384:42403 Coq.Init.Logic <> :type_scope:x_'='_x not
R42355:42362 AV.Integers Make Zshiftin def
R42375:42380 Coq.ZArith.BinInt Z div2 def
R42365:42369 Coq.ZArith.BinInt Z odd def
R42404:42411 AV.Integers Make Zshiftin def
R42443:42445 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42425:42427 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R42428:42440 Coq.ZArith.Zpower <> two_power_nat def
R42446:42451 Coq.ZArith.BinInt Z div2 def
R42414:42418 Coq.ZArith.BinInt Z odd def
R42479:42485 AV.Integers Make Zdecomp thm
R42479:42485 AV.Integers Make Zdecomp thm
R42479:42485 AV.Integers Make Zdecomp thm
R42506:42512 AV.Integers Make Zdecomp thm
R42506:42512 AV.Integers Make Zdecomp thm
R42506:42512 AV.Integers Make Zdecomp thm
R42551:42563 AV.Integers Make Zshiftin_spec thm
R42551:42563 AV.Integers Make Zshiftin_spec thm
R42551:42563 AV.Integers Make Zshiftin_spec thm
R42551:42563 AV.Integers Make Zshiftin_spec thm
R42551:42563 AV.Integers Make Zshiftin_spec thm
R42590:42601 AV.Integers Make Zshiftin_inj thm
R42639:42641 AV.Coqlib <> zeq def
R42639:42641 AV.Coqlib <> zeq def
prf 42713:42725 Make same_bits_eqm
R42753:42758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42777:42782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42796:42798 Coq.Init.Logic <> :type_scope:x_'='_x not
R42783:42791 Coq.ZArith.BinInt Z testbit def
R42795:42795 AV.Integers <> i var
R42793:42793 AV.Integers <> x var
R42799:42807 Coq.ZArith.BinInt Z testbit def
R42811:42811 AV.Integers <> i var
R42809:42809 AV.Integers <> y var
R42760:42763 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42765:42767 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42764:42764 AV.Integers <> i var
R42764:42764 AV.Integers <> i var
R42768:42776 AV.Integers Make zwordsize def
R42746:42748 AV.Integers Make eqm def
R42752:42752 AV.Integers <> y var
R42750:42750 AV.Integers <> x var
R42821:42835 AV.Integers Make same_bits_eqmod thm
R42837:42844 AV.Integers Make wordsize def
prf 42856:42877 Make two_power_nat_infinity
R42898:42901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42902:42908 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42910:42911 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42913:42915 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R42912:42912 AV.Integers <> x var
R42916:42928 Coq.ZArith.Zpower <> two_power_nat def
R42930:42930 AV.Integers <> n var
R42893:42896 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42897:42897 AV.Integers <> x var
R42976:42986 Coq.ZArith.Wf_Z <> natlike_ind thm
R42976:42986 Coq.ZArith.Wf_Z <> natlike_ind thm
R43004:43004 Coq.Init.Datatypes <> O constr
R43004:43004 Coq.Init.Datatypes <> O constr
R43063:43063 Coq.Init.Datatypes <> S constr
R43063:43063 Coq.Init.Datatypes <> S constr
R43077:43091 Coq.ZArith.Zpower <> two_power_nat_S thm
R43077:43091 Coq.ZArith.Zpower <> two_power_nat_S thm
R43077:43091 Coq.ZArith.Zpower <> two_power_nat_S thm
R43108:43124 AV.Coqlib <> two_power_nat_pos thm
R43108:43124 AV.Coqlib <> two_power_nat_pos thm
prf 43149:43163 Make equal_same_bits
R43182:43182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43232:43238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43240:43242 Coq.Init.Logic <> :type_scope:x_'='_x not
R43239:43239 AV.Integers <> x var
R43243:43243 AV.Integers <> y var
R43199:43202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43216:43218 Coq.Init.Logic <> :type_scope:x_'='_x not
R43203:43211 Coq.ZArith.BinInt Z testbit def
R43215:43215 AV.Integers <> i var
R43213:43213 AV.Integers <> x var
R43219:43227 Coq.ZArith.BinInt Z testbit def
R43231:43231 AV.Integers <> i var
R43229:43229 AV.Integers <> y var
R43194:43197 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43198:43198 AV.Integers <> i var
R43278:43280 AV.Coqlib <> zlt def
R43303:43305 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43292:43294 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43278:43280 AV.Coqlib <> zlt def
R43303:43305 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43292:43294 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43321:43324 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43321:43324 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43353:43355 AV.Coqlib <> zlt def
R43353:43355 AV.Coqlib <> zlt def
R43381:43402 AV.Integers Make two_power_nat_infinity thm
R43381:43402 AV.Integers Make two_power_nat_infinity thm
R43439:43443 AV.Integers Make eqmod def
R43446:43458 Coq.ZArith.Zpower <> two_power_nat def
R43439:43443 AV.Integers Make eqmod def
R43446:43458 Coq.ZArith.Zpower <> two_power_nat def
R43479:43493 AV.Integers Make eqmod_same_bits thm
R43479:43493 AV.Integers Make eqmod_same_bits thm
R43530:43534 AV.Integers Make eqmod def
R43537:43549 Coq.ZArith.Zpower <> two_power_nat def
R43530:43534 AV.Integers Make eqmod def
R43537:43549 Coq.ZArith.Zpower <> two_power_nat def
R43584:43586 AV.Coqlib <> zlt def
R43584:43586 AV.Coqlib <> zlt def
R43615:43617 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43615:43617 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43637:43645 AV.Integers Make eqmod_sub thm
R43637:43645 AV.Integers Make eqmod_sub thm
R43654:43663 AV.Integers Make eqmod_refl thm
R43654:43663 AV.Integers Make eqmod_refl thm
R43693:43695 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43693:43695 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43715:43723 AV.Integers Make eqmod_sub thm
R43715:43723 AV.Integers Make eqmod_sub thm
R43732:43741 AV.Integers Make eqmod_refl thm
R43732:43741 AV.Integers Make eqmod_refl thm
R43750:43758 AV.Integers Make eqmod_sym thm
R43750:43758 AV.Integers Make eqmod_sym thm
R43778:43780 Coq.Init.Logic <> :type_scope:x_'='_x not
R43778:43780 Coq.Init.Logic <> :type_scope:x_'='_x not
R43816:43828 Coq.ZArith.Zpower <> two_power_nat def
R43795:43808 AV.Integers Make eqmod_small_eq thm
R43816:43828 Coq.ZArith.Zpower <> two_power_nat def
R43795:43808 AV.Integers Make eqmod_small_eq thm
R43859:43875 AV.Coqlib <> two_power_nat_pos thm
R43859:43875 AV.Coqlib <> two_power_nat_pos thm
R43916:43918 AV.Coqlib <> zlt def
R43916:43918 AV.Coqlib <> zlt def
prf 43945:43960 Make Z_one_complement
R43981:43986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44015:44017 Coq.Init.Logic <> :type_scope:x_'='_x not
R43997:44005 Coq.ZArith.BinInt Z testbit def
R44014:44014 AV.Integers <> i var
R44010:44010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44008:44008 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44009:44009 AV.Integers <> x var
R44018:44021 Coq.Init.Datatypes <> negb def
R44024:44032 Coq.ZArith.BinInt Z testbit def
R44036:44036 AV.Integers <> i var
R44034:44034 AV.Integers <> x var
R43976:43979 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43980:43980 AV.Integers <> i var
R44083:44091 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44083:44091 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44133:44139 AV.Integers Make Zdecomp thm
R44133:44139 AV.Integers Make Zdecomp thm
R44133:44139 AV.Integers Make Zdecomp thm
R44155:44160 Coq.ZArith.BinInt Z div2 def
R44155:44160 Coq.ZArith.BinInt Z div2 def
R44199:44201 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44177:44178 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44179:44186 AV.Integers Make Zshiftin def
R44189:44193 Coq.ZArith.BinInt Z odd def
R44216:44223 AV.Integers Make Zshiftin def
R44246:44248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44243:44244 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44226:44229 Coq.Init.Datatypes <> negb def
R44232:44236 Coq.ZArith.BinInt Z odd def
R44199:44201 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44177:44178 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44179:44186 AV.Integers Make Zshiftin def
R44189:44193 Coq.ZArith.BinInt Z odd def
R44216:44223 AV.Integers Make Zshiftin def
R44246:44248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44243:44244 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44226:44229 Coq.Init.Datatypes <> negb def
R44232:44236 Coq.ZArith.BinInt Z odd def
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44265:44280 AV.Integers Make Ztestbit_shiftin thm
R44301:44303 AV.Coqlib <> zeq def
R44301:44303 AV.Coqlib <> zeq def
R44346:44358 AV.Integers Make Zshiftin_spec thm
R44346:44358 AV.Integers Make Zshiftin_spec thm
R44346:44358 AV.Integers Make Zshiftin_spec thm
R44346:44358 AV.Integers Make Zshiftin_spec thm
R44346:44358 AV.Integers Make Zshiftin_spec thm
R44371:44375 Coq.ZArith.BinInt Z odd def
R44371:44375 Coq.ZArith.BinInt Z odd def
prf 44411:44424 Make Ztestbit_above
R44469:44474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44490:44495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44509:44511 Coq.Init.Logic <> :type_scope:x_'='_x not
R44496:44504 Coq.ZArith.BinInt Z testbit def
R44508:44508 AV.Integers <> i var
R44506:44506 AV.Integers <> x var
R44512:44516 Coq.Init.Datatypes <> false constr
R44476:44479 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R44475:44475 AV.Integers <> i var
R44480:44487 Coq.ZArith.BinInt Z of_nat def
R44489:44489 AV.Integers <> n var
R44446:44449 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44451:44453 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44450:44450 AV.Integers <> x var
R44450:44450 AV.Integers <> x var
R44454:44466 Coq.ZArith.Zpower <> two_power_nat def
R44468:44468 AV.Integers <> n var
R44561:44573 Coq.ZArith.Zpower <> two_power_nat def
R44561:44573 Coq.ZArith.Zpower <> two_power_nat def
R44632:44644 Coq.ZArith.BinInt Z testbit_0_l thm
R44632:44644 Coq.ZArith.BinInt Z testbit_0_l thm
R44659:44672 Coq.ZArith.Znat Nat2Z inj_succ thm
R44659:44672 Coq.ZArith.Znat Nat2Z inj_succ thm
R44659:44672 Coq.ZArith.Znat Nat2Z inj_succ thm
R44689:44699 AV.Integers Make Ztestbit_eq thm
R44689:44699 AV.Integers Make Ztestbit_eq thm
R44689:44699 AV.Integers Make Ztestbit_eq thm
R44689:44699 AV.Integers Make Ztestbit_eq thm
R44710:44718 AV.Coqlib <> zeq_false thm
R44710:44718 AV.Coqlib <> zeq_false thm
R44710:44718 AV.Coqlib <> zeq_false thm
R44710:44718 AV.Coqlib <> zeq_false thm
R44744:44758 Coq.ZArith.Zpower <> two_power_nat_S thm
R44744:44758 Coq.ZArith.Zpower <> two_power_nat_S thm
R44744:44758 Coq.ZArith.Zpower <> two_power_nat_S thm
R44775:44781 AV.Integers Make Zdecomp thm
R44775:44781 AV.Integers Make Zdecomp thm
R44775:44781 AV.Integers Make Zdecomp thm
R44804:44816 AV.Integers Make Zshiftin_spec thm
R44804:44816 AV.Integers Make Zshiftin_spec thm
R44804:44816 AV.Integers Make Zshiftin_spec thm
R44834:44838 Coq.ZArith.BinInt Z odd def
R44834:44838 Coq.ZArith.BinInt Z odd def
prf 44888:44905 Make Ztestbit_above_neg
R44951:44956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44972:44977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44991:44993 Coq.Init.Logic <> :type_scope:x_'='_x not
R44978:44986 Coq.ZArith.BinInt Z testbit def
R44990:44990 AV.Integers <> i var
R44988:44988 AV.Integers <> x var
R44994:44997 Coq.Init.Datatypes <> true constr
R44958:44961 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R44957:44957 AV.Integers <> i var
R44962:44969 Coq.ZArith.BinInt Z of_nat def
R44971:44971 AV.Integers <> n var
R44942:44945 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44947:44949 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44926:44926 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R44927:44939 Coq.ZArith.Zpower <> two_power_nat def
R44941:44941 AV.Integers <> n var
R44946:44946 AV.Integers <> x var
R44946:44946 AV.Integers <> x var
R45029:45029 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R45027:45027 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R45029:45029 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R45027:45027 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R45057:45059 Coq.Init.Logic <> :type_scope:x_'='_x not
R45044:45052 Coq.ZArith.BinInt Z testbit def
R45060:45064 Coq.Init.Datatypes <> false constr
R45057:45059 Coq.Init.Logic <> :type_scope:x_'='_x not
R45044:45052 Coq.ZArith.BinInt Z testbit def
R45060:45064 Coq.Init.Datatypes <> false constr
R45078:45091 AV.Integers Make Ztestbit_above thm
R45078:45091 AV.Integers Make Ztestbit_above thm
R45154:45169 AV.Integers Make Z_one_complement thm
R45154:45169 AV.Integers Make Z_one_complement thm
R45154:45169 AV.Integers Make Z_one_complement thm
R45154:45169 AV.Integers Make Z_one_complement thm
R45198:45201 Coq.Init.Datatypes <> negb def
R45203:45207 Coq.Init.Datatypes <> false constr
R45187:45190 Coq.Init.Datatypes <> true constr
R45187:45190 Coq.Init.Datatypes <> true constr
R45198:45201 Coq.Init.Datatypes <> negb def
R45203:45207 Coq.Init.Datatypes <> false constr
R45234:45248 Coq.Bool.Bool <> negb_involutive thm
R45234:45248 Coq.Bool.Bool <> negb_involutive thm
R45234:45248 Coq.Bool.Bool <> negb_involutive thm
prf 45278:45286 Make Zsign_bit
R45333:45338 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45363:45365 Coq.Init.Logic <> :type_scope:x_'='_x not
R45339:45347 Coq.ZArith.BinInt Z testbit def
R45352:45359 Coq.ZArith.BinInt Z of_nat def
R45361:45361 AV.Integers <> n var
R45349:45349 AV.Integers <> x var
R45369:45371 AV.Coqlib <> zlt def
R45376:45388 Coq.ZArith.Zpower <> two_power_nat def
R45390:45390 AV.Integers <> n var
R45373:45373 AV.Integers <> x var
R45409:45412 Coq.Init.Datatypes <> true constr
R45398:45402 Coq.Init.Datatypes <> false constr
R45306:45309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45311:45313 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45310:45310 AV.Integers <> x var
R45310:45310 AV.Integers <> x var
R45314:45326 Coq.ZArith.Zpower <> two_power_nat def
R45329:45329 Coq.Init.Datatypes <> S constr
R45331:45331 AV.Integers <> n var
R45457:45469 Coq.ZArith.Zpower <> two_power_nat def
R45457:45469 Coq.ZArith.Zpower <> two_power_nat def
R45504:45507 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45500:45502 Coq.Init.Logic <> :type_scope:x_'='_x not
R45509:45511 Coq.Init.Logic <> :type_scope:x_'='_x not
R45504:45507 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45500:45502 Coq.Init.Logic <> :type_scope:x_'='_x not
R45509:45511 Coq.Init.Logic <> :type_scope:x_'='_x not
R45576:45589 Coq.ZArith.Znat Nat2Z inj_succ thm
R45576:45589 Coq.ZArith.Znat Nat2Z inj_succ thm
R45576:45589 Coq.ZArith.Znat Nat2Z inj_succ thm
R45600:45610 AV.Integers Make Ztestbit_eq thm
R45600:45610 AV.Integers Make Ztestbit_eq thm
R45600:45610 AV.Integers Make Ztestbit_eq thm
R45600:45610 AV.Integers Make Ztestbit_eq thm
R45621:45629 AV.Coqlib <> zeq_false thm
R45621:45629 AV.Coqlib <> zeq_false thm
R45621:45629 AV.Coqlib <> zeq_false thm
R45621:45629 AV.Coqlib <> zeq_false thm
R45640:45650 Coq.ZArith.BinInt Z pred_succ thm
R45640:45650 Coq.ZArith.BinInt Z pred_succ thm
R45640:45650 Coq.ZArith.BinInt Z pred_succ thm
R45678:45692 Coq.ZArith.Zpower <> two_power_nat_S thm
R45678:45692 Coq.ZArith.Zpower <> two_power_nat_S thm
R45678:45692 Coq.ZArith.Zpower <> two_power_nat_S thm
R45709:45711 AV.Coqlib <> zlt def
R45725:45737 Coq.ZArith.Zpower <> two_power_nat def
R45714:45719 Coq.ZArith.BinInt Z div2 def
R45753:45759 AV.Integers Make Zdecomp thm
R45773:45785 AV.Integers Make Zshiftin_spec thm
R45709:45711 AV.Coqlib <> zlt def
R45725:45737 Coq.ZArith.Zpower <> two_power_nat def
R45714:45719 Coq.ZArith.BinInt Z div2 def
R45753:45759 AV.Integers Make Zdecomp thm
R45753:45759 AV.Integers Make Zdecomp thm
R45753:45759 AV.Integers Make Zdecomp thm
R45753:45759 AV.Integers Make Zdecomp thm
R45773:45785 AV.Integers Make Zshiftin_spec thm
R45773:45785 AV.Integers Make Zshiftin_spec thm
R45773:45785 AV.Integers Make Zshiftin_spec thm
R45773:45785 AV.Integers Make Zshiftin_spec thm
R45800:45807 AV.Coqlib <> zlt_true thm
R45800:45807 AV.Coqlib <> zlt_true thm
R45800:45807 AV.Coqlib <> zlt_true thm
R45800:45807 AV.Coqlib <> zlt_true thm
R45826:45830 Coq.ZArith.BinInt Z odd def
R45826:45830 Coq.ZArith.BinInt Z odd def
R45855:45863 AV.Coqlib <> zlt_false thm
R45855:45863 AV.Coqlib <> zlt_false thm
R45855:45863 AV.Coqlib <> zlt_false thm
R45855:45863 AV.Coqlib <> zlt_false thm
R45882:45886 Coq.ZArith.BinInt Z odd def
R45882:45886 Coq.ZArith.BinInt Z odd def
R45912:45918 AV.Integers Make Zdecomp thm
R45937:45949 AV.Integers Make Zshiftin_spec thm
R45912:45918 AV.Integers Make Zdecomp thm
R45912:45918 AV.Integers Make Zdecomp thm
R45937:45949 AV.Integers Make Zshiftin_spec thm
R45937:45949 AV.Integers Make Zshiftin_spec thm
R45969:45983 Coq.ZArith.Zpower <> two_power_nat_S thm
R45969:45983 Coq.ZArith.Zpower <> two_power_nat_S thm
R45969:45983 Coq.ZArith.Zpower <> two_power_nat_S thm
R46001:46005 Coq.ZArith.BinInt Z odd def
R46001:46005 Coq.ZArith.BinInt Z odd def
prf 46048:46059 Make Zshiftin_ind
R46076:46079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46075:46075 Coq.Numbers.BinNums <> Z ind
R46092:46097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46098:46098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46144:46150 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46167:46170 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46171:46171 AV.Integers <> P var
R46173:46173 AV.Integers <> x var
R46162:46165 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46166:46166 AV.Integers <> x var
R46117:46120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46124:46127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46128:46128 AV.Integers <> P var
R46131:46138 AV.Integers Make Zshiftin def
R46142:46142 AV.Integers <> x var
R46140:46140 AV.Integers <> b var
R46121:46121 AV.Integers <> P var
R46123:46123 AV.Integers <> x var
R46112:46115 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46116:46116 AV.Integers <> x var
R46089:46089 AV.Integers <> P var
R46249:46256 AV.Integers Make Zshiftin def
R46264:46268 Coq.ZArith.BinInt Z pos syndef
R46258:46261 Coq.Init.Datatypes <> true constr
R46249:46256 AV.Integers Make Zshiftin def
R46264:46268 Coq.ZArith.BinInt Z pos syndef
R46258:46261 Coq.Init.Datatypes <> true constr
R46299:46306 AV.Integers Make Zshiftin def
R46315:46319 Coq.ZArith.BinInt Z pos syndef
R46308:46312 Coq.Init.Datatypes <> false constr
R46299:46306 AV.Integers Make Zshiftin def
R46315:46319 Coq.ZArith.BinInt Z pos syndef
R46308:46312 Coq.Init.Datatypes <> false constr
R46350:46357 AV.Integers Make Zshiftin def
R46359:46362 Coq.Init.Datatypes <> true constr
R46350:46357 AV.Integers Make Zshiftin def
R46359:46362 Coq.Init.Datatypes <> true constr
prf 46445:46460 Make Zshiftin_pos_ind
R46477:46480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46476:46476 Coq.Numbers.BinNums <> Z ind
R46493:46498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46499:46499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46544:46550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46566:46569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46570:46570 AV.Integers <> P var
R46572:46572 AV.Integers <> x var
R46562:46564 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R46565:46565 AV.Integers <> x var
R46517:46520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46524:46527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46528:46528 AV.Integers <> P var
R46531:46538 AV.Integers Make Zshiftin def
R46542:46542 AV.Integers <> x var
R46540:46540 AV.Integers <> b var
R46521:46521 AV.Integers <> P var
R46523:46523 AV.Integers <> x var
R46513:46515 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R46516:46516 AV.Integers <> x var
R46490:46490 AV.Integers <> P var
R46667:46674 AV.Integers Make Zshiftin def
R46682:46686 Coq.ZArith.BinInt Z pos syndef
R46676:46679 Coq.Init.Datatypes <> true constr
R46667:46674 AV.Integers Make Zshiftin def
R46682:46686 Coq.ZArith.BinInt Z pos syndef
R46676:46679 Coq.Init.Datatypes <> true constr
R46717:46724 AV.Integers Make Zshiftin def
R46733:46737 Coq.ZArith.BinInt Z pos syndef
R46726:46730 Coq.Init.Datatypes <> false constr
R46717:46724 AV.Integers Make Zshiftin def
R46733:46737 Coq.ZArith.BinInt Z pos syndef
R46726:46730 Coq.Init.Datatypes <> false constr
prf 46775:46785 Make Ztestbit_le
R46810:46815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46816:46816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46881:46887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46889:46892 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46888:46888 AV.Integers <> x var
R46893:46893 AV.Integers <> y var
R46833:46836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46857:46860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46874:46876 Coq.Init.Logic <> :type_scope:x_'='_x not
R46861:46869 Coq.ZArith.BinInt Z testbit def
R46873:46873 AV.Integers <> i var
R46871:46871 AV.Integers <> y var
R46877:46880 Coq.Init.Datatypes <> true constr
R46850:46852 Coq.Init.Logic <> :type_scope:x_'='_x not
R46837:46845 Coq.ZArith.BinInt Z testbit def
R46849:46849 AV.Integers <> i var
R46847:46847 AV.Integers <> x var
R46853:46856 Coq.Init.Datatypes <> true constr
R46828:46831 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46832:46832 AV.Integers <> i var
R46805:46808 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46809:46809 AV.Integers <> y var
R46951:46962 AV.Integers Make Zshiftin_ind thm
R46951:46962 AV.Integers Make Zshiftin_ind thm
R47014:47028 AV.Integers Make equal_same_bits thm
R47014:47028 AV.Integers Make equal_same_bits thm
R47051:47060 AV.Integers Make Ztestbit_0 thm
R47051:47060 AV.Integers Make Ztestbit_0 thm
R47051:47060 AV.Integers Make Ztestbit_0 thm
R47073:47081 Coq.ZArith.BinInt Z testbit def
R47073:47081 Coq.ZArith.BinInt Z testbit def
R47137:47146 AV.Integers Make Ztestbit_0 thm
R47137:47146 AV.Integers Make Ztestbit_0 thm
R47137:47146 AV.Integers Make Ztestbit_0 thm
R47176:47179 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R47167:47172 Coq.ZArith.BinInt Z div2 def
R47176:47179 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R47167:47172 Coq.ZArith.BinInt Z div2 def
R47221:47226 Coq.ZArith.BinInt Z succ def
R47221:47226 Coq.ZArith.BinInt Z succ def
R47256:47268 AV.Integers Make Ztestbit_succ thm
R47256:47268 AV.Integers Make Ztestbit_succ thm
R47256:47268 AV.Integers Make Ztestbit_succ thm
R47256:47268 AV.Integers Make Ztestbit_succ thm
R47285:47305 AV.Integers Make Ztestbit_shiftin_succ thm
R47285:47305 AV.Integers Make Ztestbit_shiftin_succ thm
R47285:47305 AV.Integers Make Ztestbit_shiftin_succ thm
R47285:47305 AV.Integers Make Ztestbit_shiftin_succ thm
R47333:47339 AV.Integers Make Zdecomp thm
R47333:47339 AV.Integers Make Zdecomp thm
R47333:47339 AV.Integers Make Zdecomp thm
R47355:47367 AV.Integers Make Zshiftin_spec thm
R47355:47367 AV.Integers Make Zshiftin_spec thm
R47355:47367 AV.Integers Make Zshiftin_spec thm
R47355:47367 AV.Integers Make Zshiftin_spec thm
R47355:47367 AV.Integers Make Zshiftin_spec thm
R47384:47388 Coq.ZArith.BinInt Z odd def
R47384:47388 Coq.ZArith.BinInt Z odd def
R47479:47491 AV.Integers Make Ztestbit_base thm
R47479:47491 AV.Integers Make Ztestbit_base thm
R47479:47491 AV.Integers Make Ztestbit_base thm
R47512:47532 AV.Integers Make Ztestbit_shiftin_base thm
R47512:47532 AV.Integers Make Ztestbit_shiftin_base thm
R47512:47532 AV.Integers Make Ztestbit_shiftin_base thm
def 47611:47617 Make testbit
R47623:47625 AV.Integers Make int rec
R47632:47632 Coq.Numbers.BinNums <> Z ind
R47637:47640 Coq.Init.Datatypes <> bool ind
R47645:47653 Coq.ZArith.BinInt Z testbit def
R47668:47668 AV.Integers <> i var
R47656:47663 AV.Integers Make unsigned def
R47665:47665 AV.Integers <> x var
prf 47678:47689 Make testbit_repr
R47726:47731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47750:47752 Coq.Init.Logic <> :type_scope:x_'='_x not
R47732:47738 AV.Integers Make testbit def
R47749:47749 AV.Integers <> i var
R47741:47744 AV.Integers Make repr def
R47746:47746 AV.Integers <> x var
R47753:47761 Coq.ZArith.BinInt Z testbit def
R47765:47765 AV.Integers <> i var
R47763:47763 AV.Integers <> x var
R47709:47712 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47714:47716 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47713:47713 AV.Integers <> i var
R47713:47713 AV.Integers <> i var
R47717:47725 AV.Integers Make zwordsize def
R47792:47798 AV.Integers Make testbit def
R47807:47819 AV.Integers Make same_bits_eqm thm
R47807:47819 AV.Integers Make same_bits_eqm thm
prf 47850:47861 Make same_bits_eq
R47880:47880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47938:47944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47946:47948 Coq.Init.Logic <> :type_scope:x_'='_x not
R47945:47945 AV.Integers <> x var
R47949:47949 AV.Integers <> y var
R47909:47912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47924:47926 Coq.Init.Logic <> :type_scope:x_'='_x not
R47913:47919 AV.Integers Make testbit def
R47923:47923 AV.Integers <> i var
R47921:47921 AV.Integers <> x var
R47927:47933 AV.Integers Make testbit def
R47937:47937 AV.Integers <> i var
R47935:47935 AV.Integers <> y var
R47892:47895 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47897:47899 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47896:47896 AV.Integers <> i var
R47896:47896 AV.Integers <> i var
R47900:47908 AV.Integers Make zwordsize def
R47981:47993 AV.Integers Make repr_unsigned thm
R47981:47993 AV.Integers Make repr_unsigned thm
R47981:47993 AV.Integers Make repr_unsigned thm
R48011:48023 AV.Integers Make repr_unsigned thm
R48011:48023 AV.Integers Make repr_unsigned thm
R48011:48023 AV.Integers Make repr_unsigned thm
R48037:48048 AV.Integers Make eqm_samerepr thm
R48037:48048 AV.Integers Make eqm_samerepr thm
R48057:48069 AV.Integers Make eqm_same_bits thm
R48057:48069 AV.Integers Make eqm_same_bits thm
prf 48090:48099 Make bits_above
R48130:48133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48145:48147 Coq.Init.Logic <> :type_scope:x_'='_x not
R48134:48140 AV.Integers Make testbit def
R48144:48144 AV.Integers <> i var
R48142:48142 AV.Integers <> x var
R48148:48152 Coq.Init.Datatypes <> false constr
R48117:48120 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R48116:48116 AV.Integers <> i var
R48121:48129 AV.Integers Make zwordsize def
R48198:48205 AV.Integers Make wordsize def
R48178:48191 AV.Integers Make Ztestbit_above thm
R48198:48205 AV.Integers Make wordsize def
R48178:48191 AV.Integers Make Ztestbit_above thm
R48220:48233 AV.Integers Make unsigned_range thm
R48220:48233 AV.Integers Make unsigned_range thm
prf 48248:48256 Make bits_zero
R48285:48287 Coq.Init.Logic <> :type_scope:x_'='_x not
R48271:48277 AV.Integers Make testbit def
R48284:48284 AV.Integers <> i var
R48279:48282 AV.Integers Make zero def
R48288:48292 Coq.Init.Datatypes <> false constr
R48319:48325 AV.Integers Make testbit def
R48336:48348 AV.Integers Make unsigned_zero thm
R48336:48348 AV.Integers Make unsigned_zero thm
R48336:48348 AV.Integers Make unsigned_zero thm
R48357:48366 AV.Integers Make Ztestbit_0 thm
R48357:48366 AV.Integers Make Ztestbit_0 thm
prf 48382:48389 Make bits_one
R48415:48417 Coq.Init.Logic <> :type_scope:x_'='_x not
R48402:48408 AV.Integers Make testbit def
R48414:48414 AV.Integers <> n var
R48410:48412 AV.Integers Make one def
R48418:48420 AV.Coqlib <> zeq def
R48422:48422 AV.Integers <> n var
R48443:48449 AV.Integers Make testbit def
R48468:48479 AV.Integers Make unsigned_one thm
R48468:48479 AV.Integers Make unsigned_one thm
R48468:48479 AV.Integers Make unsigned_one thm
R48488:48497 AV.Integers Make Ztestbit_1 thm
R48488:48497 AV.Integers Make Ztestbit_1 thm
prf 48512:48520 Make bits_mone
R48553:48556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48571:48573 Coq.Init.Logic <> :type_scope:x_'='_x not
R48557:48563 AV.Integers Make testbit def
R48570:48570 AV.Integers <> i var
R48565:48568 AV.Integers Make mone def
R48574:48577 Coq.Init.Datatypes <> true constr
R48536:48539 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R48541:48543 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R48540:48540 AV.Integers <> i var
R48540:48540 AV.Integers <> i var
R48544:48552 AV.Integers Make zwordsize def
R48604:48607 AV.Integers Make mone def
R48618:48629 AV.Integers Make testbit_repr thm
R48618:48629 AV.Integers Make testbit_repr thm
R48618:48629 AV.Integers Make testbit_repr thm
R48618:48629 AV.Integers Make testbit_repr thm
R48644:48654 AV.Integers Make Ztestbit_m1 thm
R48644:48654 AV.Integers Make Ztestbit_m1 thm
R48683:48691 AV.Integers Make bits_zero thm
R48693:48701 AV.Integers Make bits_mone thm
R48746:48757 AV.Integers Make same_bits_eq thm
prf 48814:48833 Make sign_bit_of_unsigned
R48873:48875 Coq.Init.Logic <> :type_scope:x_'='_x not
R48848:48854 AV.Integers Make testbit def
R48868:48870 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R48859:48867 AV.Integers Make zwordsize def
R48856:48856 AV.Integers <> x var
R48879:48881 AV.Coqlib <> zlt def
R48896:48907 AV.Integers Make half_modulus def
R48884:48891 AV.Integers Make unsigned def
R48893:48893 AV.Integers <> x var
R48925:48928 Coq.Init.Datatypes <> true constr
R48914:48918 Coq.Init.Datatypes <> false constr
R48955:48961 AV.Integers Make testbit def
R48978:48990 Coq.Init.Nat <> pred def
R48992:48999 AV.Integers Make wordsize def
R48978:48990 Coq.Init.Nat <> pred def
R48992:48999 AV.Integers Make wordsize def
R49026:49028 Coq.Init.Logic <> :type_scope:x_'='_x not
R49022:49024 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R49013:49021 AV.Integers Make zwordsize def
R49029:49036 Coq.ZArith.BinInt Z of_nat def
R49026:49028 Coq.Init.Logic <> :type_scope:x_'='_x not
R49022:49024 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R49013:49021 AV.Integers Make zwordsize def
R49029:49036 Coq.ZArith.BinInt Z of_nat def
R49055:49063 AV.Integers Make zwordsize def
R49071:49078 AV.Integers Make wordsize def
R49094:49104 AV.Integers WS wordsize defax
R49094:49104 AV.Integers WS wordsize defax
R49128:49147 AV.Integers WS wordsize_not_zero prfax
R49128:49147 AV.Integers WS wordsize_not_zero prfax
R49168:49181 Coq.ZArith.Znat Nat2Z inj_succ thm
R49168:49181 Coq.ZArith.Znat Nat2Z inj_succ thm
R49168:49181 Coq.ZArith.Znat Nat2Z inj_succ thm
R49220:49222 Coq.Init.Logic <> :type_scope:x_'='_x not
R49208:49219 AV.Integers Make half_modulus def
R49223:49235 Coq.ZArith.Zpower <> two_power_nat def
R49220:49222 Coq.Init.Logic <> :type_scope:x_'='_x not
R49208:49219 AV.Integers Make half_modulus def
R49223:49235 Coq.ZArith.Zpower <> two_power_nat def
R49255:49273 AV.Coqlib <> two_power_nat_two_p thm
R49255:49273 AV.Coqlib <> two_power_nat_two_p thm
R49255:49273 AV.Coqlib <> two_power_nat_two_p thm
R49296:49313 AV.Integers Make half_modulus_power thm
R49296:49313 AV.Integers Make half_modulus_power thm
R49349:49357 AV.Integers Make Zsign_bit thm
R49349:49357 AV.Integers Make Zsign_bit thm
R49368:49382 Coq.ZArith.Zpower <> two_power_nat_S thm
R49368:49382 Coq.ZArith.Zpower <> two_power_nat_S thm
R49368:49382 Coq.ZArith.Zpower <> two_power_nat_S thm
R49413:49432 AV.Integers Make half_modulus_modulus thm
R49413:49432 AV.Integers Make half_modulus_modulus thm
R49413:49432 AV.Integers Make half_modulus_modulus thm
R49441:49454 AV.Integers Make unsigned_range thm
R49441:49454 AV.Integers Make unsigned_range thm
prf 49469:49479 Make bits_signed
R49502:49507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49530:49532 Coq.Init.Logic <> :type_scope:x_'='_x not
R49508:49516 Coq.ZArith.BinInt Z testbit def
R49529:49529 AV.Integers <> i var
R49519:49524 AV.Integers Make signed def
R49526:49526 AV.Integers <> x var
R49533:49539 AV.Integers Make testbit def
R49547:49549 AV.Coqlib <> zlt def
R49553:49561 AV.Integers Make zwordsize def
R49551:49551 AV.Integers <> i var
R49584:49586 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R49575:49583 AV.Integers Make zwordsize def
R49568:49568 AV.Integers <> i var
R49541:49541 AV.Integers <> x var
R49497:49500 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R49501:49501 AV.Integers <> i var
R49620:49622 AV.Coqlib <> zlt def
R49626:49634 AV.Integers Make zwordsize def
R49620:49622 AV.Coqlib <> zlt def
R49626:49634 AV.Integers Make zwordsize def
R49648:49660 AV.Integers Make same_bits_eqm thm
R49648:49660 AV.Integers Make same_bits_eqm thm
R49669:49687 AV.Integers Make eqm_signed_unsigned thm
R49669:49687 AV.Integers Make eqm_signed_unsigned thm
R49708:49713 AV.Integers Make signed def
R49724:49743 AV.Integers Make sign_bit_of_unsigned thm
R49724:49743 AV.Integers Make sign_bit_of_unsigned thm
R49724:49743 AV.Integers Make sign_bit_of_unsigned thm
R49756:49758 AV.Coqlib <> zlt def
R49773:49784 AV.Integers Make half_modulus def
R49761:49768 AV.Integers Make unsigned def
R49756:49758 AV.Coqlib <> zlt def
R49773:49784 AV.Integers Make half_modulus def
R49761:49768 AV.Integers Make unsigned def
R49820:49827 AV.Integers Make wordsize def
R49800:49813 AV.Integers Make Ztestbit_above thm
R49820:49827 AV.Integers Make wordsize def
R49800:49813 AV.Integers Make Ztestbit_above thm
R49836:49849 AV.Integers Make unsigned_range thm
R49836:49849 AV.Integers Make unsigned_range thm
R49894:49901 AV.Integers Make wordsize def
R49870:49887 AV.Integers Make Ztestbit_above_neg thm
R49894:49901 AV.Integers Make wordsize def
R49870:49887 AV.Integers Make Ztestbit_above_neg thm
R49915:49921 AV.Integers Make modulus def
R49915:49921 AV.Integers Make modulus def
R49936:49949 AV.Integers Make unsigned_range thm
R49936:49949 AV.Integers Make unsigned_range thm
prf 49980:49986 Make bits_le
R50005:50005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50078:50084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50095:50098 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R50085:50092 AV.Integers Make unsigned def
R50094:50094 AV.Integers <> x var
R50099:50106 AV.Integers Make unsigned def
R50108:50108 AV.Integers <> y var
R50034:50037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50056:50059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50071:50073 Coq.Init.Logic <> :type_scope:x_'='_x not
R50060:50066 AV.Integers Make testbit def
R50070:50070 AV.Integers <> i var
R50068:50068 AV.Integers <> y var
R50074:50077 Coq.Init.Datatypes <> true constr
R50049:50051 Coq.Init.Logic <> :type_scope:x_'='_x not
R50038:50044 AV.Integers Make testbit def
R50048:50048 AV.Integers <> i var
R50046:50046 AV.Integers <> x var
R50052:50055 Coq.Init.Datatypes <> true constr
R50017:50020 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50022:50024 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50021:50021 AV.Integers <> i var
R50021:50021 AV.Integers <> i var
R50025:50033 AV.Integers Make zwordsize def
R50134:50144 AV.Integers Make Ztestbit_le thm
R50134:50144 AV.Integers Make Ztestbit_le thm
R50159:50172 AV.Integers Make unsigned_range thm
R50159:50172 AV.Integers Make unsigned_range thm
R50201:50207 AV.Integers Make testbit def
R50201:50207 AV.Integers Make testbit def
R50225:50227 AV.Coqlib <> zlt def
R50231:50239 AV.Integers Make zwordsize def
R50225:50227 AV.Coqlib <> zlt def
R50231:50239 AV.Integers Make zwordsize def
R50275:50281 AV.Integers Make testbit def
R50275:50281 AV.Integers Make testbit def
R50303:50312 AV.Integers Make bits_above thm
R50303:50312 AV.Integers Make bits_above thm
R50303:50312 AV.Integers Make bits_above thm
R50303:50312 AV.Integers Make bits_above thm
prf 50397:50404 Make bits_and
R50441:50446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50466:50468 Coq.Init.Logic <> :type_scope:x_'='_x not
R50447:50453 AV.Integers Make testbit def
R50465:50465 AV.Integers <> i var
R50456:50458 AV.Integers Make and def
R50462:50462 AV.Integers <> y var
R50460:50460 AV.Integers <> x var
R50480:50483 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50469:50475 AV.Integers Make testbit def
R50479:50479 AV.Integers <> i var
R50477:50477 AV.Integers <> x var
R50484:50490 AV.Integers Make testbit def
R50494:50494 AV.Integers <> i var
R50492:50492 AV.Integers <> y var
R50424:50427 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50429:50431 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50428:50428 AV.Integers <> i var
R50428:50428 AV.Integers <> i var
R50432:50440 AV.Integers Make zwordsize def
R50521:50523 AV.Integers Make and def
R50534:50545 AV.Integers Make testbit_repr thm
R50534:50545 AV.Integers Make testbit_repr thm
R50534:50545 AV.Integers Make testbit_repr thm
R50534:50545 AV.Integers Make testbit_repr thm
R50562:50572 Coq.ZArith.BinInt Z land_spec thm
R50562:50572 Coq.ZArith.BinInt Z land_spec thm
R50562:50572 Coq.ZArith.BinInt Z land_spec thm
prf 50598:50604 Make bits_or
R50641:50646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50665:50667 Coq.Init.Logic <> :type_scope:x_'='_x not
R50647:50653 AV.Integers Make testbit def
R50664:50664 AV.Integers <> i var
R50656:50657 AV.Integers Make or def
R50661:50661 AV.Integers <> y var
R50659:50659 AV.Integers <> x var
R50679:50682 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R50668:50674 AV.Integers Make testbit def
R50678:50678 AV.Integers <> i var
R50676:50676 AV.Integers <> x var
R50683:50689 AV.Integers Make testbit def
R50693:50693 AV.Integers <> i var
R50691:50691 AV.Integers <> y var
R50624:50627 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50629:50631 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50628:50628 AV.Integers <> i var
R50628:50628 AV.Integers <> i var
R50632:50640 AV.Integers Make zwordsize def
R50720:50721 AV.Integers Make or def
R50732:50743 AV.Integers Make testbit_repr thm
R50732:50743 AV.Integers Make testbit_repr thm
R50732:50743 AV.Integers Make testbit_repr thm
R50732:50743 AV.Integers Make testbit_repr thm
R50760:50769 Coq.ZArith.BinInt Z lor_spec thm
R50760:50769 Coq.ZArith.BinInt Z lor_spec thm
R50760:50769 Coq.ZArith.BinInt Z lor_spec thm
prf 50795:50802 Make bits_xor
R50839:50844 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50864:50866 Coq.Init.Logic <> :type_scope:x_'='_x not
R50845:50851 AV.Integers Make testbit def
R50863:50863 AV.Integers <> i var
R50854:50856 AV.Integers Make xor def
R50860:50860 AV.Integers <> y var
R50858:50858 AV.Integers <> x var
R50867:50870 Coq.Init.Datatypes <> xorb def
R50887:50893 AV.Integers Make testbit def
R50897:50897 AV.Integers <> i var
R50895:50895 AV.Integers <> y var
R50873:50879 AV.Integers Make testbit def
R50883:50883 AV.Integers <> i var
R50881:50881 AV.Integers <> x var
R50822:50825 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50827:50829 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R50826:50826 AV.Integers <> i var
R50826:50826 AV.Integers <> i var
R50830:50838 AV.Integers Make zwordsize def
R50925:50927 AV.Integers Make xor def
R50938:50949 AV.Integers Make testbit_repr thm
R50938:50949 AV.Integers Make testbit_repr thm
R50938:50949 AV.Integers Make testbit_repr thm
R50938:50949 AV.Integers Make testbit_repr thm
R50966:50976 Coq.ZArith.BinInt Z lxor_spec thm
R50966:50976 Coq.ZArith.BinInt Z lxor_spec thm
R50966:50976 Coq.ZArith.BinInt Z lxor_spec thm
prf 51002:51009 Make bits_not
R51044:51049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51067:51069 Coq.Init.Logic <> :type_scope:x_'='_x not
R51050:51056 AV.Integers Make testbit def
R51066:51066 AV.Integers <> i var
R51059:51061 AV.Integers Make not def
R51063:51063 AV.Integers <> x var
R51070:51073 Coq.Init.Datatypes <> negb def
R51076:51082 AV.Integers Make testbit def
R51086:51086 AV.Integers <> i var
R51084:51084 AV.Integers <> x var
R51027:51030 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R51032:51034 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R51031:51031 AV.Integers <> i var
R51031:51031 AV.Integers <> i var
R51035:51043 AV.Integers Make zwordsize def
R51114:51116 AV.Integers Make not def
R51127:51134 AV.Integers Make bits_xor thm
R51127:51134 AV.Integers Make bits_xor thm
R51127:51134 AV.Integers Make bits_xor thm
R51127:51134 AV.Integers Make bits_xor thm
R51151:51159 AV.Integers Make bits_mone thm
R51151:51159 AV.Integers Make bits_mone thm
R51151:51159 AV.Integers Make bits_mone thm
R51151:51159 AV.Integers Make bits_mone thm
R51187:51194 AV.Integers Make bits_and thm
R51196:51202 AV.Integers Make bits_or thm
R51204:51211 AV.Integers Make bits_xor thm
R51213:51220 AV.Integers Make bits_not thm
prf 51238:51247 Make and_commut
R51269:51271 Coq.Init.Logic <> :type_scope:x_'='_x not
R51262:51264 AV.Integers Make and def
R51268:51268 AV.Integers <> y var
R51266:51266 AV.Integers <> x var
R51272:51274 AV.Integers Make and def
R51278:51278 AV.Integers <> x var
R51276:51276 AV.Integers <> y var
prf 51315:51323 Make and_assoc
R51355:51357 Coq.Init.Logic <> :type_scope:x_'='_x not
R51340:51342 AV.Integers Make and def
R51354:51354 AV.Integers <> z var
R51345:51347 AV.Integers Make and def
R51351:51351 AV.Integers <> y var
R51349:51349 AV.Integers <> x var
R51358:51360 AV.Integers Make and def
R51365:51367 AV.Integers Make and def
R51371:51371 AV.Integers <> z var
R51369:51369 AV.Integers <> y var
R51362:51362 AV.Integers <> x var
prf 51409:51416 Make and_zero
R51439:51441 Coq.Init.Logic <> :type_scope:x_'='_x not
R51429:51431 AV.Integers Make and def
R51435:51438 AV.Integers Make zero def
R51433:51433 AV.Integers <> x var
R51442:51445 AV.Integers Make zero def
R51474:51485 Coq.Bool.Bool <> andb_b_false syndef
R51474:51485 Coq.Bool.Bool <> andb_b_false syndef
prf 51504:51513 Make and_zero_l
R51536:51538 Coq.Init.Logic <> :type_scope:x_'='_x not
R51526:51528 AV.Integers Make and def
R51535:51535 AV.Integers <> x var
R51530:51533 AV.Integers Make zero def
R51539:51542 AV.Integers Make zero def
R51570:51579 AV.Integers Make and_commut thm
R51570:51579 AV.Integers Make and_commut thm
R51570:51579 AV.Integers Make and_commut thm
R51588:51595 AV.Integers Make and_zero thm
R51588:51595 AV.Integers Make and_zero thm
prf 51612:51619 Make and_mone
R51642:51644 Coq.Init.Logic <> :type_scope:x_'='_x not
R51632:51634 AV.Integers Make and def
R51638:51641 AV.Integers Make mone def
R51636:51636 AV.Integers <> x var
R51645:51645 AV.Integers <> x var
R51674:51684 Coq.Bool.Bool <> andb_b_true syndef
R51674:51684 Coq.Bool.Bool <> andb_b_true syndef
prf 51703:51712 Make and_mone_l
R51735:51737 Coq.Init.Logic <> :type_scope:x_'='_x not
R51725:51727 AV.Integers Make and def
R51734:51734 AV.Integers <> x var
R51729:51732 AV.Integers Make mone def
R51738:51738 AV.Integers <> x var
R51766:51775 AV.Integers Make and_commut thm
R51766:51775 AV.Integers Make and_commut thm
R51766:51775 AV.Integers Make and_commut thm
R51784:51791 AV.Integers Make and_mone thm
R51784:51791 AV.Integers Make and_mone thm
prf 51808:51815 Make and_idem
R51835:51837 Coq.Init.Logic <> :type_scope:x_'='_x not
R51828:51830 AV.Integers Make and def
R51834:51834 AV.Integers <> x var
R51832:51832 AV.Integers <> x var
R51838:51838 AV.Integers <> x var
R51871:51877 AV.Integers Make testbit def
R51871:51877 AV.Integers Make testbit def
prf 51905:51913 Make or_commut
R51934:51936 Coq.Init.Logic <> :type_scope:x_'='_x not
R51928:51929 AV.Integers Make or def
R51933:51933 AV.Integers <> y var
R51931:51931 AV.Integers <> x var
R51937:51938 AV.Integers Make or def
R51942:51942 AV.Integers <> x var
R51940:51940 AV.Integers <> y var
prf 51979:51986 Make or_assoc
R52016:52018 Coq.Init.Logic <> :type_scope:x_'='_x not
R52003:52004 AV.Integers Make or def
R52015:52015 AV.Integers <> z var
R52007:52008 AV.Integers Make or def
R52012:52012 AV.Integers <> y var
R52010:52010 AV.Integers <> x var
R52019:52020 AV.Integers Make or def
R52025:52026 AV.Integers Make or def
R52030:52030 AV.Integers <> z var
R52028:52028 AV.Integers <> y var
R52022:52022 AV.Integers <> x var
prf 52068:52074 Make or_zero
R52096:52098 Coq.Init.Logic <> :type_scope:x_'='_x not
R52087:52088 AV.Integers Make or def
R52092:52095 AV.Integers Make zero def
R52090:52090 AV.Integers <> x var
R52099:52099 AV.Integers <> x var
prf 52138:52146 Make or_zero_l
R52168:52170 Coq.Init.Logic <> :type_scope:x_'='_x not
R52159:52160 AV.Integers Make or def
R52167:52167 AV.Integers <> x var
R52162:52165 AV.Integers Make zero def
R52171:52171 AV.Integers <> x var
R52199:52207 AV.Integers Make or_commut thm
R52199:52207 AV.Integers Make or_commut thm
R52199:52207 AV.Integers Make or_commut thm
R52216:52222 AV.Integers Make or_zero thm
R52216:52222 AV.Integers Make or_zero thm
prf 52239:52245 Make or_mone
R52267:52269 Coq.Init.Logic <> :type_scope:x_'='_x not
R52258:52259 AV.Integers Make or def
R52263:52266 AV.Integers Make mone def
R52261:52261 AV.Integers <> x var
R52270:52273 AV.Integers Make mone def
prf 52310:52316 Make or_idem
R52335:52337 Coq.Init.Logic <> :type_scope:x_'='_x not
R52329:52330 AV.Integers Make or def
R52334:52334 AV.Integers <> x var
R52332:52332 AV.Integers <> x var
R52338:52338 AV.Integers <> x var
R52371:52377 AV.Integers Make testbit def
R52371:52377 AV.Integers Make testbit def
prf 52405:52418 Make and_or_distrib
R52453:52455 Coq.Init.Logic <> :type_scope:x_'='_x not
R52439:52441 AV.Integers Make and def
R52446:52447 AV.Integers Make or def
R52451:52451 AV.Integers <> z var
R52449:52449 AV.Integers <> y var
R52443:52443 AV.Integers <> x var
R52456:52457 AV.Integers Make or def
R52470:52472 AV.Integers Make and def
R52476:52476 AV.Integers <> z var
R52474:52474 AV.Integers <> x var
R52460:52462 AV.Integers Make and def
R52466:52466 AV.Integers <> y var
R52464:52464 AV.Integers <> x var
R52506:52514 Coq.Bool.Bool <> demorgan1 syndef
R52506:52514 Coq.Bool.Bool <> demorgan1 syndef
prf 52533:52548 Make and_or_distrib_l
R52583:52585 Coq.Init.Logic <> :type_scope:x_'='_x not
R52569:52571 AV.Integers Make and def
R52582:52582 AV.Integers <> z var
R52574:52575 AV.Integers Make or def
R52579:52579 AV.Integers <> y var
R52577:52577 AV.Integers <> x var
R52586:52587 AV.Integers Make or def
R52600:52602 AV.Integers Make and def
R52606:52606 AV.Integers <> z var
R52604:52604 AV.Integers <> y var
R52590:52592 AV.Integers Make and def
R52596:52596 AV.Integers <> z var
R52594:52594 AV.Integers <> x var
R52636:52645 AV.Integers Make and_commut thm
R52648:52649 AV.Integers Make or def
R52636:52645 AV.Integers Make and_commut thm
R52648:52649 AV.Integers Make or def
R52636:52645 AV.Integers Make and_commut thm
R52648:52649 AV.Integers Make or def
R52666:52679 AV.Integers Make and_or_distrib thm
R52666:52679 AV.Integers Make and_or_distrib thm
R52666:52679 AV.Integers Make and_or_distrib thm
R52697:52706 AV.Integers Make and_commut thm
R52697:52706 AV.Integers Make and_commut thm
R52697:52706 AV.Integers Make and_commut thm
prf 52723:52736 Make or_and_distrib
R52771:52773 Coq.Init.Logic <> :type_scope:x_'='_x not
R52757:52758 AV.Integers Make or def
R52763:52765 AV.Integers Make and def
R52769:52769 AV.Integers <> z var
R52767:52767 AV.Integers <> y var
R52760:52760 AV.Integers <> x var
R52774:52776 AV.Integers Make and def
R52788:52789 AV.Integers Make or def
R52793:52793 AV.Integers <> z var
R52791:52791 AV.Integers <> x var
R52779:52780 AV.Integers Make or def
R52784:52784 AV.Integers <> y var
R52782:52782 AV.Integers <> x var
R52823:52840 Coq.Bool.Bool <> orb_andb_distrib_r thm
R52823:52840 Coq.Bool.Bool <> orb_andb_distrib_r thm
prf 52859:52874 Make or_and_distrib_l
R52909:52911 Coq.Init.Logic <> :type_scope:x_'='_x not
R52895:52896 AV.Integers Make or def
R52908:52908 AV.Integers <> z var
R52899:52901 AV.Integers Make and def
R52905:52905 AV.Integers <> y var
R52903:52903 AV.Integers <> x var
R52912:52914 AV.Integers Make and def
R52926:52927 AV.Integers Make or def
R52931:52931 AV.Integers <> z var
R52929:52929 AV.Integers <> y var
R52917:52918 AV.Integers Make or def
R52922:52922 AV.Integers <> z var
R52920:52920 AV.Integers <> x var
R52961:52969 AV.Integers Make or_commut thm
R52972:52974 AV.Integers Make and def
R52961:52969 AV.Integers Make or_commut thm
R52972:52974 AV.Integers Make and def
R52961:52969 AV.Integers Make or_commut thm
R52972:52974 AV.Integers Make and def
R52991:53004 AV.Integers Make or_and_distrib thm
R52991:53004 AV.Integers Make or_and_distrib thm
R52991:53004 AV.Integers Make or_and_distrib thm
R53022:53030 AV.Integers Make or_commut thm
R53022:53030 AV.Integers Make or_commut thm
R53022:53030 AV.Integers Make or_commut thm
prf 53047:53059 Make and_or_absorb
R53088:53090 Coq.Init.Logic <> :type_scope:x_'='_x not
R53074:53076 AV.Integers Make and def
R53081:53082 AV.Integers Make or def
R53086:53086 AV.Integers <> y var
R53084:53084 AV.Integers <> x var
R53078:53078 AV.Integers <> x var
R53091:53091 AV.Integers <> x var
R53149:53151 Coq.Init.Logic <> :type_scope:x_'='_x not
R53137:53141 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53148:53148 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53136:53136 AV.Integers <> a var
R53143:53146 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53142:53142 AV.Integers <> a var
R53147:53147 AV.Integers <> b var
R53152:53152 AV.Integers <> a var
R53149:53151 Coq.Init.Logic <> :type_scope:x_'='_x not
R53137:53141 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53148:53148 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53136:53136 AV.Integers <> a var
R53143:53146 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53142:53142 AV.Integers <> a var
R53147:53147 AV.Integers <> b var
R53152:53152 AV.Integers <> a var
prf 53192:53204 Make or_and_absorb
R53233:53235 Coq.Init.Logic <> :type_scope:x_'='_x not
R53219:53220 AV.Integers Make or def
R53225:53227 AV.Integers Make and def
R53231:53231 AV.Integers <> y var
R53229:53229 AV.Integers <> x var
R53222:53222 AV.Integers <> x var
R53236:53236 AV.Integers <> x var
R53294:53296 Coq.Init.Logic <> :type_scope:x_'='_x not
R53282:53286 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53293:53293 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53281:53281 AV.Integers <> a var
R53288:53291 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53287:53287 AV.Integers <> a var
R53292:53292 AV.Integers <> b var
R53297:53297 AV.Integers <> a var
R53294:53296 Coq.Init.Logic <> :type_scope:x_'='_x not
R53282:53286 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53293:53293 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53281:53281 AV.Integers <> a var
R53288:53291 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53287:53287 AV.Integers <> a var
R53292:53292 AV.Integers <> b var
R53297:53297 AV.Integers <> a var
prf 53337:53346 Make xor_commut
R53368:53370 Coq.Init.Logic <> :type_scope:x_'='_x not
R53361:53363 AV.Integers Make xor def
R53367:53367 AV.Integers <> y var
R53365:53365 AV.Integers <> x var
R53371:53373 AV.Integers Make xor def
R53377:53377 AV.Integers <> x var
R53375:53375 AV.Integers <> y var
R53406:53414 Coq.Bool.Bool <> xorb_comm thm
R53406:53414 Coq.Bool.Bool <> xorb_comm thm
prf 53431:53439 Make xor_assoc
R53471:53473 Coq.Init.Logic <> :type_scope:x_'='_x not
R53456:53458 AV.Integers Make xor def
R53470:53470 AV.Integers <> z var
R53461:53463 AV.Integers Make xor def
R53467:53467 AV.Integers <> y var
R53465:53465 AV.Integers <> x var
R53474:53476 AV.Integers Make xor def
R53481:53483 AV.Integers Make xor def
R53487:53487 AV.Integers <> z var
R53485:53485 AV.Integers <> y var
R53478:53478 AV.Integers <> x var
R53517:53526 Coq.Bool.Bool <> xorb_assoc syndef
R53517:53526 Coq.Bool.Bool <> xorb_assoc syndef
prf 53543:53550 Make xor_zero
R53573:53575 Coq.Init.Logic <> :type_scope:x_'='_x not
R53563:53565 AV.Integers Make xor def
R53569:53572 AV.Integers Make zero def
R53567:53567 AV.Integers <> x var
R53576:53576 AV.Integers <> x var
R53605:53614 Coq.Bool.Bool <> xorb_false syndef
R53605:53614 Coq.Bool.Bool <> xorb_false syndef
prf 53633:53642 Make xor_zero_l
R53665:53667 Coq.Init.Logic <> :type_scope:x_'='_x not
R53655:53657 AV.Integers Make xor def
R53664:53664 AV.Integers <> x var
R53659:53662 AV.Integers Make zero def
R53668:53668 AV.Integers <> x var
R53696:53705 AV.Integers Make xor_commut thm
R53696:53705 AV.Integers Make xor_commut thm
R53696:53705 AV.Integers Make xor_commut thm
R53714:53721 AV.Integers Make xor_zero thm
R53714:53721 AV.Integers Make xor_zero thm
prf 53738:53745 Make xor_idem
R53765:53767 Coq.Init.Logic <> :type_scope:x_'='_x not
R53758:53760 AV.Integers Make xor def
R53764:53764 AV.Integers <> x var
R53762:53762 AV.Integers <> x var
R53768:53771 AV.Integers Make zero def
R53800:53813 Coq.Bool.Bool <> xorb_nilpotent thm
R53800:53813 Coq.Bool.Bool <> xorb_nilpotent thm
prf 53830:53841 Make xor_zero_one
R53856:53858 Coq.Init.Logic <> :type_scope:x_'='_x not
R53844:53846 AV.Integers Make xor def
R53853:53855 AV.Integers Make one def
R53848:53851 AV.Integers Make zero def
R53859:53861 AV.Integers Make one def
R53879:53888 AV.Integers Make xor_commut thm
R53879:53888 AV.Integers Make xor_commut thm
R53879:53888 AV.Integers Make xor_commut thm
R53897:53904 AV.Integers Make xor_zero thm
R53897:53904 AV.Integers Make xor_zero thm
prf 53921:53931 Make xor_one_one
R53945:53947 Coq.Init.Logic <> :type_scope:x_'='_x not
R53934:53936 AV.Integers Make xor def
R53942:53944 AV.Integers Make one def
R53938:53940 AV.Integers Make one def
R53948:53951 AV.Integers Make zero def
R53967:53974 AV.Integers Make xor_idem thm
R53967:53974 AV.Integers Make xor_idem thm
prf 53991:54004 Make xor_zero_equal
R54033:54036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54038:54040 Coq.Init.Logic <> :type_scope:x_'='_x not
R54037:54037 AV.Integers <> x var
R54041:54041 AV.Integers <> y var
R54026:54028 Coq.Init.Logic <> :type_scope:x_'='_x not
R54019:54021 AV.Integers Make xor def
R54025:54025 AV.Integers <> y var
R54023:54023 AV.Integers <> x var
R54029:54032 AV.Integers Make zero def
R54067:54078 AV.Integers Make same_bits_eq thm
R54067:54078 AV.Integers Make same_bits_eq thm
R54131:54133 Coq.Init.Logic <> :type_scope:x_'='_x not
R54099:54102 Coq.Init.Datatypes <> xorb def
R54119:54125 AV.Integers Make testbit def
R54105:54111 AV.Integers Make testbit def
R54134:54138 Coq.Init.Datatypes <> false constr
R54131:54133 Coq.Init.Logic <> :type_scope:x_'='_x not
R54099:54102 Coq.Init.Datatypes <> xorb def
R54119:54125 AV.Integers Make testbit def
R54105:54111 AV.Integers Make testbit def
R54134:54138 Coq.Init.Datatypes <> false constr
R54157:54164 AV.Integers Make bits_xor thm
R54157:54164 AV.Integers Make bits_xor thm
R54157:54164 AV.Integers Make bits_xor thm
R54157:54164 AV.Integers Make bits_xor thm
R54190:54198 AV.Integers Make bits_zero thm
R54190:54198 AV.Integers Make bits_zero thm
R54213:54219 AV.Integers Make testbit def
R54237:54243 AV.Integers Make testbit def
R54213:54219 AV.Integers Make testbit def
R54237:54243 AV.Integers Make testbit def
R54237:54243 AV.Integers Make testbit def
prf 54294:54304 Make xor_is_zero
R54336:54338 Coq.Init.Logic <> :type_scope:x_'='_x not
R54319:54320 AV.Integers Make eq def
R54332:54335 AV.Integers Make zero def
R54323:54325 AV.Integers Make xor def
R54329:54329 AV.Integers <> y var
R54327:54327 AV.Integers <> x var
R54339:54340 AV.Integers Make eq def
R54344:54344 AV.Integers <> y var
R54342:54342 AV.Integers <> x var
R54385:54387 AV.Integers Make xor def
R54373:54374 AV.Integers Make eq def
R54376:54382 AV.Integers Make eq_spec thm
R54385:54387 AV.Integers Make xor def
R54394:54397 AV.Integers Make zero def
R54408:54421 AV.Integers Make xor_zero_equal thm
R54408:54421 AV.Integers Make xor_zero_equal thm
R54446:54452 AV.Integers Make eq_true thm
R54446:54452 AV.Integers Make eq_true thm
R54446:54452 AV.Integers Make eq_true thm
R54473:54474 AV.Integers Make eq def
R54476:54482 AV.Integers Make eq_spec thm
R54514:54521 AV.Integers Make xor_idem thm
R54514:54521 AV.Integers Make xor_idem thm
prf 54548:54562 Make and_xor_distrib
R54598:54600 Coq.Init.Logic <> :type_scope:x_'='_x not
R54583:54585 AV.Integers Make and def
R54590:54592 AV.Integers Make xor def
R54596:54596 AV.Integers <> z var
R54594:54594 AV.Integers <> y var
R54587:54587 AV.Integers <> x var
R54601:54603 AV.Integers Make xor def
R54616:54618 AV.Integers Make and def
R54622:54622 AV.Integers <> z var
R54620:54620 AV.Integers <> x var
R54606:54608 AV.Integers Make and def
R54612:54612 AV.Integers <> y var
R54610:54610 AV.Integers <> x var
R54685:54687 Coq.Init.Logic <> :type_scope:x_'='_x not
R54671:54675 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54684:54684 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54670:54670 AV.Integers <> a var
R54676:54679 Coq.Init.Datatypes <> xorb def
R54683:54683 AV.Integers <> c var
R54681:54681 AV.Integers <> b var
R54688:54691 Coq.Init.Datatypes <> xorb def
R54704:54707 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54703:54703 AV.Integers <> a var
R54708:54708 AV.Integers <> c var
R54695:54698 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54694:54694 AV.Integers <> a var
R54699:54699 AV.Integers <> b var
R54685:54687 Coq.Init.Logic <> :type_scope:x_'='_x not
R54671:54675 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54684:54684 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54670:54670 AV.Integers <> a var
R54676:54679 Coq.Init.Datatypes <> xorb def
R54683:54683 AV.Integers <> c var
R54681:54681 AV.Integers <> b var
R54688:54691 Coq.Init.Datatypes <> xorb def
R54704:54707 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54703:54703 AV.Integers <> a var
R54708:54708 AV.Integers <> c var
R54695:54698 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54694:54694 AV.Integers <> a var
R54699:54699 AV.Integers <> b var
prf 54749:54754 Make and_le
R54789:54792 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R54771:54778 AV.Integers Make unsigned def
R54781:54783 AV.Integers Make and def
R54787:54787 AV.Integers <> y var
R54785:54785 AV.Integers <> x var
R54793:54800 AV.Integers Make unsigned def
R54802:54802 AV.Integers <> x var
R54828:54834 AV.Integers Make bits_le thm
R54828:54834 AV.Integers Make bits_le thm
R54855:54862 AV.Integers Make bits_and thm
R54855:54862 AV.Integers Make bits_and thm
R54855:54862 AV.Integers Make bits_and thm
R54855:54862 AV.Integers Make bits_and thm
R54885:54897 Coq.Bool.Bool <> andb_true_iff thm
R54885:54897 Coq.Bool.Bool <> andb_true_iff thm
R54885:54897 Coq.Bool.Bool <> andb_true_iff thm
prf 54927:54931 Make or_le
R54958:54961 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R54948:54955 AV.Integers Make unsigned def
R54957:54957 AV.Integers <> x var
R54962:54969 AV.Integers Make unsigned def
R54972:54973 AV.Integers Make or def
R54977:54977 AV.Integers <> y var
R54975:54975 AV.Integers <> x var
R55004:55010 AV.Integers Make bits_le thm
R55004:55010 AV.Integers Make bits_le thm
R55031:55037 AV.Integers Make bits_or thm
R55031:55037 AV.Integers Make bits_or thm
R55031:55037 AV.Integers Make bits_or thm
R55031:55037 AV.Integers Make bits_or thm
prf 55119:55132 Make not_involutive
R55148:55150 AV.Integers Make int rec
R55165:55167 Coq.Init.Logic <> :type_scope:x_'='_x not
R55154:55156 AV.Integers Make not def
R55159:55161 AV.Integers Make not def
R55163:55163 AV.Integers <> x var
R55168:55168 AV.Integers <> x var
R55195:55197 AV.Integers Make not def
R55208:55216 AV.Integers Make xor_assoc thm
R55208:55216 AV.Integers Make xor_assoc thm
R55208:55216 AV.Integers Make xor_assoc thm
R55227:55234 AV.Integers Make xor_idem thm
R55227:55234 AV.Integers Make xor_idem thm
R55227:55234 AV.Integers Make xor_idem thm
R55243:55250 AV.Integers Make xor_zero thm
R55243:55250 AV.Integers Make xor_zero thm
prf 55267:55274 Make not_zero
R55287:55289 Coq.Init.Logic <> :type_scope:x_'='_x not
R55279:55281 AV.Integers Make not def
R55283:55286 AV.Integers Make zero def
R55290:55293 AV.Integers Make mone def
R55312:55314 AV.Integers Make not def
R55325:55334 AV.Integers Make xor_commut thm
R55325:55334 AV.Integers Make xor_commut thm
R55325:55334 AV.Integers Make xor_commut thm
R55343:55350 AV.Integers Make xor_zero thm
R55343:55350 AV.Integers Make xor_zero thm
prf 55367:55374 Make not_mone
R55387:55389 Coq.Init.Logic <> :type_scope:x_'='_x not
R55379:55381 AV.Integers Make not def
R55383:55386 AV.Integers Make mone def
R55390:55393 AV.Integers Make zero def
R55417:55430 AV.Integers Make not_involutive thm
R55432:55435 AV.Integers Make zero def
R55417:55430 AV.Integers Make not_involutive thm
R55432:55435 AV.Integers Make zero def
R55417:55430 AV.Integers Make not_involutive thm
R55432:55435 AV.Integers Make zero def
R55462:55469 AV.Integers Make not_zero thm
R55462:55469 AV.Integers Make not_zero thm
prf 55486:55499 Make not_or_and_not
R55528:55530 Coq.Init.Logic <> :type_scope:x_'='_x not
R55516:55518 AV.Integers Make not def
R55521:55522 AV.Integers Make or def
R55526:55526 AV.Integers <> y var
R55524:55524 AV.Integers <> x var
R55531:55533 AV.Integers Make and def
R55544:55546 AV.Integers Make not def
R55548:55548 AV.Integers <> y var
R55536:55538 AV.Integers Make not def
R55540:55540 AV.Integers <> x var
R55578:55585 Coq.Bool.Bool <> negb_orb thm
R55578:55585 Coq.Bool.Bool <> negb_orb thm
prf 55602:55615 Make not_and_or_not
R55645:55647 Coq.Init.Logic <> :type_scope:x_'='_x not
R55632:55634 AV.Integers Make not def
R55637:55639 AV.Integers Make and def
R55643:55643 AV.Integers <> y var
R55641:55641 AV.Integers <> x var
R55648:55649 AV.Integers Make or def
R55660:55662 AV.Integers Make not def
R55664:55664 AV.Integers <> y var
R55652:55654 AV.Integers Make not def
R55656:55656 AV.Integers <> x var
R55694:55702 Coq.Bool.Bool <> negb_andb thm
R55694:55702 Coq.Bool.Bool <> negb_andb thm
prf 55719:55730 Make and_not_self
R55758:55760 Coq.Init.Logic <> :type_scope:x_'='_x not
R55745:55747 AV.Integers Make and def
R55752:55754 AV.Integers Make not def
R55756:55756 AV.Integers <> x var
R55749:55749 AV.Integers <> x var
R55761:55764 AV.Integers Make zero def
prf 55801:55811 Make or_not_self
R55838:55840 Coq.Init.Logic <> :type_scope:x_'='_x not
R55826:55827 AV.Integers Make or def
R55832:55834 AV.Integers Make not def
R55836:55836 AV.Integers <> x var
R55829:55829 AV.Integers <> x var
R55841:55844 AV.Integers Make mone def
prf 55881:55892 Make xor_not_self
R55920:55922 Coq.Init.Logic <> :type_scope:x_'='_x not
R55907:55909 AV.Integers Make xor def
R55914:55916 AV.Integers Make not def
R55918:55918 AV.Integers <> x var
R55911:55911 AV.Integers <> x var
R55923:55926 AV.Integers Make mone def
R55959:55965 AV.Integers Make testbit def
R55959:55965 AV.Integers Make testbit def
prf 55991:56002 Make unsigned_not
R56033:56035 Coq.Init.Logic <> :type_scope:x_'='_x not
R56017:56024 AV.Integers Make unsigned def
R56027:56029 AV.Integers Make not def
R56031:56031 AV.Integers <> x var
R56048:56050 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56036:56047 AV.Integers Make max_unsigned def
R56051:56058 AV.Integers Make unsigned def
R56060:56060 AV.Integers <> x var
R56094:56101 AV.Integers Make unsigned def
R56104:56107 AV.Integers Make repr def
R56120:56122 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56109:56109 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56110:56117 AV.Integers Make unsigned def
R56094:56101 AV.Integers Make unsigned def
R56104:56107 AV.Integers Make repr def
R56120:56122 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56109:56109 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56110:56117 AV.Integers Make unsigned def
R56159:56170 AV.Integers Make testbit_repr thm
R56159:56170 AV.Integers Make testbit_repr thm
R56159:56170 AV.Integers Make testbit_repr thm
R56159:56170 AV.Integers Make testbit_repr thm
R56195:56210 AV.Integers Make Z_one_complement thm
R56195:56210 AV.Integers Make Z_one_complement thm
R56230:56245 AV.Integers Make unsigned_repr_eq thm
R56230:56245 AV.Integers Make unsigned_repr_eq thm
R56230:56245 AV.Integers Make unsigned_repr_eq thm
R56254:56264 AV.Coqlib <> Zmod_unique thm
R56254:56264 AV.Coqlib <> Zmod_unique thm
R56286:56297 AV.Integers Make max_unsigned def
R56321:56334 AV.Integers Make unsigned_range thm
R56321:56334 AV.Integers Make unsigned_range thm
R56347:56358 AV.Integers Make max_unsigned def
prf 56382:56388 Make not_neg
R56408:56410 Coq.Init.Logic <> :type_scope:x_'='_x not
R56403:56405 AV.Integers Make not def
R56407:56407 AV.Integers <> x var
R56411:56413 AV.Integers Make add def
R56423:56426 AV.Integers Make mone def
R56416:56418 AV.Integers Make neg def
R56420:56420 AV.Integers <> x var
R56463:56475 AV.Integers Make repr_unsigned thm
R56463:56475 AV.Integers Make repr_unsigned thm
R56463:56475 AV.Integers Make repr_unsigned thm
R56493:56495 AV.Integers Make add def
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56509:56520 AV.Integers Make testbit_repr thm
R56545:56553 Coq.ZArith.BinInt Z testbit def
R56567:56569 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56556:56556 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56557:56564 AV.Integers Make unsigned def
R56545:56553 Coq.ZArith.BinInt Z testbit def
R56567:56569 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56556:56556 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56557:56564 AV.Integers Make unsigned def
R56595:56610 AV.Integers Make Z_one_complement thm
R56595:56610 AV.Integers Make Z_one_complement thm
R56628:56640 AV.Integers Make same_bits_eqm thm
R56628:56640 AV.Integers Make same_bits_eqm thm
R56671:56673 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56660:56660 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56661:56668 AV.Integers Make unsigned def
R56694:56697 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56700:56700 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56683:56683 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56684:56691 AV.Integers Make unsigned def
R56671:56673 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56660:56660 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56661:56668 AV.Integers Make unsigned def
R56694:56697 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56700:56700 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56683:56683 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56684:56691 AV.Integers Make unsigned def
R56721:56727 AV.Integers Make eqm_add thm
R56721:56727 AV.Integers Make eqm_add thm
R56739:56741 AV.Integers Make neg def
R56750:56766 AV.Integers Make eqm_unsigned_repr thm
R56750:56766 AV.Integers Make eqm_unsigned_repr thm
R56779:56791 AV.Integers Make unsigned_mone thm
R56779:56791 AV.Integers Make unsigned_mone thm
R56779:56791 AV.Integers Make unsigned_mone thm
prf 56827:56833 Make neg_not
R56853:56855 Coq.Init.Logic <> :type_scope:x_'='_x not
R56848:56850 AV.Integers Make neg def
R56852:56852 AV.Integers <> x var
R56856:56858 AV.Integers Make add def
R56868:56870 AV.Integers Make one def
R56861:56863 AV.Integers Make not def
R56865:56865 AV.Integers <> x var
R56898:56904 AV.Integers Make not_neg thm
R56898:56904 AV.Integers Make not_neg thm
R56898:56904 AV.Integers Make not_neg thm
R56915:56923 AV.Integers Make add_assoc thm
R56915:56923 AV.Integers Make add_assoc thm
R56915:56923 AV.Integers Make add_assoc thm
R56937:56939 AV.Integers Make add def
R56946:56948 AV.Integers Make one def
R56941:56944 AV.Integers Make mone def
R56956:56959 AV.Integers Make zero def
R56937:56939 AV.Integers Make add def
R56946:56948 AV.Integers Make one def
R56941:56944 AV.Integers Make mone def
R56956:56959 AV.Integers Make zero def
R56970:56977 AV.Integers Make add_zero thm
R56970:56977 AV.Integers Make add_zero thm
R56970:56977 AV.Integers Make add_zero thm
R56994:57005 AV.Integers Make eqm_samerepr thm
R56994:57005 AV.Integers Make eqm_samerepr thm
R57016:57028 AV.Integers Make unsigned_mone thm
R57016:57028 AV.Integers Make unsigned_mone thm
R57016:57028 AV.Integers Make unsigned_mone thm
R57039:57050 AV.Integers Make unsigned_one thm
R57039:57050 AV.Integers Make unsigned_one thm
R57039:57050 AV.Integers Make unsigned_one thm
prf 57088:57098 Make sub_add_not
R57122:57124 Coq.Init.Logic <> :type_scope:x_'='_x not
R57115:57117 AV.Integers Make sub def
R57121:57121 AV.Integers <> y var
R57119:57119 AV.Integers <> x var
R57125:57127 AV.Integers Make add def
R57145:57147 AV.Integers Make one def
R57130:57132 AV.Integers Make add def
R57137:57139 AV.Integers Make not def
R57141:57141 AV.Integers <> y var
R57134:57134 AV.Integers <> x var
R57175:57185 AV.Integers Make sub_add_opp thm
R57175:57185 AV.Integers Make sub_add_opp thm
R57175:57185 AV.Integers Make sub_add_opp thm
R57196:57202 AV.Integers Make neg_not thm
R57196:57202 AV.Integers Make neg_not thm
R57196:57202 AV.Integers Make neg_not thm
R57217:57225 AV.Integers Make add_assoc thm
R57217:57225 AV.Integers Make add_assoc thm
R57217:57225 AV.Integers Make add_assoc thm
R57217:57225 AV.Integers Make add_assoc thm
prf 57248:57260 Make sub_add_not_3
R57300:57305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57321:57323 Coq.Init.Logic <> :type_scope:x_'='_x not
R57306:57308 AV.Integers Make sub def
R57320:57320 AV.Integers <> b var
R57311:57313 AV.Integers Make sub def
R57317:57317 AV.Integers <> y var
R57315:57315 AV.Integers <> x var
R57324:57326 AV.Integers Make add def
R57345:57347 AV.Integers Make xor def
R57351:57353 AV.Integers Make one def
R57349:57349 AV.Integers <> b var
R57329:57331 AV.Integers Make add def
R57336:57338 AV.Integers Make not def
R57340:57340 AV.Integers <> y var
R57333:57333 AV.Integers <> x var
R57289:57292 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57282:57284 Coq.Init.Logic <> :type_scope:x_'='_x not
R57281:57281 AV.Integers <> b var
R57285:57288 AV.Integers Make zero def
R57294:57296 Coq.Init.Logic <> :type_scope:x_'='_x not
R57293:57293 AV.Integers <> b var
R57297:57299 AV.Integers Make one def
R57384:57394 AV.Integers Make sub_add_not thm
R57384:57394 AV.Integers Make sub_add_not thm
R57384:57394 AV.Integers Make sub_add_not thm
R57384:57394 AV.Integers Make sub_add_not thm
R57384:57394 AV.Integers Make sub_add_not thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57407:57415 AV.Integers Make add_assoc thm
R57449:57455 AV.Integers Make neg_not thm
R57449:57455 AV.Integers Make neg_not thm
R57449:57455 AV.Integers Make neg_not thm
R57469:57479 AV.Integers Make sub_add_opp thm
R57469:57479 AV.Integers Make sub_add_opp thm
R57469:57479 AV.Integers Make sub_add_opp thm
R57513:57522 AV.Integers Make xor_zero_l thm
R57513:57522 AV.Integers Make xor_zero_l thm
R57513:57522 AV.Integers Make xor_zero_l thm
R57533:57542 AV.Integers Make sub_zero_l thm
R57533:57542 AV.Integers Make sub_zero_l thm
R57533:57542 AV.Integers Make sub_zero_l thm
R57561:57568 AV.Integers Make xor_idem thm
R57561:57568 AV.Integers Make xor_idem thm
R57561:57568 AV.Integers Make xor_idem thm
R57579:57586 AV.Integers Make sub_idem thm
R57579:57586 AV.Integers Make sub_idem thm
R57579:57586 AV.Integers Make sub_idem thm
prf 57609:57628 Make sub_borrow_add_carry
R57668:57673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57690:57692 Coq.Init.Logic <> :type_scope:x_'='_x not
R57674:57683 AV.Integers Make sub_borrow def
R57689:57689 AV.Integers <> b var
R57687:57687 AV.Integers <> y var
R57685:57685 AV.Integers <> x var
R57693:57695 AV.Integers Make xor def
R57731:57733 AV.Integers Make one def
R57698:57706 AV.Integers Make add_carry def
R57719:57721 AV.Integers Make xor def
R57725:57727 AV.Integers Make one def
R57723:57723 AV.Integers <> b var
R57711:57713 AV.Integers Make not def
R57715:57715 AV.Integers <> y var
R57708:57708 AV.Integers <> x var
R57657:57660 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57650:57652 Coq.Init.Logic <> :type_scope:x_'='_x not
R57649:57649 AV.Integers <> b var
R57653:57656 AV.Integers Make zero def
R57662:57664 Coq.Init.Logic <> :type_scope:x_'='_x not
R57661:57661 AV.Integers <> b var
R57665:57667 AV.Integers Make one def
R57760:57769 AV.Integers Make sub_borrow def
R57772:57780 AV.Integers Make add_carry def
R57791:57802 AV.Integers Make unsigned_not thm
R57791:57802 AV.Integers Make unsigned_not thm
R57791:57802 AV.Integers Make unsigned_not thm
R57816:57823 AV.Integers Make unsigned def
R57826:57828 AV.Integers Make xor def
R57832:57834 AV.Integers Make one def
R57845:57847 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57848:57855 AV.Integers Make unsigned def
R57816:57823 AV.Integers Make unsigned def
R57826:57828 AV.Integers Make xor def
R57832:57834 AV.Integers Make one def
R57845:57847 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57848:57855 AV.Integers Make unsigned def
R57873:57875 AV.Coqlib <> zlt def
R57901:57903 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57888:57890 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57878:57885 AV.Integers Make unsigned def
R57891:57898 AV.Integers Make unsigned def
R57904:57911 AV.Integers Make unsigned def
R57873:57875 AV.Coqlib <> zlt def
R57901:57903 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57888:57890 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57878:57885 AV.Integers Make unsigned def
R57891:57898 AV.Integers Make unsigned def
R57904:57911 AV.Integers Make unsigned def
R57928:57935 AV.Coqlib <> zlt_true thm
R57928:57935 AV.Coqlib <> zlt_true thm
R57928:57935 AV.Coqlib <> zlt_true thm
R57928:57935 AV.Coqlib <> zlt_true thm
R57946:57955 AV.Integers Make xor_zero_l thm
R57946:57955 AV.Integers Make xor_zero_l thm
R57946:57955 AV.Integers Make xor_zero_l thm
R57973:57984 AV.Integers Make max_unsigned def
R58004:58012 AV.Coqlib <> zlt_false thm
R58004:58012 AV.Coqlib <> zlt_false thm
R58004:58012 AV.Coqlib <> zlt_false thm
R58004:58012 AV.Coqlib <> zlt_false thm
R58023:58030 AV.Integers Make xor_idem thm
R58023:58030 AV.Integers Make xor_idem thm
R58023:58030 AV.Integers Make xor_idem thm
R58048:58059 AV.Integers Make max_unsigned def
R58102:58111 AV.Integers Make xor_zero_l thm
R58102:58111 AV.Integers Make xor_zero_l thm
R58102:58111 AV.Integers Make xor_zero_l thm
R58122:58133 AV.Integers Make unsigned_one thm
R58136:58148 AV.Integers Make unsigned_zero thm
R58122:58133 AV.Integers Make unsigned_one thm
R58122:58133 AV.Integers Make unsigned_one thm
R58136:58148 AV.Integers Make unsigned_zero thm
R58136:58148 AV.Integers Make unsigned_zero thm
R58167:58174 AV.Integers Make xor_idem thm
R58167:58174 AV.Integers Make xor_idem thm
R58167:58174 AV.Integers Make xor_idem thm
R58185:58196 AV.Integers Make unsigned_one thm
R58199:58211 AV.Integers Make unsigned_zero thm
R58185:58196 AV.Integers Make unsigned_one thm
R58185:58196 AV.Integers Make unsigned_one thm
R58199:58211 AV.Integers Make unsigned_zero thm
R58199:58211 AV.Integers Make unsigned_zero thm
prf 58298:58308 Make Z_add_is_or
R58329:58334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58349:58349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58413:58419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58439:58441 Coq.Init.Logic <> :type_scope:x_'='_x not
R58420:58428 Coq.ZArith.BinInt Z testbit def
R58438:58438 AV.Integers <> i var
R58432:58434 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58431:58431 AV.Integers <> x var
R58435:58435 AV.Integers <> y var
R58455:58458 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R58442:58450 Coq.ZArith.BinInt Z testbit def
R58454:58454 AV.Integers <> i var
R58452:58452 AV.Integers <> x var
R58459:58467 Coq.ZArith.BinInt Z testbit def
R58471:58471 AV.Integers <> i var
R58469:58469 AV.Integers <> y var
R58371:58374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58405:58407 Coq.Init.Logic <> :type_scope:x_'='_x not
R58388:58391 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R58375:58383 Coq.ZArith.BinInt Z testbit def
R58387:58387 AV.Integers <> j var
R58385:58385 AV.Integers <> x var
R58392:58400 Coq.ZArith.BinInt Z testbit def
R58404:58404 AV.Integers <> j var
R58402:58402 AV.Integers <> y var
R58408:58412 Coq.Init.Datatypes <> false constr
R58361:58364 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R58366:58369 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R58365:58365 AV.Integers <> j var
R58365:58365 AV.Integers <> j var
R58370:58370 AV.Integers <> i var
R58324:58327 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R58328:58328 AV.Integers <> i var
R58517:58525 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R58517:58525 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R58574:58580 AV.Integers Make Zdecomp thm
R58574:58580 AV.Integers Make Zdecomp thm
R58574:58580 AV.Integers Make Zdecomp thm
R58600:58606 AV.Integers Make Zdecomp thm
R58600:58606 AV.Integers Make Zdecomp thm
R58600:58606 AV.Integers Make Zdecomp thm
R58633:58641 Coq.ZArith.BinInt Z testbit def
R58644:58651 AV.Integers Make Zshiftin def
R58683:58685 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58675:58680 Coq.ZArith.BinInt Z div2 def
R58686:58691 Coq.ZArith.BinInt Z div2 def
R58661:58664 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R58654:58658 Coq.ZArith.BinInt Z odd def
R58665:58669 Coq.ZArith.BinInt Z odd def
R58633:58641 Coq.ZArith.BinInt Z testbit def
R58644:58651 AV.Integers Make Zshiftin def
R58683:58685 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58675:58680 Coq.ZArith.BinInt Z div2 def
R58686:58691 Coq.ZArith.BinInt Z div2 def
R58661:58664 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R58654:58658 Coq.ZArith.BinInt Z odd def
R58665:58669 Coq.ZArith.BinInt Z odd def
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58723:58735 AV.Integers Make Zshiftin_spec thm
R58776:58796 AV.Integers Make Ztestbit_shiftin_base thm
R58776:58796 AV.Integers Make Ztestbit_shiftin_base thm
R58776:58796 AV.Integers Make Ztestbit_shiftin_base thm
R58776:58796 AV.Integers Make Ztestbit_shiftin_base thm
R58776:58796 AV.Integers Make Ztestbit_shiftin_base thm
R58814:58818 Coq.ZArith.BinInt Z mul def
R58835:58839 Coq.ZArith.BinInt Z odd def
R58855:58859 Coq.ZArith.BinInt Z odd def
R58835:58839 Coq.ZArith.BinInt Z odd def
R58855:58859 Coq.ZArith.BinInt Z odd def
R58855:58859 Coq.ZArith.BinInt Z odd def
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58912:58927 AV.Integers Make Ztestbit_shiftin thm
R58950:58952 AV.Coqlib <> zeq def
R58950:58952 AV.Coqlib <> zeq def
R59025:59030 Coq.ZArith.BinInt Z succ def
R59025:59030 Coq.ZArith.BinInt Z succ def
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R59059:59079 AV.Integers Make Ztestbit_shiftin_succ thm
R58814:58818 Coq.ZArith.BinInt Z mul def
prf 59122:59130 Make add_is_or
R59163:59168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59176:59178 Coq.Init.Logic <> :type_scope:x_'='_x not
R59169:59171 AV.Integers Make add def
R59175:59175 AV.Integers <> y var
R59173:59173 AV.Integers <> x var
R59179:59180 AV.Integers Make or def
R59184:59184 AV.Integers <> y var
R59182:59182 AV.Integers <> x var
R59156:59158 Coq.Init.Logic <> :type_scope:x_'='_x not
R59149:59151 AV.Integers Make and def
R59155:59155 AV.Integers <> y var
R59153:59153 AV.Integers <> x var
R59159:59162 AV.Integers Make zero def
R59214:59216 AV.Integers Make add def
R59227:59238 AV.Integers Make testbit_repr thm
R59227:59238 AV.Integers Make testbit_repr thm
R59227:59238 AV.Integers Make testbit_repr thm
R59227:59238 AV.Integers Make testbit_repr thm
R59255:59265 AV.Integers Make Z_add_is_or thm
R59255:59265 AV.Integers Make Z_add_is_or thm
R59314:59316 Coq.Init.Logic <> :type_scope:x_'='_x not
R59295:59301 AV.Integers Make testbit def
R59304:59306 AV.Integers Make and def
R59317:59323 AV.Integers Make testbit def
R59325:59328 AV.Integers Make zero def
R59314:59316 Coq.Init.Logic <> :type_scope:x_'='_x not
R59295:59301 AV.Integers Make testbit def
R59304:59306 AV.Integers Make and def
R59317:59323 AV.Integers Make testbit def
R59325:59328 AV.Integers Make zero def
prf 59412:59420 Make xor_is_or
R59451:59454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59462:59464 Coq.Init.Logic <> :type_scope:x_'='_x not
R59455:59457 AV.Integers Make xor def
R59461:59461 AV.Integers <> y var
R59459:59459 AV.Integers <> x var
R59465:59466 AV.Integers Make or def
R59470:59470 AV.Integers <> y var
R59468:59468 AV.Integers <> x var
R59444:59446 Coq.Init.Logic <> :type_scope:x_'='_x not
R59437:59439 AV.Integers Make and def
R59443:59443 AV.Integers <> y var
R59441:59441 AV.Integers <> x var
R59447:59450 AV.Integers Make zero def
R59522:59524 Coq.Init.Logic <> :type_scope:x_'='_x not
R59503:59509 AV.Integers Make testbit def
R59512:59514 AV.Integers Make and def
R59525:59531 AV.Integers Make testbit def
R59533:59536 AV.Integers Make zero def
R59522:59524 Coq.Init.Logic <> :type_scope:x_'='_x not
R59503:59509 AV.Integers Make testbit def
R59512:59514 AV.Integers Make and def
R59525:59531 AV.Integers Make testbit def
R59533:59536 AV.Integers Make zero def
R59605:59611 AV.Integers Make testbit def
R59629:59635 AV.Integers Make testbit def
R59605:59611 AV.Integers Make testbit def
R59629:59635 AV.Integers Make testbit def
R59629:59635 AV.Integers Make testbit def
prf 59681:59690 Make add_is_xor
R59723:59728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59736:59738 Coq.Init.Logic <> :type_scope:x_'='_x not
R59729:59731 AV.Integers Make add def
R59735:59735 AV.Integers <> y var
R59733:59733 AV.Integers <> x var
R59739:59741 AV.Integers Make xor def
R59745:59745 AV.Integers <> y var
R59743:59743 AV.Integers <> x var
R59716:59718 Coq.Init.Logic <> :type_scope:x_'='_x not
R59709:59711 AV.Integers Make and def
R59715:59715 AV.Integers <> y var
R59713:59713 AV.Integers <> x var
R59719:59722 AV.Integers Make zero def
R59773:59781 AV.Integers Make xor_is_or thm
R59773:59781 AV.Integers Make xor_is_or thm
R59773:59781 AV.Integers Make xor_is_or thm
R59773:59781 AV.Integers Make xor_is_or thm
R59796:59804 AV.Integers Make add_is_or thm
R59796:59804 AV.Integers Make add_is_or thm
prf 59827:59833 Make add_and
R59868:59873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59897:59899 Coq.Init.Logic <> :type_scope:x_'='_x not
R59874:59876 AV.Integers Make add def
R59889:59891 AV.Integers Make and def
R59895:59895 AV.Integers <> z var
R59893:59893 AV.Integers <> x var
R59879:59881 AV.Integers Make and def
R59885:59885 AV.Integers <> y var
R59883:59883 AV.Integers <> x var
R59900:59902 AV.Integers Make and def
R59907:59908 AV.Integers Make or def
R59912:59912 AV.Integers <> z var
R59910:59910 AV.Integers <> y var
R59904:59904 AV.Integers <> x var
R59861:59863 Coq.Init.Logic <> :type_scope:x_'='_x not
R59854:59856 AV.Integers Make and def
R59860:59860 AV.Integers <> z var
R59858:59858 AV.Integers <> y var
R59864:59867 AV.Integers Make zero def
R59941:59949 AV.Integers Make add_is_or thm
R59941:59949 AV.Integers Make add_is_or thm
R59941:59949 AV.Integers Make add_is_or thm
R59941:59949 AV.Integers Make add_is_or thm
R59962:59975 AV.Integers Make and_or_distrib thm
R59962:59975 AV.Integers Make and_or_distrib thm
R59962:59975 AV.Integers Make and_or_distrib thm
R59995:60004 AV.Integers Make and_commut thm
R59995:60004 AV.Integers Make and_commut thm
R59995:60004 AV.Integers Make and_commut thm
R60022:60030 AV.Integers Make and_assoc thm
R60022:60030 AV.Integers Make and_assoc thm
R60022:60030 AV.Integers Make and_assoc thm
R60054:60062 AV.Integers Make and_assoc thm
R60054:60062 AV.Integers Make and_assoc thm
R60054:60062 AV.Integers Make and_assoc thm
R60054:60062 AV.Integers Make and_assoc thm
R60079:60088 AV.Integers Make and_commut thm
R60091:60093 AV.Integers Make and def
R60079:60088 AV.Integers Make and_commut thm
R60091:60093 AV.Integers Make and def
R60079:60088 AV.Integers Make and_commut thm
R60091:60093 AV.Integers Make and def
R60115:60123 AV.Integers Make and_assoc thm
R60115:60123 AV.Integers Make and_assoc thm
R60115:60123 AV.Integers Make and_assoc thm
R60147:60156 AV.Integers Make and_commut thm
R60147:60156 AV.Integers Make and_commut thm
R60147:60156 AV.Integers Make and_commut thm
R60165:60172 AV.Integers Make and_zero thm
R60165:60172 AV.Integers Make and_zero thm
prf 60219:60226 Make bits_shl
R60265:60270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60290:60294 Coq.Init.Logic <> :type_scope:x_'='_x not
R60271:60277 AV.Integers Make testbit def
R60289:60289 AV.Integers <> i var
R60280:60282 AV.Integers Make shl def
R60286:60286 AV.Integers <> y var
R60284:60284 AV.Integers <> x var
R60298:60300 AV.Coqlib <> zlt def
R60305:60312 AV.Integers Make unsigned def
R60314:60314 AV.Integers <> y var
R60302:60302 AV.Integers <> i var
R60333:60339 AV.Integers Make testbit def
R60345:60347 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R60344:60344 AV.Integers <> i var
R60348:60355 AV.Integers Make unsigned def
R60357:60357 AV.Integers <> y var
R60341:60341 AV.Integers <> x var
R60322:60326 Coq.Init.Datatypes <> false constr
R60248:60251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60253:60255 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60252:60252 AV.Integers <> i var
R60252:60252 AV.Integers <> i var
R60256:60264 AV.Integers Make zwordsize def
R60385:60387 AV.Integers Make shl def
R60398:60409 AV.Integers Make testbit_repr thm
R60398:60409 AV.Integers Make testbit_repr thm
R60398:60409 AV.Integers Make testbit_repr thm
R60398:60409 AV.Integers Make testbit_repr thm
R60430:60432 AV.Coqlib <> zlt def
R60437:60444 AV.Integers Make unsigned def
R60430:60432 AV.Coqlib <> zlt def
R60437:60444 AV.Integers Make unsigned def
R60459:60475 Coq.ZArith.BinInt Z shiftl_spec_low thm
R60459:60475 Coq.ZArith.BinInt Z shiftl_spec_low thm
R60492:60509 Coq.ZArith.BinInt Z shiftl_spec_high thm
R60492:60509 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 60538:60546 Make bits_shru
R60585:60590 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60611:60615 Coq.Init.Logic <> :type_scope:x_'='_x not
R60591:60597 AV.Integers Make testbit def
R60610:60610 AV.Integers <> i var
R60600:60603 AV.Integers Make shru def
R60607:60607 AV.Integers <> y var
R60605:60605 AV.Integers <> x var
R60619:60621 AV.Coqlib <> zlt def
R60640:60648 AV.Integers Make zwordsize def
R60625:60627 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60624:60624 AV.Integers <> i var
R60628:60635 AV.Integers Make unsigned def
R60637:60637 AV.Integers <> y var
R60687:60691 Coq.Init.Datatypes <> false constr
R60655:60661 AV.Integers Make testbit def
R60667:60669 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60666:60666 AV.Integers <> i var
R60670:60677 AV.Integers Make unsigned def
R60679:60679 AV.Integers <> y var
R60663:60663 AV.Integers <> x var
R60568:60571 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60573:60575 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60572:60572 AV.Integers <> i var
R60572:60572 AV.Integers <> i var
R60576:60584 AV.Integers Make zwordsize def
R60718:60721 AV.Integers Make shru def
R60732:60743 AV.Integers Make testbit_repr thm
R60732:60743 AV.Integers Make testbit_repr thm
R60732:60743 AV.Integers Make testbit_repr thm
R60732:60743 AV.Integers Make testbit_repr thm
R60762:60774 Coq.ZArith.BinInt Z shiftr_spec thm
R60762:60774 Coq.ZArith.BinInt Z shiftr_spec thm
R60762:60774 Coq.ZArith.BinInt Z shiftr_spec thm
R60762:60774 Coq.ZArith.BinInt Z shiftr_spec thm
R60783:60789 AV.Integers Make testbit def
R60795:60797 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60798:60805 AV.Integers Make unsigned def
R60783:60789 AV.Integers Make testbit def
R60795:60797 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60798:60805 AV.Integers Make unsigned def
R60824:60826 AV.Coqlib <> zlt def
R60845:60853 AV.Integers Make zwordsize def
R60830:60832 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60833:60840 AV.Integers Make unsigned def
R60824:60826 AV.Coqlib <> zlt def
R60845:60853 AV.Integers Make zwordsize def
R60830:60832 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60833:60840 AV.Integers Make unsigned def
R60873:60882 AV.Integers Make bits_above thm
R60873:60882 AV.Integers Make bits_above thm
prf 60912:60919 Make bits_shr
R60958:60963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60983:60987 Coq.Init.Logic <> :type_scope:x_'='_x not
R60964:60970 AV.Integers Make testbit def
R60982:60982 AV.Integers <> i var
R60973:60975 AV.Integers Make shr def
R60979:60979 AV.Integers <> y var
R60977:60977 AV.Integers <> x var
R60988:60994 AV.Integers Make testbit def
R61002:61004 AV.Coqlib <> zlt def
R61023:61031 AV.Integers Make zwordsize def
R61008:61010 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61007:61007 AV.Integers <> i var
R61011:61018 AV.Integers Make unsigned def
R61020:61020 AV.Integers <> y var
R61067:61069 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R61058:61066 AV.Integers Make zwordsize def
R61039:61041 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61038:61038 AV.Integers <> i var
R61042:61049 AV.Integers Make unsigned def
R61051:61051 AV.Integers <> y var
R60996:60996 AV.Integers <> x var
R60941:60944 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60946:60948 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60945:60945 AV.Integers <> i var
R60945:60945 AV.Integers <> i var
R60949:60957 AV.Integers Make zwordsize def
R61098:61100 AV.Integers Make shr def
R61111:61122 AV.Integers Make testbit_repr thm
R61111:61122 AV.Integers Make testbit_repr thm
R61111:61122 AV.Integers Make testbit_repr thm
R61111:61122 AV.Integers Make testbit_repr thm
R61141:61153 Coq.ZArith.BinInt Z shiftr_spec thm
R61141:61153 Coq.ZArith.BinInt Z shiftr_spec thm
R61141:61153 Coq.ZArith.BinInt Z shiftr_spec thm
R61141:61153 Coq.ZArith.BinInt Z shiftr_spec thm
R61162:61172 AV.Integers Make bits_signed thm
R61162:61172 AV.Integers Make bits_signed thm
R61189:61202 AV.Integers Make unsigned_range thm
R61189:61202 AV.Integers Make unsigned_range thm
R61243:61250 AV.Integers Make bits_shl thm
R61252:61260 AV.Integers Make bits_shru thm
R61262:61269 AV.Integers Make bits_shr thm
prf 61287:61294 Make shl_zero
R61317:61319 Coq.Init.Logic <> :type_scope:x_'='_x not
R61307:61309 AV.Integers Make shl def
R61313:61316 AV.Integers Make zero def
R61311:61311 AV.Integers <> x var
R61320:61320 AV.Integers <> x var
R61351:61363 AV.Integers Make unsigned_zero thm
R61351:61363 AV.Integers Make unsigned_zero thm
R61351:61363 AV.Integers Make unsigned_zero thm
R61374:61382 AV.Coqlib <> zlt_false thm
R61374:61382 AV.Coqlib <> zlt_false thm
R61374:61382 AV.Coqlib <> zlt_false thm
R61374:61382 AV.Coqlib <> zlt_false thm
prf 61420:61436 Make bitwise_binop_shl
R61462:61462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61549:61555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61578:61583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61605:61607 Coq.Init.Logic <> :type_scope:x_'='_x not
R61584:61584 AV.Integers <> f var
R61597:61599 AV.Integers Make shl def
R61603:61603 AV.Integers <> n var
R61601:61601 AV.Integers <> y var
R61587:61589 AV.Integers Make shl def
R61593:61593 AV.Integers <> n var
R61591:61591 AV.Integers <> x var
R61608:61610 AV.Integers Make shl def
R61620:61620 AV.Integers <> n var
R61613:61613 AV.Integers <> f var
R61617:61617 AV.Integers <> y var
R61615:61615 AV.Integers <> x var
R61570:61572 Coq.Init.Logic <> :type_scope:x_'='_x not
R61556:61557 AV.Integers <> f' var
R61565:61569 Coq.Init.Datatypes <> false constr
R61559:61563 Coq.Init.Datatypes <> false constr
R61573:61577 Coq.Init.Datatypes <> false constr
R61495:61498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61516:61518 Coq.Init.Logic <> :type_scope:x_'='_x not
R61499:61505 AV.Integers Make testbit def
R61515:61515 AV.Integers <> i var
R61508:61508 AV.Integers <> f var
R61512:61512 AV.Integers <> y var
R61510:61510 AV.Integers <> x var
R61519:61520 AV.Integers <> f' var
R61537:61543 AV.Integers Make testbit def
R61547:61547 AV.Integers <> i var
R61545:61545 AV.Integers <> y var
R61523:61529 AV.Integers Make testbit def
R61533:61533 AV.Integers <> i var
R61531:61531 AV.Integers <> x var
R61478:61481 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R61483:61485 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R61482:61482 AV.Integers <> i var
R61482:61482 AV.Integers <> i var
R61486:61494 AV.Integers Make zwordsize def
R61646:61657 AV.Integers Make same_bits_eq thm
R61646:61657 AV.Integers Make same_bits_eq thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61696:61703 AV.Integers Make bits_shl thm
R61724:61726 AV.Coqlib <> zlt def
R61731:61738 AV.Integers Make unsigned def
R61724:61726 AV.Coqlib <> zlt def
R61731:61738 AV.Integers Make unsigned def
R61782:61795 AV.Integers Make unsigned_range thm
R61782:61795 AV.Integers Make unsigned_range thm
prf 61822:61828 Make and_shl
R61872:61874 Coq.Init.Logic <> :type_scope:x_'='_x not
R61849:61851 AV.Integers Make and def
R61864:61866 AV.Integers Make shl def
R61870:61870 AV.Integers <> n var
R61868:61868 AV.Integers <> y var
R61854:61856 AV.Integers Make shl def
R61860:61860 AV.Integers <> n var
R61858:61858 AV.Integers <> x var
R61875:61877 AV.Integers Make shl def
R61889:61889 AV.Integers <> n var
R61880:61882 AV.Integers Make and def
R61886:61886 AV.Integers <> y var
R61884:61884 AV.Integers <> x var
R61938:61941 Coq.Init.Datatypes <> andb def
R61915:61931 AV.Integers Make bitwise_binop_shl thm
R61938:61941 Coq.Init.Datatypes <> andb def
R61915:61931 AV.Integers Make bitwise_binop_shl thm
R61950:61957 AV.Integers Make bits_and thm
R61950:61957 AV.Integers Make bits_and thm
prf 61980:61985 Make or_shl
R62028:62030 Coq.Init.Logic <> :type_scope:x_'='_x not
R62006:62007 AV.Integers Make or def
R62020:62022 AV.Integers Make shl def
R62026:62026 AV.Integers <> n var
R62024:62024 AV.Integers <> y var
R62010:62012 AV.Integers Make shl def
R62016:62016 AV.Integers <> n var
R62014:62014 AV.Integers <> x var
R62031:62033 AV.Integers Make shl def
R62044:62044 AV.Integers <> n var
R62036:62037 AV.Integers Make or def
R62041:62041 AV.Integers <> y var
R62039:62039 AV.Integers <> x var
R62093:62095 Coq.Init.Datatypes <> orb def
R62070:62086 AV.Integers Make bitwise_binop_shl thm
R62093:62095 Coq.Init.Datatypes <> orb def
R62070:62086 AV.Integers Make bitwise_binop_shl thm
R62104:62110 AV.Integers Make bits_or thm
R62104:62110 AV.Integers Make bits_or thm
prf 62133:62139 Make xor_shl
R62183:62185 Coq.Init.Logic <> :type_scope:x_'='_x not
R62160:62162 AV.Integers Make xor def
R62175:62177 AV.Integers Make shl def
R62181:62181 AV.Integers <> n var
R62179:62179 AV.Integers <> y var
R62165:62167 AV.Integers Make shl def
R62171:62171 AV.Integers <> n var
R62169:62169 AV.Integers <> x var
R62186:62188 AV.Integers Make shl def
R62200:62200 AV.Integers <> n var
R62191:62193 AV.Integers Make xor def
R62197:62197 AV.Integers <> y var
R62195:62195 AV.Integers <> x var
R62249:62252 Coq.Init.Datatypes <> xorb def
R62226:62242 AV.Integers Make bitwise_binop_shl thm
R62249:62252 Coq.Init.Datatypes <> xorb def
R62226:62242 AV.Integers Make bitwise_binop_shl thm
R62261:62268 AV.Integers Make bits_xor thm
R62261:62268 AV.Integers Make bits_xor thm
prf 62289:62295 Make ltu_inv
R62326:62329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62331:62334 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62345:62347 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62335:62342 AV.Integers Make unsigned def
R62344:62344 AV.Integers <> x var
R62335:62342 AV.Integers Make unsigned def
R62344:62344 AV.Integers <> x var
R62348:62355 AV.Integers Make unsigned def
R62357:62357 AV.Integers <> y var
R62319:62321 Coq.Init.Logic <> :type_scope:x_'='_x not
R62312:62314 AV.Integers Make ltu def
R62318:62318 AV.Integers <> y var
R62316:62316 AV.Integers <> x var
R62322:62325 Coq.Init.Datatypes <> true constr
R62376:62378 AV.Integers Make ltu def
R62399:62401 AV.Coqlib <> zlt def
R62417:62424 AV.Integers Make unsigned def
R62404:62411 AV.Integers Make unsigned def
R62399:62401 AV.Coqlib <> zlt def
R62417:62424 AV.Integers Make unsigned def
R62404:62411 AV.Integers Make unsigned def
R62458:62471 AV.Integers Make unsigned_range thm
R62458:62471 AV.Integers Make unsigned_range thm
prf 62512:62528 Make ltu_iwordsize_inv
R62565:62568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62570:62573 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62584:62586 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62574:62581 AV.Integers Make unsigned def
R62583:62583 AV.Integers <> x var
R62574:62581 AV.Integers Make unsigned def
R62583:62583 AV.Integers <> x var
R62587:62595 AV.Integers Make zwordsize def
R62558:62560 Coq.Init.Logic <> :type_scope:x_'='_x not
R62543:62545 AV.Integers Make ltu def
R62549:62557 AV.Integers Make iwordsize def
R62547:62547 AV.Integers <> x var
R62561:62564 Coq.Init.Datatypes <> true constr
R62627:62633 AV.Integers Make ltu_inv thm
R62627:62633 AV.Integers Make ltu_inv thm
R62651:62672 AV.Integers Make unsigned_repr_wordsize thm
R62651:62672 AV.Integers Make unsigned_repr_wordsize thm
R62651:62672 AV.Integers Make unsigned_repr_wordsize thm
prf 62695:62701 Make shl_shl
R62744:62749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62772:62777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62808:62813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62829:62831 Coq.Init.Logic <> :type_scope:x_'='_x not
R62814:62816 AV.Integers Make shl def
R62828:62828 AV.Integers <> z var
R62819:62821 AV.Integers Make shl def
R62825:62825 AV.Integers <> y var
R62823:62823 AV.Integers <> x var
R62832:62834 AV.Integers Make shl def
R62839:62841 AV.Integers Make add def
R62845:62845 AV.Integers <> z var
R62843:62843 AV.Integers <> y var
R62836:62836 AV.Integers <> x var
R62801:62803 Coq.Init.Logic <> :type_scope:x_'='_x not
R62778:62780 AV.Integers Make ltu def
R62792:62800 AV.Integers Make iwordsize def
R62783:62785 AV.Integers Make add def
R62789:62789 AV.Integers <> z var
R62787:62787 AV.Integers <> y var
R62804:62807 Coq.Init.Datatypes <> true constr
R62765:62767 Coq.Init.Logic <> :type_scope:x_'='_x not
R62750:62752 AV.Integers Make ltu def
R62756:62764 AV.Integers Make iwordsize def
R62754:62754 AV.Integers <> z var
R62768:62771 Coq.Init.Datatypes <> true constr
R62737:62739 Coq.Init.Logic <> :type_scope:x_'='_x not
R62722:62724 AV.Integers Make ltu def
R62728:62736 AV.Integers Make iwordsize def
R62726:62726 AV.Integers <> y var
R62740:62743 Coq.Init.Datatypes <> true constr
R62880:62896 AV.Integers Make ltu_iwordsize_inv thm
R62904:62920 AV.Integers Make ltu_iwordsize_inv thm
R62880:62896 AV.Integers Make ltu_iwordsize_inv thm
R62904:62920 AV.Integers Make ltu_iwordsize_inv thm
R62965:62967 Coq.Init.Logic <> :type_scope:x_'='_x not
R62947:62954 AV.Integers Make unsigned def
R62957:62959 AV.Integers Make add def
R62978:62980 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62968:62975 AV.Integers Make unsigned def
R62981:62988 AV.Integers Make unsigned def
R62965:62967 Coq.Init.Logic <> :type_scope:x_'='_x not
R62947:62954 AV.Integers Make unsigned def
R62957:62959 AV.Integers Make add def
R62978:62980 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62968:62975 AV.Integers Make unsigned def
R62981:62988 AV.Integers Make unsigned def
R63005:63007 AV.Integers Make add def
R63016:63028 AV.Integers Make unsigned_repr thm
R63016:63028 AV.Integers Make unsigned_repr thm
R63046:63070 AV.Integers Make two_wordsize_max_unsigned thm
R63046:63070 AV.Integers Make two_wordsize_max_unsigned thm
R63088:63099 AV.Integers Make same_bits_eq thm
R63088:63099 AV.Integers Make same_bits_eq thm
R63120:63127 AV.Integers Make bits_shl thm
R63120:63127 AV.Integers Make bits_shl thm
R63120:63127 AV.Integers Make bits_shl thm
R63120:63127 AV.Integers Make bits_shl thm
R63148:63150 AV.Coqlib <> zlt def
R63155:63162 AV.Integers Make unsigned def
R63148:63150 AV.Coqlib <> zlt def
R63155:63162 AV.Integers Make unsigned def
R63181:63188 AV.Integers Make bits_shl thm
R63181:63188 AV.Integers Make bits_shl thm
R63181:63188 AV.Integers Make bits_shl thm
R63181:63188 AV.Integers Make bits_shl thm
R63205:63212 AV.Coqlib <> zlt_true thm
R63205:63212 AV.Coqlib <> zlt_true thm
R63205:63212 AV.Coqlib <> zlt_true thm
R63205:63212 AV.Coqlib <> zlt_true thm
R63240:63247 AV.Integers Make bits_shl thm
R63240:63247 AV.Integers Make bits_shl thm
R63240:63247 AV.Integers Make bits_shl thm
R63240:63247 AV.Integers Make bits_shl thm
R63260:63262 AV.Coqlib <> zlt def
R63282:63289 AV.Integers Make unsigned def
R63266:63268 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63269:63276 AV.Integers Make unsigned def
R63260:63262 AV.Coqlib <> zlt def
R63282:63289 AV.Integers Make unsigned def
R63266:63268 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63269:63276 AV.Integers Make unsigned def
R63310:63317 AV.Integers Make bits_shl thm
R63310:63317 AV.Integers Make bits_shl thm
R63310:63317 AV.Integers Make bits_shl thm
R63310:63317 AV.Integers Make bits_shl thm
R63334:63341 AV.Coqlib <> zlt_true thm
R63334:63341 AV.Coqlib <> zlt_true thm
R63334:63341 AV.Coqlib <> zlt_true thm
R63334:63341 AV.Coqlib <> zlt_true thm
R63371:63378 AV.Integers Make bits_shl thm
R63371:63378 AV.Integers Make bits_shl thm
R63371:63378 AV.Integers Make bits_shl thm
R63371:63378 AV.Integers Make bits_shl thm
R63395:63403 AV.Coqlib <> zlt_false thm
R63395:63403 AV.Coqlib <> zlt_false thm
R63395:63403 AV.Coqlib <> zlt_false thm
R63395:63403 AV.Coqlib <> zlt_false thm
prf 63456:63462 Make sub_ltu
R63497:63504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63506:63509 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R63533:63536 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R63520:63522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63510:63517 AV.Integers Make unsigned def
R63519:63519 AV.Integers <> y var
R63523:63530 AV.Integers Make unsigned def
R63532:63532 AV.Integers <> x var
R63520:63522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63510:63517 AV.Integers Make unsigned def
R63519:63519 AV.Integers <> y var
R63523:63530 AV.Integers Make unsigned def
R63532:63532 AV.Integers <> x var
R63537:63544 AV.Integers Make unsigned def
R63546:63546 AV.Integers <> y var
R63490:63492 Coq.Init.Logic <> :type_scope:x_'='_x not
R63483:63485 AV.Integers Make ltu def
R63489:63489 AV.Integers <> y var
R63487:63487 AV.Integers <> x var
R63493:63496 Coq.Init.Datatypes <> true constr
R63580:63586 AV.Integers Make ltu_inv thm
R63580:63586 AV.Integers Make ltu_inv thm
prf 63642:63650 Make shru_zero
R63674:63676 Coq.Init.Logic <> :type_scope:x_'='_x not
R63663:63666 AV.Integers Make shru def
R63670:63673 AV.Integers Make zero def
R63668:63668 AV.Integers <> x var
R63677:63677 AV.Integers <> x var
R63708:63720 AV.Integers Make unsigned_zero thm
R63708:63720 AV.Integers Make unsigned_zero thm
R63708:63720 AV.Integers Make unsigned_zero thm
R63731:63738 AV.Coqlib <> zlt_true thm
R63731:63738 AV.Coqlib <> zlt_true thm
R63731:63738 AV.Coqlib <> zlt_true thm
R63731:63738 AV.Coqlib <> zlt_true thm
prf 63776:63793 Make bitwise_binop_shru
R63819:63819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63906:63912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63935:63940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63964:63966 Coq.Init.Logic <> :type_scope:x_'='_x not
R63941:63941 AV.Integers <> f var
R63955:63958 AV.Integers Make shru def
R63962:63962 AV.Integers <> n var
R63960:63960 AV.Integers <> y var
R63944:63947 AV.Integers Make shru def
R63951:63951 AV.Integers <> n var
R63949:63949 AV.Integers <> x var
R63967:63970 AV.Integers Make shru def
R63980:63980 AV.Integers <> n var
R63973:63973 AV.Integers <> f var
R63977:63977 AV.Integers <> y var
R63975:63975 AV.Integers <> x var
R63927:63929 Coq.Init.Logic <> :type_scope:x_'='_x not
R63913:63914 AV.Integers <> f' var
R63922:63926 Coq.Init.Datatypes <> false constr
R63916:63920 Coq.Init.Datatypes <> false constr
R63930:63934 Coq.Init.Datatypes <> false constr
R63852:63855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63873:63875 Coq.Init.Logic <> :type_scope:x_'='_x not
R63856:63862 AV.Integers Make testbit def
R63872:63872 AV.Integers <> i var
R63865:63865 AV.Integers <> f var
R63869:63869 AV.Integers <> y var
R63867:63867 AV.Integers <> x var
R63876:63877 AV.Integers <> f' var
R63894:63900 AV.Integers Make testbit def
R63904:63904 AV.Integers <> i var
R63902:63902 AV.Integers <> y var
R63880:63886 AV.Integers Make testbit def
R63890:63890 AV.Integers <> i var
R63888:63888 AV.Integers <> x var
R63835:63838 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R63840:63842 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R63839:63839 AV.Integers <> i var
R63839:63839 AV.Integers <> i var
R63843:63851 AV.Integers Make zwordsize def
R64006:64017 AV.Integers Make same_bits_eq thm
R64006:64017 AV.Integers Make same_bits_eq thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64056:64064 AV.Integers Make bits_shru thm
R64085:64087 AV.Coqlib <> zlt def
R64106:64114 AV.Integers Make zwordsize def
R64091:64093 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64094:64101 AV.Integers Make unsigned def
R64085:64087 AV.Coqlib <> zlt def
R64106:64114 AV.Integers Make zwordsize def
R64091:64093 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64094:64101 AV.Integers Make unsigned def
R64155:64168 AV.Integers Make unsigned_range thm
R64155:64168 AV.Integers Make unsigned_range thm
prf 64195:64202 Make and_shru
R64248:64250 Coq.Init.Logic <> :type_scope:x_'='_x not
R64223:64225 AV.Integers Make and def
R64239:64242 AV.Integers Make shru def
R64246:64246 AV.Integers <> n var
R64244:64244 AV.Integers <> y var
R64228:64231 AV.Integers Make shru def
R64235:64235 AV.Integers <> n var
R64233:64233 AV.Integers <> x var
R64251:64254 AV.Integers Make shru def
R64266:64266 AV.Integers <> n var
R64257:64259 AV.Integers Make and def
R64263:64263 AV.Integers <> y var
R64261:64261 AV.Integers <> x var
R64316:64319 Coq.Init.Datatypes <> andb def
R64292:64309 AV.Integers Make bitwise_binop_shru thm
R64316:64319 Coq.Init.Datatypes <> andb def
R64292:64309 AV.Integers Make bitwise_binop_shru thm
R64334:64341 AV.Integers Make bits_and thm
R64334:64341 AV.Integers Make bits_and thm
prf 64358:64364 Make or_shru
R64409:64411 Coq.Init.Logic <> :type_scope:x_'='_x not
R64385:64386 AV.Integers Make or def
R64400:64403 AV.Integers Make shru def
R64407:64407 AV.Integers <> n var
R64405:64405 AV.Integers <> y var
R64389:64392 AV.Integers Make shru def
R64396:64396 AV.Integers <> n var
R64394:64394 AV.Integers <> x var
R64412:64415 AV.Integers Make shru def
R64426:64426 AV.Integers <> n var
R64418:64419 AV.Integers Make or def
R64423:64423 AV.Integers <> y var
R64421:64421 AV.Integers <> x var
R64476:64478 Coq.Init.Datatypes <> orb def
R64452:64469 AV.Integers Make bitwise_binop_shru thm
R64476:64478 Coq.Init.Datatypes <> orb def
R64452:64469 AV.Integers Make bitwise_binop_shru thm
R64493:64499 AV.Integers Make bits_or thm
R64493:64499 AV.Integers Make bits_or thm
prf 64516:64523 Make xor_shru
R64569:64571 Coq.Init.Logic <> :type_scope:x_'='_x not
R64544:64546 AV.Integers Make xor def
R64560:64563 AV.Integers Make shru def
R64567:64567 AV.Integers <> n var
R64565:64565 AV.Integers <> y var
R64549:64552 AV.Integers Make shru def
R64556:64556 AV.Integers <> n var
R64554:64554 AV.Integers <> x var
R64572:64575 AV.Integers Make shru def
R64587:64587 AV.Integers <> n var
R64578:64580 AV.Integers Make xor def
R64584:64584 AV.Integers <> y var
R64582:64582 AV.Integers <> x var
R64637:64640 Coq.Init.Datatypes <> xorb def
R64613:64630 AV.Integers Make bitwise_binop_shru thm
R64637:64640 Coq.Init.Datatypes <> xorb def
R64613:64630 AV.Integers Make bitwise_binop_shru thm
R64655:64662 AV.Integers Make bits_xor thm
R64655:64662 AV.Integers Make bits_xor thm
prf 64679:64687 Make shru_shru
R64730:64735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64758:64763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64794:64799 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64817:64819 Coq.Init.Logic <> :type_scope:x_'='_x not
R64800:64803 AV.Integers Make shru def
R64816:64816 AV.Integers <> z var
R64806:64809 AV.Integers Make shru def
R64813:64813 AV.Integers <> y var
R64811:64811 AV.Integers <> x var
R64820:64823 AV.Integers Make shru def
R64828:64830 AV.Integers Make add def
R64834:64834 AV.Integers <> z var
R64832:64832 AV.Integers <> y var
R64825:64825 AV.Integers <> x var
R64787:64789 Coq.Init.Logic <> :type_scope:x_'='_x not
R64764:64766 AV.Integers Make ltu def
R64778:64786 AV.Integers Make iwordsize def
R64769:64771 AV.Integers Make add def
R64775:64775 AV.Integers <> z var
R64773:64773 AV.Integers <> y var
R64790:64793 Coq.Init.Datatypes <> true constr
R64751:64753 Coq.Init.Logic <> :type_scope:x_'='_x not
R64736:64738 AV.Integers Make ltu def
R64742:64750 AV.Integers Make iwordsize def
R64740:64740 AV.Integers <> z var
R64754:64757 Coq.Init.Datatypes <> true constr
R64723:64725 Coq.Init.Logic <> :type_scope:x_'='_x not
R64708:64710 AV.Integers Make ltu def
R64714:64722 AV.Integers Make iwordsize def
R64712:64712 AV.Integers <> y var
R64726:64729 Coq.Init.Datatypes <> true constr
R64869:64885 AV.Integers Make ltu_iwordsize_inv thm
R64893:64909 AV.Integers Make ltu_iwordsize_inv thm
R64869:64885 AV.Integers Make ltu_iwordsize_inv thm
R64893:64909 AV.Integers Make ltu_iwordsize_inv thm
R64954:64956 Coq.Init.Logic <> :type_scope:x_'='_x not
R64936:64943 AV.Integers Make unsigned def
R64946:64948 AV.Integers Make add def
R64967:64969 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64957:64964 AV.Integers Make unsigned def
R64970:64977 AV.Integers Make unsigned def
R64954:64956 Coq.Init.Logic <> :type_scope:x_'='_x not
R64936:64943 AV.Integers Make unsigned def
R64946:64948 AV.Integers Make add def
R64967:64969 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64957:64964 AV.Integers Make unsigned def
R64970:64977 AV.Integers Make unsigned def
R64994:64996 AV.Integers Make add def
R65005:65017 AV.Integers Make unsigned_repr thm
R65005:65017 AV.Integers Make unsigned_repr thm
R65035:65059 AV.Integers Make two_wordsize_max_unsigned thm
R65035:65059 AV.Integers Make two_wordsize_max_unsigned thm
R65077:65088 AV.Integers Make same_bits_eq thm
R65077:65088 AV.Integers Make same_bits_eq thm
R65109:65117 AV.Integers Make bits_shru thm
R65109:65117 AV.Integers Make bits_shru thm
R65109:65117 AV.Integers Make bits_shru thm
R65109:65117 AV.Integers Make bits_shru thm
R65138:65140 AV.Coqlib <> zlt def
R65159:65167 AV.Integers Make zwordsize def
R65144:65146 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65147:65154 AV.Integers Make unsigned def
R65138:65140 AV.Coqlib <> zlt def
R65159:65167 AV.Integers Make zwordsize def
R65144:65146 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65147:65154 AV.Integers Make unsigned def
R65183:65191 AV.Integers Make bits_shru thm
R65183:65191 AV.Integers Make bits_shru thm
R65183:65191 AV.Integers Make bits_shru thm
R65183:65191 AV.Integers Make bits_shru thm
R65204:65206 AV.Coqlib <> zlt def
R65238:65246 AV.Integers Make zwordsize def
R65223:65225 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65210:65212 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65213:65220 AV.Integers Make unsigned def
R65226:65233 AV.Integers Make unsigned def
R65204:65206 AV.Coqlib <> zlt def
R65238:65246 AV.Integers Make zwordsize def
R65223:65225 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65210:65212 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65213:65220 AV.Integers Make unsigned def
R65226:65233 AV.Integers Make unsigned def
R65264:65272 AV.Integers Make bits_shru thm
R65264:65272 AV.Integers Make bits_shru thm
R65264:65272 AV.Integers Make bits_shru thm
R65264:65272 AV.Integers Make bits_shru thm
R65289:65296 AV.Coqlib <> zlt_true thm
R65289:65296 AV.Coqlib <> zlt_true thm
R65289:65296 AV.Coqlib <> zlt_true thm
R65289:65296 AV.Coqlib <> zlt_true thm
R65336:65344 AV.Integers Make bits_shru thm
R65336:65344 AV.Integers Make bits_shru thm
R65336:65344 AV.Integers Make bits_shru thm
R65336:65344 AV.Integers Make bits_shru thm
R65361:65369 AV.Coqlib <> zlt_false thm
R65361:65369 AV.Coqlib <> zlt_false thm
R65361:65369 AV.Coqlib <> zlt_false thm
R65361:65369 AV.Coqlib <> zlt_false thm
R65410:65418 AV.Integers Make bits_shru thm
R65410:65418 AV.Integers Make bits_shru thm
R65410:65418 AV.Integers Make bits_shru thm
R65410:65418 AV.Integers Make bits_shru thm
R65435:65443 AV.Coqlib <> zlt_false thm
R65435:65443 AV.Coqlib <> zlt_false thm
R65435:65443 AV.Coqlib <> zlt_false thm
R65435:65443 AV.Coqlib <> zlt_false thm
prf 65473:65480 Make shr_zero
R65503:65505 Coq.Init.Logic <> :type_scope:x_'='_x not
R65493:65495 AV.Integers Make shr def
R65499:65502 AV.Integers Make zero def
R65497:65497 AV.Integers <> x var
R65506:65506 AV.Integers <> x var
R65537:65549 AV.Integers Make unsigned_zero thm
R65537:65549 AV.Integers Make unsigned_zero thm
R65537:65549 AV.Integers Make unsigned_zero thm
R65560:65567 AV.Coqlib <> zlt_true thm
R65560:65567 AV.Coqlib <> zlt_true thm
R65560:65567 AV.Coqlib <> zlt_true thm
R65560:65567 AV.Coqlib <> zlt_true thm
prf 65605:65621 Make bitwise_binop_shr
R65647:65647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65734:65740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65762:65764 Coq.Init.Logic <> :type_scope:x_'='_x not
R65741:65741 AV.Integers <> f var
R65754:65756 AV.Integers Make shr def
R65760:65760 AV.Integers <> n var
R65758:65758 AV.Integers <> y var
R65744:65746 AV.Integers Make shr def
R65750:65750 AV.Integers <> n var
R65748:65748 AV.Integers <> x var
R65765:65767 AV.Integers Make shr def
R65777:65777 AV.Integers <> n var
R65770:65770 AV.Integers <> f var
R65774:65774 AV.Integers <> y var
R65772:65772 AV.Integers <> x var
R65680:65683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65701:65703 Coq.Init.Logic <> :type_scope:x_'='_x not
R65684:65690 AV.Integers Make testbit def
R65700:65700 AV.Integers <> i var
R65693:65693 AV.Integers <> f var
R65697:65697 AV.Integers <> y var
R65695:65695 AV.Integers <> x var
R65704:65705 AV.Integers <> f' var
R65722:65728 AV.Integers Make testbit def
R65732:65732 AV.Integers <> i var
R65730:65730 AV.Integers <> y var
R65708:65714 AV.Integers Make testbit def
R65718:65718 AV.Integers <> i var
R65716:65716 AV.Integers <> x var
R65663:65666 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65668:65670 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65667:65667 AV.Integers <> i var
R65667:65667 AV.Integers <> i var
R65671:65679 AV.Integers Make zwordsize def
R65803:65814 AV.Integers Make same_bits_eq thm
R65803:65814 AV.Integers Make same_bits_eq thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65853:65860 AV.Integers Make bits_shr thm
R65900:65902 AV.Coqlib <> zlt def
R65921:65929 AV.Integers Make zwordsize def
R65906:65908 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65909:65916 AV.Integers Make unsigned def
R65900:65902 AV.Coqlib <> zlt def
R65921:65929 AV.Integers Make zwordsize def
R65906:65908 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65909:65916 AV.Integers Make unsigned def
R65947:65960 AV.Integers Make unsigned_range thm
R65947:65960 AV.Integers Make unsigned_range thm
prf 65996:66002 Make and_shr
R66046:66048 Coq.Init.Logic <> :type_scope:x_'='_x not
R66023:66025 AV.Integers Make and def
R66038:66040 AV.Integers Make shr def
R66044:66044 AV.Integers <> n var
R66042:66042 AV.Integers <> y var
R66028:66030 AV.Integers Make shr def
R66034:66034 AV.Integers <> n var
R66032:66032 AV.Integers <> x var
R66049:66051 AV.Integers Make shr def
R66063:66063 AV.Integers <> n var
R66054:66056 AV.Integers Make and def
R66060:66060 AV.Integers <> y var
R66058:66058 AV.Integers <> x var
R66112:66115 Coq.Init.Datatypes <> andb def
R66089:66105 AV.Integers Make bitwise_binop_shr thm
R66112:66115 Coq.Init.Datatypes <> andb def
R66089:66105 AV.Integers Make bitwise_binop_shr thm
R66124:66131 AV.Integers Make bits_and thm
R66124:66131 AV.Integers Make bits_and thm
prf 66148:66153 Make or_shr
R66196:66198 Coq.Init.Logic <> :type_scope:x_'='_x not
R66174:66175 AV.Integers Make or def
R66188:66190 AV.Integers Make shr def
R66194:66194 AV.Integers <> n var
R66192:66192 AV.Integers <> y var
R66178:66180 AV.Integers Make shr def
R66184:66184 AV.Integers <> n var
R66182:66182 AV.Integers <> x var
R66199:66201 AV.Integers Make shr def
R66212:66212 AV.Integers <> n var
R66204:66205 AV.Integers Make or def
R66209:66209 AV.Integers <> y var
R66207:66207 AV.Integers <> x var
R66261:66263 Coq.Init.Datatypes <> orb def
R66238:66254 AV.Integers Make bitwise_binop_shr thm
R66261:66263 Coq.Init.Datatypes <> orb def
R66238:66254 AV.Integers Make bitwise_binop_shr thm
R66272:66278 AV.Integers Make bits_or thm
R66272:66278 AV.Integers Make bits_or thm
prf 66295:66301 Make xor_shr
R66345:66347 Coq.Init.Logic <> :type_scope:x_'='_x not
R66322:66324 AV.Integers Make xor def
R66337:66339 AV.Integers Make shr def
R66343:66343 AV.Integers <> n var
R66341:66341 AV.Integers <> y var
R66327:66329 AV.Integers Make shr def
R66333:66333 AV.Integers <> n var
R66331:66331 AV.Integers <> x var
R66348:66350 AV.Integers Make shr def
R66362:66362 AV.Integers <> n var
R66353:66355 AV.Integers Make xor def
R66359:66359 AV.Integers <> y var
R66357:66357 AV.Integers <> x var
R66411:66414 Coq.Init.Datatypes <> xorb def
R66388:66404 AV.Integers Make bitwise_binop_shr thm
R66411:66414 Coq.Init.Datatypes <> xorb def
R66388:66404 AV.Integers Make bitwise_binop_shr thm
R66423:66430 AV.Integers Make bits_xor thm
R66423:66430 AV.Integers Make bits_xor thm
prf 66447:66453 Make shr_shr
R66496:66501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R66524:66529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R66560:66565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R66581:66583 Coq.Init.Logic <> :type_scope:x_'='_x not
R66566:66568 AV.Integers Make shr def
R66580:66580 AV.Integers <> z var
R66571:66573 AV.Integers Make shr def
R66577:66577 AV.Integers <> y var
R66575:66575 AV.Integers <> x var
R66584:66586 AV.Integers Make shr def
R66591:66593 AV.Integers Make add def
R66597:66597 AV.Integers <> z var
R66595:66595 AV.Integers <> y var
R66588:66588 AV.Integers <> x var
R66553:66555 Coq.Init.Logic <> :type_scope:x_'='_x not
R66530:66532 AV.Integers Make ltu def
R66544:66552 AV.Integers Make iwordsize def
R66535:66537 AV.Integers Make add def
R66541:66541 AV.Integers <> z var
R66539:66539 AV.Integers <> y var
R66556:66559 Coq.Init.Datatypes <> true constr
R66517:66519 Coq.Init.Logic <> :type_scope:x_'='_x not
R66502:66504 AV.Integers Make ltu def
R66508:66516 AV.Integers Make iwordsize def
R66506:66506 AV.Integers <> z var
R66520:66523 Coq.Init.Datatypes <> true constr
R66489:66491 Coq.Init.Logic <> :type_scope:x_'='_x not
R66474:66476 AV.Integers Make ltu def
R66480:66488 AV.Integers Make iwordsize def
R66478:66478 AV.Integers <> y var
R66492:66495 Coq.Init.Datatypes <> true constr
R66632:66648 AV.Integers Make ltu_iwordsize_inv thm
R66656:66672 AV.Integers Make ltu_iwordsize_inv thm
R66632:66648 AV.Integers Make ltu_iwordsize_inv thm
R66656:66672 AV.Integers Make ltu_iwordsize_inv thm
R66717:66719 Coq.Init.Logic <> :type_scope:x_'='_x not
R66699:66706 AV.Integers Make unsigned def
R66709:66711 AV.Integers Make add def
R66730:66732 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66720:66727 AV.Integers Make unsigned def
R66733:66740 AV.Integers Make unsigned def
R66717:66719 Coq.Init.Logic <> :type_scope:x_'='_x not
R66699:66706 AV.Integers Make unsigned def
R66709:66711 AV.Integers Make add def
R66730:66732 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66720:66727 AV.Integers Make unsigned def
R66733:66740 AV.Integers Make unsigned def
R66757:66759 AV.Integers Make add def
R66768:66780 AV.Integers Make unsigned_repr thm
R66768:66780 AV.Integers Make unsigned_repr thm
R66798:66822 AV.Integers Make two_wordsize_max_unsigned thm
R66798:66822 AV.Integers Make two_wordsize_max_unsigned thm
R66840:66851 AV.Integers Make same_bits_eq thm
R66840:66851 AV.Integers Make same_bits_eq thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66873:66880 AV.Integers Make bits_shr thm
R66910:66912 AV.Coqlib <> zlt def
R66931:66939 AV.Integers Make zwordsize def
R66916:66918 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66919:66926 AV.Integers Make unsigned def
R66910:66912 AV.Coqlib <> zlt def
R66931:66939 AV.Integers Make zwordsize def
R66916:66918 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66919:66926 AV.Integers Make unsigned def
R66967:66970 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66994:66994 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66981:66983 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66971:66978 AV.Integers Make unsigned def
R66984:66991 AV.Integers Make unsigned def
R67017:67019 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67004:67006 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67007:67014 AV.Integers Make unsigned def
R67020:67027 AV.Integers Make unsigned def
R66967:66970 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66994:66994 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66981:66983 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66971:66978 AV.Integers Make unsigned def
R66984:66991 AV.Integers Make unsigned def
R67017:67019 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67004:67006 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67007:67014 AV.Integers Make unsigned def
R67020:67027 AV.Integers Make unsigned def
R67059:67067 AV.Coqlib <> zlt_false thm
R67073:67075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67076:67083 AV.Integers Make unsigned def
R67086:67088 AV.Integers Make add def
R67059:67067 AV.Coqlib <> zlt_false thm
R67073:67075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67076:67083 AV.Integers Make unsigned def
R67086:67088 AV.Integers Make add def
R67059:67067 AV.Coqlib <> zlt_false thm
R67073:67075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67076:67083 AV.Integers Make unsigned def
R67086:67088 AV.Integers Make add def
R67059:67067 AV.Coqlib <> zlt_false thm
R67073:67075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67076:67083 AV.Integers Make unsigned def
R67086:67088 AV.Integers Make add def
R67110:67112 AV.Coqlib <> zlt def
R67143:67151 AV.Integers Make zwordsize def
R67128:67130 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67124:67126 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67115:67123 AV.Integers Make zwordsize def
R67131:67138 AV.Integers Make unsigned def
R67110:67112 AV.Coqlib <> zlt def
R67143:67151 AV.Integers Make zwordsize def
R67128:67130 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67124:67126 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67115:67123 AV.Integers Make zwordsize def
R67131:67138 AV.Integers Make unsigned def
R67183:67185 AV.Coqlib <> zlt def
R67204:67212 AV.Integers Make zwordsize def
R67189:67191 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67192:67199 AV.Integers Make unsigned def
R67183:67185 AV.Coqlib <> zlt def
R67204:67212 AV.Integers Make zwordsize def
R67189:67191 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67192:67199 AV.Integers Make unsigned def
prf 67237:67248 Make and_shr_shru
R67293:67295 Coq.Init.Logic <> :type_scope:x_'='_x not
R67269:67271 AV.Integers Make and def
R67284:67287 AV.Integers Make shru def
R67291:67291 AV.Integers <> z var
R67289:67289 AV.Integers <> y var
R67274:67276 AV.Integers Make shr def
R67280:67280 AV.Integers <> z var
R67278:67278 AV.Integers <> x var
R67296:67299 AV.Integers Make shru def
R67311:67311 AV.Integers <> z var
R67302:67304 AV.Integers Make and def
R67308:67308 AV.Integers <> y var
R67306:67306 AV.Integers <> x var
R67337:67348 AV.Integers Make same_bits_eq thm
R67337:67348 AV.Integers Make same_bits_eq thm
R67369:67376 AV.Integers Make bits_and thm
R67369:67376 AV.Integers Make bits_and thm
R67369:67376 AV.Integers Make bits_and thm
R67369:67376 AV.Integers Make bits_and thm
R67393:67400 AV.Integers Make bits_shr thm
R67393:67400 AV.Integers Make bits_shr thm
R67393:67400 AV.Integers Make bits_shr thm
R67393:67400 AV.Integers Make bits_shr thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67418:67426 AV.Integers Make bits_shru thm
R67447:67449 AV.Coqlib <> zlt def
R67468:67476 AV.Integers Make zwordsize def
R67453:67455 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67456:67463 AV.Integers Make unsigned def
R67447:67449 AV.Coqlib <> zlt def
R67468:67476 AV.Integers Make zwordsize def
R67453:67455 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67456:67463 AV.Integers Make unsigned def
R67492:67499 AV.Integers Make bits_and thm
R67492:67499 AV.Integers Make bits_and thm
R67492:67499 AV.Integers Make bits_and thm
R67492:67499 AV.Integers Make bits_and thm
R67520:67533 AV.Integers Make unsigned_range thm
R67520:67533 AV.Integers Make unsigned_range thm
R67556:67567 Coq.Bool.Bool <> andb_false_r thm
R67556:67567 Coq.Bool.Bool <> andb_false_r thm
prf 67584:67599 Make shr_and_shru_and
R67640:67645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67661:67663 Coq.Init.Logic <> :type_scope:x_'='_x not
R67646:67648 AV.Integers Make and def
R67660:67660 AV.Integers <> z var
R67651:67653 AV.Integers Make shr def
R67657:67657 AV.Integers <> y var
R67655:67655 AV.Integers <> x var
R67664:67666 AV.Integers Make and def
R67679:67679 AV.Integers <> z var
R67669:67672 AV.Integers Make shru def
R67676:67676 AV.Integers <> y var
R67674:67674 AV.Integers <> x var
R67636:67638 Coq.Init.Logic <> :type_scope:x_'='_x not
R67620:67623 AV.Integers Make shru def
R67635:67635 AV.Integers <> y var
R67626:67628 AV.Integers Make shl def
R67632:67632 AV.Integers <> y var
R67630:67630 AV.Integers <> z var
R67639:67639 AV.Integers <> z var
R67725:67732 AV.Integers Make and_shru thm
R67725:67732 AV.Integers Make and_shru thm
R67725:67732 AV.Integers Make and_shru thm
R67743:67754 AV.Integers Make and_shr_shru thm
R67743:67754 AV.Integers Make and_shr_shru thm
R67743:67754 AV.Integers Make and_shr_shru thm
prf 67777:67788 Make shru_lt_zero
R67834:67836 Coq.Init.Logic <> :type_scope:x_'='_x not
R67805:67808 AV.Integers Make shru def
R67813:67816 AV.Integers Make repr def
R67828:67830 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67819:67827 AV.Integers Make zwordsize def
R67810:67810 AV.Integers <> x var
R67840:67841 AV.Integers Make lt def
R67845:67848 AV.Integers Make zero def
R67843:67843 AV.Integers <> x var
R67864:67867 AV.Integers Make zero def
R67855:67857 AV.Integers Make one def
R67893:67904 AV.Integers Make same_bits_eq thm
R67893:67904 AV.Integers Make same_bits_eq thm
R67925:67933 AV.Integers Make bits_shru thm
R67925:67933 AV.Integers Make bits_shru thm
R67925:67933 AV.Integers Make bits_shru thm
R67925:67933 AV.Integers Make bits_shru thm
R67952:67964 AV.Integers Make unsigned_repr thm
R67952:67964 AV.Integers Make unsigned_repr thm
R67952:67964 AV.Integers Make unsigned_repr thm
R67952:67964 AV.Integers Make unsigned_repr thm
R67979:67981 AV.Coqlib <> zeq def
R67979:67981 AV.Coqlib <> zeq def
R68008:68016 Coq.ZArith.BinInt Z add_0_l thm
R68008:68016 Coq.ZArith.BinInt Z add_0_l thm
R68008:68016 Coq.ZArith.BinInt Z add_0_l thm
R68027:68034 AV.Coqlib <> zlt_true thm
R68027:68034 AV.Coqlib <> zlt_true thm
R68027:68034 AV.Coqlib <> zlt_true thm
R68027:68034 AV.Coqlib <> zlt_true thm
R68047:68066 AV.Integers Make sign_bit_of_unsigned thm
R68047:68066 AV.Integers Make sign_bit_of_unsigned thm
R68047:68066 AV.Integers Make sign_bit_of_unsigned thm
R68078:68079 AV.Integers Make lt def
R68090:68100 AV.Integers Make signed_zero thm
R68090:68100 AV.Integers Make signed_zero thm
R68090:68100 AV.Integers Make signed_zero thm
R68110:68115 AV.Integers Make signed def
R68130:68132 AV.Coqlib <> zlt def
R68147:68158 AV.Integers Make half_modulus def
R68135:68142 AV.Integers Make unsigned def
R68130:68132 AV.Coqlib <> zlt def
R68147:68158 AV.Integers Make half_modulus def
R68135:68142 AV.Integers Make unsigned def
R68172:68180 AV.Coqlib <> zlt_false thm
R68172:68180 AV.Coqlib <> zlt_false thm
R68172:68180 AV.Coqlib <> zlt_false thm
R68172:68180 AV.Coqlib <> zlt_false thm
R68201:68214 AV.Integers Make unsigned_range thm
R68201:68214 AV.Integers Make unsigned_range thm
R68237:68244 AV.Coqlib <> zlt_true thm
R68237:68244 AV.Coqlib <> zlt_true thm
R68237:68244 AV.Coqlib <> zlt_true thm
R68237:68244 AV.Coqlib <> zlt_true thm
R68254:68256 AV.Integers Make one def
R68267:68278 AV.Integers Make testbit_repr thm
R68267:68278 AV.Integers Make testbit_repr thm
R68267:68278 AV.Integers Make testbit_repr thm
R68267:68278 AV.Integers Make testbit_repr thm
R68301:68314 AV.Integers Make unsigned_range thm
R68301:68314 AV.Integers Make unsigned_range thm
R68346:68354 AV.Coqlib <> zlt_false thm
R68346:68354 AV.Coqlib <> zlt_false thm
R68346:68354 AV.Coqlib <> zlt_false thm
R68346:68354 AV.Coqlib <> zlt_false thm
R68366:68372 AV.Integers Make testbit def
R68383:68393 AV.Integers Make Ztestbit_eq thm
R68383:68393 AV.Integers Make Ztestbit_eq thm
R68383:68393 AV.Integers Make Ztestbit_eq thm
R68383:68393 AV.Integers Make Ztestbit_eq thm
R68404:68412 AV.Coqlib <> zeq_false thm
R68404:68412 AV.Coqlib <> zeq_false thm
R68404:68412 AV.Coqlib <> zeq_false thm
R68404:68412 AV.Coqlib <> zeq_false thm
R68427:68428 AV.Integers Make lt def
R68432:68435 AV.Integers Make zero def
R68427:68428 AV.Integers Make lt def
R68432:68435 AV.Integers Make zero def
R68449:68460 AV.Integers Make unsigned_one thm
R68449:68460 AV.Integers Make unsigned_one thm
R68449:68460 AV.Integers Make unsigned_one thm
R68485:68497 Coq.ZArith.BinInt Z testbit_0_l thm
R68485:68497 Coq.ZArith.BinInt Z testbit_0_l thm
R68485:68497 Coq.ZArith.BinInt Z testbit_0_l thm
R68516:68528 AV.Integers Make unsigned_zero thm
R68516:68528 AV.Integers Make unsigned_zero thm
R68516:68528 AV.Integers Make unsigned_zero thm
R68553:68565 Coq.ZArith.BinInt Z testbit_0_l thm
R68553:68565 Coq.ZArith.BinInt Z testbit_0_l thm
R68553:68565 Coq.ZArith.BinInt Z testbit_0_l thm
R68609:68629 AV.Integers Make wordsize_max_unsigned thm
R68609:68629 AV.Integers Make wordsize_max_unsigned thm
prf 68653:68663 Make shr_lt_zero
R68708:68710 Coq.Init.Logic <> :type_scope:x_'='_x not
R68680:68682 AV.Integers Make shr def
R68687:68690 AV.Integers Make repr def
R68702:68704 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68693:68701 AV.Integers Make zwordsize def
R68684:68684 AV.Integers <> x var
R68714:68715 AV.Integers Make lt def
R68719:68722 AV.Integers Make zero def
R68717:68717 AV.Integers <> x var
R68739:68742 AV.Integers Make zero def
R68729:68732 AV.Integers Make mone def
R68768:68779 AV.Integers Make same_bits_eq thm
R68768:68779 AV.Integers Make same_bits_eq thm
R68800:68807 AV.Integers Make bits_shr thm
R68800:68807 AV.Integers Make bits_shr thm
R68800:68807 AV.Integers Make bits_shr thm
R68800:68807 AV.Integers Make bits_shr thm
R68826:68838 AV.Integers Make unsigned_repr thm
R68826:68838 AV.Integers Make unsigned_repr thm
R68826:68838 AV.Integers Make unsigned_repr thm
R68826:68838 AV.Integers Make unsigned_repr thm
R68857:68863 AV.Integers Make testbit def
R68877:68879 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68868:68876 AV.Integers Make zwordsize def
R68857:68863 AV.Integers Make testbit def
R68877:68879 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68868:68876 AV.Integers Make zwordsize def
R68906:68908 AV.Coqlib <> zlt def
R68932:68940 AV.Integers Make zwordsize def
R68912:68915 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R68929:68929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R68925:68927 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68916:68924 AV.Integers Make zwordsize def
R68906:68908 AV.Coqlib <> zlt def
R68932:68940 AV.Integers Make zwordsize def
R68912:68915 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R68929:68929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R68925:68927 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68916:68924 AV.Integers Make zwordsize def
R68961:68980 AV.Integers Make sign_bit_of_unsigned thm
R68961:68980 AV.Integers Make sign_bit_of_unsigned thm
R68961:68980 AV.Integers Make sign_bit_of_unsigned thm
R68992:68993 AV.Integers Make lt def
R69004:69014 AV.Integers Make signed_zero thm
R69004:69014 AV.Integers Make signed_zero thm
R69004:69014 AV.Integers Make signed_zero thm
R69024:69029 AV.Integers Make signed def
R69044:69046 AV.Coqlib <> zlt def
R69061:69072 AV.Integers Make half_modulus def
R69049:69056 AV.Integers Make unsigned def
R69044:69046 AV.Coqlib <> zlt def
R69061:69072 AV.Integers Make half_modulus def
R69049:69056 AV.Integers Make unsigned def
R69086:69094 AV.Coqlib <> zlt_false thm
R69086:69094 AV.Coqlib <> zlt_false thm
R69086:69094 AV.Coqlib <> zlt_false thm
R69086:69094 AV.Coqlib <> zlt_false thm
R69105:69113 AV.Integers Make bits_zero thm
R69105:69113 AV.Integers Make bits_zero thm
R69105:69113 AV.Integers Make bits_zero thm
R69134:69147 AV.Integers Make unsigned_range thm
R69134:69147 AV.Integers Make unsigned_range thm
R69170:69177 AV.Coqlib <> zlt_true thm
R69170:69177 AV.Coqlib <> zlt_true thm
R69170:69177 AV.Coqlib <> zlt_true thm
R69170:69177 AV.Coqlib <> zlt_true thm
R69188:69196 AV.Integers Make bits_mone thm
R69188:69196 AV.Integers Make bits_mone thm
R69188:69196 AV.Integers Make bits_mone thm
R69188:69196 AV.Integers Make bits_mone thm
R69217:69230 AV.Integers Make unsigned_range thm
R69217:69230 AV.Integers Make unsigned_range thm
R69256:69276 AV.Integers Make wordsize_max_unsigned thm
R69256:69276 AV.Integers Make wordsize_max_unsigned thm
prf 69333:69340 Make bits_rol
R69379:69384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69404:69406 Coq.Init.Logic <> :type_scope:x_'='_x not
R69385:69391 AV.Integers Make testbit def
R69403:69403 AV.Integers <> i var
R69394:69396 AV.Integers Make rol def
R69400:69400 AV.Integers <> y var
R69398:69398 AV.Integers <> x var
R69407:69413 AV.Integers Make testbit def
R69418:69418 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R69433:69438 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R69420:69422 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69419:69419 AV.Integers <> i var
R69423:69430 AV.Integers Make unsigned def
R69432:69432 AV.Integers <> y var
R69439:69447 AV.Integers Make zwordsize def
R69415:69415 AV.Integers <> x var
R69362:69365 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R69367:69369 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R69366:69366 AV.Integers <> i var
R69366:69366 AV.Integers <> i var
R69370:69378 AV.Integers Make zwordsize def
R69475:69477 AV.Integers Make rol def
R69491:69502 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R69517:69525 AV.Integers Make zwordsize def
R69505:69512 AV.Integers Make unsigned def
R69491:69502 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R69517:69525 AV.Integers Make zwordsize def
R69505:69512 AV.Integers Make unsigned def
R69535:69546 AV.Integers Make wordsize_pos thm
R69535:69546 AV.Integers Make wordsize_pos thm
R69571:69575 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R69561:69568 AV.Integers Make unsigned def
R69576:69584 AV.Integers Make zwordsize def
R69571:69575 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R69561:69568 AV.Integers Make unsigned def
R69576:69584 AV.Integers Make zwordsize def
R69608:69610 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R69598:69605 AV.Integers Make unsigned def
R69611:69619 AV.Integers Make zwordsize def
R69608:69610 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R69598:69605 AV.Integers Make unsigned def
R69611:69619 AV.Integers Make zwordsize def
R69647:69654 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69669:69677 AV.Integers Make zwordsize def
R69657:69664 AV.Integers Make unsigned def
R69647:69654 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69669:69677 AV.Integers Make zwordsize def
R69657:69664 AV.Integers Make unsigned def
R69687:69698 AV.Integers Make wordsize_pos thm
R69687:69698 AV.Integers Make wordsize_pos thm
R69735:69746 AV.Integers Make testbit_repr thm
R69735:69746 AV.Integers Make testbit_repr thm
R69735:69746 AV.Integers Make testbit_repr thm
R69735:69746 AV.Integers Make testbit_repr thm
R69765:69774 Coq.ZArith.BinInt Z lor_spec thm
R69765:69774 Coq.ZArith.BinInt Z lor_spec thm
R69765:69774 Coq.ZArith.BinInt Z lor_spec thm
R69785:69797 Coq.ZArith.BinInt Z shiftr_spec thm
R69785:69797 Coq.ZArith.BinInt Z shiftr_spec thm
R69785:69797 Coq.ZArith.BinInt Z shiftr_spec thm
R69785:69797 Coq.ZArith.BinInt Z shiftr_spec thm
R69822:69824 AV.Coqlib <> zlt def
R69822:69824 AV.Coqlib <> zlt def
R69844:69860 Coq.ZArith.BinInt Z shiftl_spec_low thm
R69844:69860 Coq.ZArith.BinInt Z shiftl_spec_low thm
R69844:69860 Coq.ZArith.BinInt Z shiftl_spec_low thm
R69844:69860 Coq.ZArith.BinInt Z shiftl_spec_low thm
R69887:69893 AV.Integers Make testbit def
R69945:69947 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69943:69943 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R69925:69935 AV.Coqlib <> Zmod_unique thm
R69945:69947 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69943:69943 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R69925:69935 AV.Coqlib <> Zmod_unique thm
R69997:70014 Coq.ZArith.BinInt Z shiftl_spec_high thm
R69997:70014 Coq.ZArith.BinInt Z shiftl_spec_high thm
R69997:70014 Coq.ZArith.BinInt Z shiftl_spec_high thm
R69997:70014 Coq.ZArith.BinInt Z shiftl_spec_high thm
R69997:70014 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70027:70033 AV.Integers Make testbit def
R70039:70042 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70056:70056 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70052:70054 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70043:70051 AV.Integers Make zwordsize def
R70027:70033 AV.Integers Make testbit def
R70039:70042 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70056:70056 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70052:70054 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70043:70051 AV.Integers Make zwordsize def
R70073:70082 AV.Integers Make bits_above thm
R70073:70082 AV.Integers Make bits_above thm
R70073:70082 AV.Integers Make bits_above thm
R70073:70082 AV.Integers Make bits_above thm
R70093:70103 Coq.Bool.Bool <> orb_false_r thm
R70093:70103 Coq.Bool.Bool <> orb_false_r thm
R70093:70103 Coq.Bool.Bool <> orb_false_r thm
R70116:70122 AV.Integers Make testbit def
R70128:70130 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70116:70122 AV.Integers Make testbit def
R70128:70130 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70183:70183 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R70165:70175 AV.Coqlib <> Zmod_unique thm
R70183:70183 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R70165:70175 AV.Coqlib <> Zmod_unique thm
prf 70254:70261 Make bits_ror
R70300:70305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70325:70327 Coq.Init.Logic <> :type_scope:x_'='_x not
R70306:70312 AV.Integers Make testbit def
R70324:70324 AV.Integers <> i var
R70315:70317 AV.Integers Make ror def
R70321:70321 AV.Integers <> y var
R70319:70319 AV.Integers <> x var
R70328:70334 AV.Integers Make testbit def
R70339:70339 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R70354:70359 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R70341:70343 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70340:70340 AV.Integers <> i var
R70344:70351 AV.Integers Make unsigned def
R70353:70353 AV.Integers <> y var
R70360:70368 AV.Integers Make zwordsize def
R70336:70336 AV.Integers <> x var
R70283:70286 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70288:70290 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70287:70287 AV.Integers <> i var
R70287:70287 AV.Integers <> i var
R70291:70299 AV.Integers Make zwordsize def
R70396:70398 AV.Integers Make ror def
R70412:70423 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R70438:70446 AV.Integers Make zwordsize def
R70426:70433 AV.Integers Make unsigned def
R70412:70423 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R70438:70446 AV.Integers Make zwordsize def
R70426:70433 AV.Integers Make unsigned def
R70456:70467 AV.Integers Make wordsize_pos thm
R70456:70467 AV.Integers Make wordsize_pos thm
R70492:70496 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R70482:70489 AV.Integers Make unsigned def
R70497:70505 AV.Integers Make zwordsize def
R70492:70496 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R70482:70489 AV.Integers Make unsigned def
R70497:70505 AV.Integers Make zwordsize def
R70529:70531 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R70519:70526 AV.Integers Make unsigned def
R70532:70540 AV.Integers Make zwordsize def
R70529:70531 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R70519:70526 AV.Integers Make unsigned def
R70532:70540 AV.Integers Make zwordsize def
R70568:70575 Coq.ZArith.Zdiv <> Z_mod_lt thm
R70590:70598 AV.Integers Make zwordsize def
R70578:70585 AV.Integers Make unsigned def
R70568:70575 Coq.ZArith.Zdiv <> Z_mod_lt thm
R70590:70598 AV.Integers Make zwordsize def
R70578:70585 AV.Integers Make unsigned def
R70608:70619 AV.Integers Make wordsize_pos thm
R70608:70619 AV.Integers Make wordsize_pos thm
R70656:70667 AV.Integers Make testbit_repr thm
R70656:70667 AV.Integers Make testbit_repr thm
R70656:70667 AV.Integers Make testbit_repr thm
R70656:70667 AV.Integers Make testbit_repr thm
R70686:70695 Coq.ZArith.BinInt Z lor_spec thm
R70686:70695 Coq.ZArith.BinInt Z lor_spec thm
R70686:70695 Coq.ZArith.BinInt Z lor_spec thm
R70706:70718 Coq.ZArith.BinInt Z shiftr_spec thm
R70706:70718 Coq.ZArith.BinInt Z shiftr_spec thm
R70706:70718 Coq.ZArith.BinInt Z shiftr_spec thm
R70706:70718 Coq.ZArith.BinInt Z shiftr_spec thm
R70743:70745 AV.Coqlib <> zlt def
R70755:70763 AV.Integers Make zwordsize def
R70749:70751 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70743:70745 AV.Coqlib <> zlt def
R70755:70763 AV.Integers Make zwordsize def
R70749:70751 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70779:70795 Coq.ZArith.BinInt Z shiftl_spec_low thm
R70779:70795 Coq.ZArith.BinInt Z shiftl_spec_low thm
R70779:70795 Coq.ZArith.BinInt Z shiftl_spec_low thm
R70779:70795 Coq.ZArith.BinInt Z shiftl_spec_low thm
R70812:70822 Coq.Bool.Bool <> orb_false_r thm
R70812:70822 Coq.Bool.Bool <> orb_false_r thm
R70812:70822 Coq.Bool.Bool <> orb_false_r thm
R70836:70842 AV.Integers Make testbit def
R70874:70884 AV.Coqlib <> Zmod_unique thm
R70874:70884 AV.Coqlib <> Zmod_unique thm
R70946:70963 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70946:70963 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70946:70963 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70946:70963 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70946:70963 Coq.ZArith.BinInt Z shiftl_spec_high thm
R70976:70982 AV.Integers Make testbit def
R70988:70990 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R70976:70982 AV.Integers Make testbit def
R70988:70990 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R71008:71017 AV.Integers Make bits_above thm
R71008:71017 AV.Integers Make bits_above thm
R71008:71017 AV.Integers Make bits_above thm
R71008:71017 AV.Integers Make bits_above thm
R71038:71044 AV.Integers Make testbit def
R71095:71097 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R71076:71086 AV.Coqlib <> Zmod_unique thm
R71095:71097 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R71076:71086 AV.Coqlib <> Zmod_unique thm
R71175:71182 AV.Integers Make bits_rol thm
R71184:71191 AV.Integers Make bits_ror thm
prf 71209:71216 Make shl_rolm
R71257:71262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71270:71272 Coq.Init.Logic <> :type_scope:x_'='_x not
R71263:71265 AV.Integers Make shl def
R71269:71269 AV.Integers <> n var
R71267:71267 AV.Integers <> x var
R71273:71276 AV.Integers Make rolm def
R71283:71285 AV.Integers Make shl def
R71292:71292 AV.Integers <> n var
R71287:71290 AV.Integers Make mone def
R71280:71280 AV.Integers <> n var
R71278:71278 AV.Integers <> x var
R71250:71252 Coq.Init.Logic <> :type_scope:x_'='_x not
R71235:71237 AV.Integers Make ltu def
R71241:71249 AV.Integers Make iwordsize def
R71239:71239 AV.Integers <> n var
R71253:71256 Coq.Init.Datatypes <> true constr
R71325:71331 AV.Integers Make ltu_inv thm
R71325:71331 AV.Integers Make ltu_inv thm
R71349:71370 AV.Integers Make unsigned_repr_wordsize thm
R71349:71370 AV.Integers Make unsigned_repr_wordsize thm
R71349:71370 AV.Integers Make unsigned_repr_wordsize thm
R71390:71393 AV.Integers Make rolm def
R71402:71413 AV.Integers Make same_bits_eq thm
R71402:71413 AV.Integers Make same_bits_eq thm
R71434:71441 AV.Integers Make bits_and thm
R71434:71441 AV.Integers Make bits_and thm
R71434:71441 AV.Integers Make bits_and thm
R71434:71441 AV.Integers Make bits_and thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71459:71466 AV.Integers Make bits_shl thm
R71483:71490 AV.Integers Make bits_rol thm
R71483:71490 AV.Integers Make bits_rol thm
R71483:71490 AV.Integers Make bits_rol thm
R71483:71490 AV.Integers Make bits_rol thm
R71511:71513 AV.Coqlib <> zlt def
R71518:71525 AV.Integers Make unsigned def
R71511:71513 AV.Coqlib <> zlt def
R71518:71525 AV.Integers Make unsigned def
R71544:71555 Coq.Bool.Bool <> andb_false_r thm
R71544:71555 Coq.Bool.Bool <> andb_false_r thm
R71544:71555 Coq.Bool.Bool <> andb_false_r thm
R71580:71593 AV.Integers Make unsigned_range thm
R71580:71593 AV.Integers Make unsigned_range thm
R71619:71627 AV.Integers Make bits_mone thm
R71619:71627 AV.Integers Make bits_mone thm
R71619:71627 AV.Integers Make bits_mone thm
R71619:71627 AV.Integers Make bits_mone thm
R71638:71648 Coq.Bool.Bool <> andb_true_r thm
R71638:71648 Coq.Bool.Bool <> andb_true_r thm
R71638:71648 Coq.Bool.Bool <> andb_true_r thm
R71680:71689 AV.Coqlib <> Zmod_small thm
R71680:71689 AV.Coqlib <> Zmod_small thm
prf 71724:71732 Make shru_rolm
R71773:71778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71787:71789 Coq.Init.Logic <> :type_scope:x_'='_x not
R71779:71782 AV.Integers Make shru def
R71786:71786 AV.Integers <> n var
R71784:71784 AV.Integers <> x var
R71790:71793 AV.Integers Make rolm def
R71816:71819 AV.Integers Make shru def
R71826:71826 AV.Integers <> n var
R71821:71824 AV.Integers Make mone def
R71798:71800 AV.Integers Make sub def
R71812:71812 AV.Integers <> n var
R71802:71810 AV.Integers Make iwordsize def
R71795:71795 AV.Integers <> x var
R71766:71768 Coq.Init.Logic <> :type_scope:x_'='_x not
R71751:71753 AV.Integers Make ltu def
R71757:71765 AV.Integers Make iwordsize def
R71755:71755 AV.Integers <> n var
R71769:71772 Coq.Init.Datatypes <> true constr
R71859:71865 AV.Integers Make ltu_inv thm
R71859:71865 AV.Integers Make ltu_inv thm
R71883:71904 AV.Integers Make unsigned_repr_wordsize thm
R71883:71904 AV.Integers Make unsigned_repr_wordsize thm
R71883:71904 AV.Integers Make unsigned_repr_wordsize thm
R71924:71927 AV.Integers Make rolm def
R71936:71947 AV.Integers Make same_bits_eq thm
R71936:71947 AV.Integers Make same_bits_eq thm
R71968:71975 AV.Integers Make bits_and thm
R71968:71975 AV.Integers Make bits_and thm
R71968:71975 AV.Integers Make bits_and thm
R71968:71975 AV.Integers Make bits_and thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R71993:72001 AV.Integers Make bits_shru thm
R72018:72025 AV.Integers Make bits_rol thm
R72018:72025 AV.Integers Make bits_rol thm
R72018:72025 AV.Integers Make bits_rol thm
R72018:72025 AV.Integers Make bits_rol thm
R72046:72048 AV.Coqlib <> zlt def
R72067:72075 AV.Integers Make zwordsize def
R72052:72054 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72055:72062 AV.Integers Make unsigned def
R72046:72048 AV.Coqlib <> zlt def
R72067:72075 AV.Integers Make zwordsize def
R72052:72054 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72055:72062 AV.Integers Make unsigned def
R72095:72108 AV.Integers Make unsigned_range thm
R72095:72108 AV.Integers Make unsigned_range thm
R72134:72142 AV.Integers Make bits_mone thm
R72134:72142 AV.Integers Make bits_mone thm
R72134:72142 AV.Integers Make bits_mone thm
R72134:72142 AV.Integers Make bits_mone thm
R72153:72163 Coq.Bool.Bool <> andb_true_r thm
R72153:72163 Coq.Bool.Bool <> andb_true_r thm
R72153:72163 Coq.Bool.Bool <> andb_true_r thm
R72186:72188 AV.Integers Make sub def
R72199:72211 AV.Integers Make unsigned_repr thm
R72199:72211 AV.Integers Make unsigned_repr thm
R72199:72211 AV.Integers Make unsigned_repr thm
R72199:72211 AV.Integers Make unsigned_repr thm
R72222:72243 AV.Integers Make unsigned_repr_wordsize thm
R72222:72243 AV.Integers Make unsigned_repr_wordsize thm
R72222:72243 AV.Integers Make unsigned_repr_wordsize thm
R72266:72276 AV.Coqlib <> Zmod_unique thm
R72266:72276 AV.Coqlib <> Zmod_unique thm
R72314:72335 AV.Integers Make unsigned_repr_wordsize thm
R72314:72335 AV.Integers Make unsigned_repr_wordsize thm
R72314:72335 AV.Integers Make unsigned_repr_wordsize thm
R72349:72369 AV.Integers Make wordsize_max_unsigned thm
R72349:72369 AV.Integers Make wordsize_max_unsigned thm
R72402:72413 Coq.Bool.Bool <> andb_false_r thm
R72402:72413 Coq.Bool.Bool <> andb_false_r thm
R72402:72413 Coq.Bool.Bool <> andb_false_r thm
prf 72436:72443 Make rol_zero
R72470:72472 Coq.Init.Logic <> :type_scope:x_'='_x not
R72460:72462 AV.Integers Make rol def
R72466:72469 AV.Integers Make zero def
R72464:72464 AV.Integers <> x var
R72473:72473 AV.Integers <> x var
R72513:72525 AV.Integers Make unsigned_zero thm
R72513:72525 AV.Integers Make unsigned_zero thm
R72513:72525 AV.Integers Make unsigned_zero thm
R72536:72544 Coq.ZArith.BinInt Z sub_0_r thm
R72536:72544 Coq.ZArith.BinInt Z sub_0_r thm
R72536:72544 Coq.ZArith.BinInt Z sub_0_r thm
R72555:72564 AV.Coqlib <> Zmod_small thm
R72555:72564 AV.Coqlib <> Zmod_small thm
prf 72585:72601 Make bitwise_binop_rol
R72627:72627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72714:72720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72734:72736 Coq.Init.Logic <> :type_scope:x_'='_x not
R72721:72723 AV.Integers Make rol def
R72733:72733 AV.Integers <> n var
R72726:72726 AV.Integers <> f var
R72730:72730 AV.Integers <> y var
R72728:72728 AV.Integers <> x var
R72737:72737 AV.Integers <> f var
R72750:72752 AV.Integers Make rol def
R72756:72756 AV.Integers <> n var
R72754:72754 AV.Integers <> y var
R72740:72742 AV.Integers Make rol def
R72746:72746 AV.Integers <> n var
R72744:72744 AV.Integers <> x var
R72660:72663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72681:72683 Coq.Init.Logic <> :type_scope:x_'='_x not
R72664:72670 AV.Integers Make testbit def
R72680:72680 AV.Integers <> i var
R72673:72673 AV.Integers <> f var
R72677:72677 AV.Integers <> y var
R72675:72675 AV.Integers <> x var
R72684:72685 AV.Integers <> f' var
R72702:72708 AV.Integers Make testbit def
R72712:72712 AV.Integers <> i var
R72710:72710 AV.Integers <> y var
R72688:72694 AV.Integers Make testbit def
R72698:72698 AV.Integers <> i var
R72696:72696 AV.Integers <> x var
R72643:72646 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72648:72650 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72647:72647 AV.Integers <> i var
R72647:72647 AV.Integers <> i var
R72651:72659 AV.Integers Make zwordsize def
R72783:72794 AV.Integers Make same_bits_eq thm
R72783:72794 AV.Integers Make same_bits_eq thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72833:72840 AV.Integers Make bits_rol thm
R72874:72881 Coq.ZArith.Zdiv <> Z_mod_lt thm
R72874:72881 Coq.ZArith.Zdiv <> Z_mod_lt thm
R72890:72901 AV.Integers Make wordsize_pos thm
R72890:72901 AV.Integers Make wordsize_pos thm
prf 72918:72924 Make rol_and
R72960:72962 Coq.Init.Logic <> :type_scope:x_'='_x not
R72945:72947 AV.Integers Make rol def
R72959:72959 AV.Integers <> n var
R72950:72952 AV.Integers Make and def
R72956:72956 AV.Integers <> y var
R72954:72954 AV.Integers <> x var
R72963:72965 AV.Integers Make and def
R72978:72980 AV.Integers Make rol def
R72984:72984 AV.Integers <> n var
R72982:72982 AV.Integers <> y var
R72968:72970 AV.Integers Make rol def
R72974:72974 AV.Integers <> n var
R72972:72972 AV.Integers <> x var
R73034:73037 Coq.Init.Datatypes <> andb def
R73011:73027 AV.Integers Make bitwise_binop_rol thm
R73034:73037 Coq.Init.Datatypes <> andb def
R73011:73027 AV.Integers Make bitwise_binop_rol thm
R73046:73053 AV.Integers Make bits_and thm
R73046:73053 AV.Integers Make bits_and thm
prf 73070:73075 Make rol_or
R73110:73112 Coq.Init.Logic <> :type_scope:x_'='_x not
R73096:73098 AV.Integers Make rol def
R73109:73109 AV.Integers <> n var
R73101:73102 AV.Integers Make or def
R73106:73106 AV.Integers <> y var
R73104:73104 AV.Integers <> x var
R73113:73114 AV.Integers Make or def
R73127:73129 AV.Integers Make rol def
R73133:73133 AV.Integers <> n var
R73131:73131 AV.Integers <> y var
R73117:73119 AV.Integers Make rol def
R73123:73123 AV.Integers <> n var
R73121:73121 AV.Integers <> x var
R73183:73185 Coq.Init.Datatypes <> orb def
R73160:73176 AV.Integers Make bitwise_binop_rol thm
R73183:73185 Coq.Init.Datatypes <> orb def
R73160:73176 AV.Integers Make bitwise_binop_rol thm
R73194:73200 AV.Integers Make bits_or thm
R73194:73200 AV.Integers Make bits_or thm
prf 73217:73223 Make rol_xor
R73259:73261 Coq.Init.Logic <> :type_scope:x_'='_x not
R73244:73246 AV.Integers Make rol def
R73258:73258 AV.Integers <> n var
R73249:73251 AV.Integers Make xor def
R73255:73255 AV.Integers <> y var
R73253:73253 AV.Integers <> x var
R73262:73264 AV.Integers Make xor def
R73277:73279 AV.Integers Make rol def
R73283:73283 AV.Integers <> n var
R73281:73281 AV.Integers <> y var
R73267:73269 AV.Integers Make rol def
R73273:73273 AV.Integers <> n var
R73271:73271 AV.Integers <> x var
R73333:73336 Coq.Init.Datatypes <> xorb def
R73310:73326 AV.Integers Make bitwise_binop_rol thm
R73333:73336 Coq.Init.Datatypes <> xorb def
R73310:73326 AV.Integers Make bitwise_binop_rol thm
R73345:73352 AV.Integers Make bits_xor thm
R73345:73352 AV.Integers Make bits_xor thm
prf 73369:73375 Make rol_rol
R73422:73427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73443:73445 Coq.Init.Logic <> :type_scope:x_'='_x not
R73428:73430 AV.Integers Make rol def
R73442:73442 AV.Integers <> m var
R73433:73435 AV.Integers Make rol def
R73439:73439 AV.Integers <> n var
R73437:73437 AV.Integers <> x var
R73446:73448 AV.Integers Make rol def
R73453:73456 AV.Integers Make modu def
R73468:73476 AV.Integers Make iwordsize def
R73459:73461 AV.Integers Make add def
R73465:73465 AV.Integers <> m var
R73463:73463 AV.Integers <> n var
R73450:73450 AV.Integers <> x var
R73396:73403 Coq.ZArith.BinInt Z divide def
R73415:73421 AV.Integers Make modulus def
R73405:73413 AV.Integers Make zwordsize def
R73515:73526 AV.Integers Make eqmod_mod_eq thm
R73515:73526 AV.Integers Make eqmod_mod_eq thm
R73535:73546 AV.Integers Make wordsize_pos thm
R73535:73546 AV.Integers Make wordsize_pos thm
R73561:73568 AV.Integers Make unsigned def
R73584:73591 AV.Integers Make unsigned def
R73561:73568 AV.Integers Make unsigned def
R73584:73591 AV.Integers Make unsigned def
R73628:73630 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73624:73626 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73605:73615 AV.Integers Make eqmod_trans thm
R73628:73630 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73624:73626 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73605:73615 AV.Integers Make eqmod_trans thm
R73643:73651 AV.Integers Make eqmod_sub thm
R73643:73651 AV.Integers Make eqmod_sub thm
R73662:73670 AV.Integers Make eqmod_sym thm
R73662:73670 AV.Integers Make eqmod_sym thm
R73679:73687 AV.Integers Make eqmod_mod thm
R73679:73687 AV.Integers Make eqmod_mod thm
R73696:73707 AV.Integers Make wordsize_pos thm
R73696:73707 AV.Integers Make wordsize_pos thm
R73718:73727 AV.Integers Make eqmod_refl thm
R73718:73727 AV.Integers Make eqmod_refl thm
R73746:73748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73742:73744 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73759:73762 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73768:73768 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73764:73766 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73746:73748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73742:73744 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73759:73762 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73768:73768 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R73764:73766 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73789:73797 AV.Integers Make eqmod_sub thm
R73789:73797 AV.Integers Make eqmod_sub thm
R73808:73817 AV.Integers Make eqmod_refl thm
R73808:73817 AV.Integers Make eqmod_refl thm
R73846:73853 Coq.ZArith.BinInt Z modulo def
R73881:73889 AV.Integers Make zwordsize def
R73866:73868 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73856:73863 AV.Integers Make unsigned def
R73869:73876 AV.Integers Make unsigned def
R73828:73838 AV.Integers Make eqmod_trans thm
R73846:73853 Coq.ZArith.BinInt Z modulo def
R73881:73889 AV.Integers Make zwordsize def
R73866:73868 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73856:73863 AV.Integers Make unsigned def
R73869:73876 AV.Integers Make unsigned def
R73828:73838 AV.Integers Make eqmod_trans thm
R73905:73907 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73918:73920 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73905:73907 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73918:73920 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73940:73948 AV.Integers Make eqmod_mod thm
R73940:73948 AV.Integers Make eqmod_mod thm
R73957:73968 AV.Integers Make wordsize_pos thm
R73957:73968 AV.Integers Make wordsize_pos thm
R73980:73983 AV.Integers Make modu def
R73986:73988 AV.Integers Make add def
R74015:74036 AV.Integers Make unsigned_repr_wordsize thm
R74015:74036 AV.Integers Make unsigned_repr_wordsize thm
R74015:74036 AV.Integers Make unsigned_repr_wordsize thm
R74059:74063 AV.Integers Make eqmod def
R74078:74085 AV.Integers Make unsigned def
R74088:74091 AV.Integers Make repr def
R74093:74093 AV.Integers <> a var
R74075:74075 AV.Integers <> a var
R74065:74073 AV.Integers Make zwordsize def
R74059:74063 AV.Integers Make eqmod def
R74078:74085 AV.Integers Make unsigned def
R74088:74091 AV.Integers Make repr def
R74093:74093 AV.Integers <> a var
R74075:74075 AV.Integers <> a var
R74065:74073 AV.Integers Make zwordsize def
R74118:74130 AV.Integers Make eqmod_divides thm
R74118:74130 AV.Integers Make eqmod_divides thm
R74139:74155 AV.Integers Make eqm_unsigned_repr thm
R74139:74155 AV.Integers Make eqm_unsigned_repr thm
R74179:74189 AV.Integers Make eqmod_trans thm
R74179:74189 AV.Integers Make eqmod_trans thm
R74213:74223 AV.Integers Make eqmod_refl2 thm
R74213:74223 AV.Integers Make eqmod_refl2 thm
R74232:74243 AV.Integers Make eqmod_mod_eq thm
R74232:74243 AV.Integers Make eqmod_mod_eq thm
R74252:74263 AV.Integers Make wordsize_pos thm
R74252:74263 AV.Integers Make wordsize_pos thm
R74280:74287 Coq.ZArith.Zdiv <> Z_mod_lt thm
R74280:74287 Coq.ZArith.Zdiv <> Z_mod_lt thm
R74296:74307 AV.Integers Make wordsize_pos thm
R74296:74307 AV.Integers Make wordsize_pos thm
prf 74324:74332 Make rolm_zero
R74364:74366 Coq.Init.Logic <> :type_scope:x_'='_x not
R74351:74354 AV.Integers Make rolm def
R74363:74363 AV.Integers <> m var
R74358:74361 AV.Integers Make zero def
R74356:74356 AV.Integers <> x var
R74367:74369 AV.Integers Make and def
R74373:74373 AV.Integers <> m var
R74371:74371 AV.Integers <> x var
R74400:74403 AV.Integers Make rolm def
R74414:74421 AV.Integers Make rol_zero thm
R74414:74421 AV.Integers Make rol_zero thm
R74414:74421 AV.Integers Make rol_zero thm
prf 74444:74452 Make rolm_rolm
R74507:74512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74538:74544 Coq.Init.Logic <> :type_scope:x_'='_x not
R74513:74516 AV.Integers Make rolm def
R74536:74537 AV.Integers <> m2 var
R74533:74534 AV.Integers <> n2 var
R74519:74522 AV.Integers Make rolm def
R74529:74530 AV.Integers <> m1 var
R74526:74527 AV.Integers <> n1 var
R74524:74524 AV.Integers <> x var
R74545:74548 AV.Integers Make rolm def
R74593:74595 AV.Integers Make and def
R74609:74610 AV.Integers <> m2 var
R74598:74600 AV.Integers Make rol def
R74605:74606 AV.Integers <> n2 var
R74602:74603 AV.Integers <> m1 var
R74553:74556 AV.Integers Make modu def
R74570:74578 AV.Integers Make iwordsize def
R74559:74561 AV.Integers Make add def
R74566:74567 AV.Integers <> n2 var
R74563:74564 AV.Integers <> n1 var
R74550:74550 AV.Integers <> x var
R74481:74488 Coq.ZArith.BinInt Z divide def
R74500:74506 AV.Integers Make modulus def
R74490:74498 AV.Integers Make zwordsize def
R74640:74643 AV.Integers Make rolm def
R74654:74660 AV.Integers Make rol_and thm
R74654:74660 AV.Integers Make rol_and thm
R74654:74660 AV.Integers Make rol_and thm
R74671:74679 AV.Integers Make and_assoc thm
R74671:74679 AV.Integers Make and_assoc thm
R74671:74679 AV.Integers Make and_assoc thm
R74692:74698 AV.Integers Make rol_rol thm
R74692:74698 AV.Integers Make rol_rol thm
R74692:74698 AV.Integers Make rol_rol thm
R74692:74698 AV.Integers Make rol_rol thm
prf 74734:74740 Make or_rolm
R74795:74797 Coq.Init.Logic <> :type_scope:x_'='_x not
R74765:74766 AV.Integers Make or def
R74783:74786 AV.Integers Make rolm def
R74792:74793 AV.Integers <> m2 var
R74790:74790 AV.Integers <> n var
R74788:74788 AV.Integers <> x var
R74769:74772 AV.Integers Make rolm def
R74778:74779 AV.Integers <> m1 var
R74776:74776 AV.Integers <> n var
R74774:74774 AV.Integers <> x var
R74798:74801 AV.Integers Make rolm def
R74808:74809 AV.Integers Make or def
R74814:74815 AV.Integers <> m2 var
R74811:74812 AV.Integers <> m1 var
R74805:74805 AV.Integers <> n var
R74803:74803 AV.Integers <> x var
R74843:74846 AV.Integers Make rolm def
R74865:74878 AV.Integers Make and_or_distrib thm
R74865:74878 AV.Integers Make and_or_distrib thm
prf 74895:74901 Make ror_rol
R74942:74947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74955:74957 Coq.Init.Logic <> :type_scope:x_'='_x not
R74948:74950 AV.Integers Make ror def
R74954:74954 AV.Integers <> y var
R74952:74952 AV.Integers <> x var
R74958:74960 AV.Integers Make rol def
R74965:74967 AV.Integers Make sub def
R74979:74979 AV.Integers <> y var
R74969:74977 AV.Integers Make iwordsize def
R74962:74962 AV.Integers <> x var
R74935:74937 Coq.Init.Logic <> :type_scope:x_'='_x not
R74920:74922 AV.Integers Make ltu def
R74926:74934 AV.Integers Make iwordsize def
R74924:74924 AV.Integers <> y var
R74938:74941 Coq.Init.Datatypes <> true constr
R75014:75030 AV.Integers Make ltu_iwordsize_inv thm
R75014:75030 AV.Integers Make ltu_iwordsize_inv thm
R75054:75065 AV.Integers Make same_bits_eq thm
R75054:75065 AV.Integers Make same_bits_eq thm
R75086:75093 AV.Integers Make bits_ror thm
R75086:75093 AV.Integers Make bits_ror thm
R75086:75093 AV.Integers Make bits_ror thm
R75086:75093 AV.Integers Make bits_ror thm
R75110:75117 AV.Integers Make bits_rol thm
R75110:75117 AV.Integers Make bits_rol thm
R75110:75117 AV.Integers Make bits_rol thm
R75110:75117 AV.Integers Make bits_rol thm
R75144:75146 AV.Integers Make sub def
R75157:75169 AV.Integers Make unsigned_repr thm
R75157:75169 AV.Integers Make unsigned_repr thm
R75157:75169 AV.Integers Make unsigned_repr thm
R75157:75169 AV.Integers Make unsigned_repr thm
R75180:75201 AV.Integers Make unsigned_repr_wordsize thm
R75180:75201 AV.Integers Make unsigned_repr_wordsize thm
R75180:75201 AV.Integers Make unsigned_repr_wordsize thm
R75212:75223 AV.Integers Make eqmod_mod_eq thm
R75212:75223 AV.Integers Make eqmod_mod_eq thm
R75232:75243 AV.Integers Make wordsize_pos thm
R75232:75243 AV.Integers Make wordsize_pos thm
R75272:75293 AV.Integers Make unsigned_repr_wordsize thm
R75272:75293 AV.Integers Make unsigned_repr_wordsize thm
R75272:75293 AV.Integers Make unsigned_repr_wordsize thm
R75309:75320 AV.Integers Make wordsize_pos thm
R75334:75354 AV.Integers Make wordsize_max_unsigned thm
R75309:75320 AV.Integers Make wordsize_pos thm
R75334:75354 AV.Integers Make wordsize_max_unsigned thm
prf 75378:75388 Make ror_rol_neg
R75426:75429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75437:75439 Coq.Init.Logic <> :type_scope:x_'='_x not
R75430:75432 AV.Integers Make ror def
R75436:75436 AV.Integers <> y var
R75434:75434 AV.Integers <> x var
R75440:75442 AV.Integers Make rol def
R75447:75449 AV.Integers Make neg def
R75451:75451 AV.Integers <> y var
R75444:75444 AV.Integers <> x var
R75405:75405 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R75415:75417 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R75425:75425 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R75406:75414 AV.Integers Make zwordsize def
R75418:75424 AV.Integers Make modulus def
R75478:75489 AV.Integers Make same_bits_eq thm
R75478:75489 AV.Integers Make same_bits_eq thm
R75510:75517 AV.Integers Make bits_ror thm
R75510:75517 AV.Integers Make bits_ror thm
R75510:75517 AV.Integers Make bits_ror thm
R75536:75543 AV.Integers Make bits_rol thm
R75536:75543 AV.Integers Make bits_rol thm
R75536:75543 AV.Integers Make bits_rol thm
R75571:75582 AV.Integers Make eqmod_mod_eq thm
R75571:75582 AV.Integers Make eqmod_mod_eq thm
R75619:75622 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75635:75635 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75623:75624 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R75625:75632 AV.Integers Make unsigned def
R75600:75610 AV.Integers Make eqmod_trans thm
R75619:75622 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75635:75635 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75623:75624 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R75625:75632 AV.Integers Make unsigned def
R75600:75610 AV.Integers Make eqmod_trans thm
R75647:75657 AV.Integers Make eqmod_refl2 thm
R75647:75657 AV.Integers Make eqmod_refl2 thm
R75675:75683 AV.Integers Make eqmod_sub thm
R75675:75683 AV.Integers Make eqmod_sub thm
R75692:75701 AV.Integers Make eqmod_refl thm
R75692:75701 AV.Integers Make eqmod_refl thm
R75731:75737 AV.Integers Make modulus def
R75712:75724 AV.Integers Make eqmod_divides thm
R75731:75737 AV.Integers Make modulus def
R75712:75724 AV.Integers Make eqmod_divides thm
R75748:75764 AV.Integers Make eqm_unsigned_repr thm
R75748:75764 AV.Integers Make eqm_unsigned_repr thm
prf 75787:75792 Make or_ror
R75835:75840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75863:75868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75888:75893 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75901:75903 Coq.Init.Logic <> :type_scope:x_'='_x not
R75894:75896 AV.Integers Make ror def
R75900:75900 AV.Integers <> z var
R75898:75898 AV.Integers <> x var
R75904:75905 AV.Integers Make or def
R75918:75921 AV.Integers Make shru def
R75925:75925 AV.Integers <> z var
R75923:75923 AV.Integers <> x var
R75908:75910 AV.Integers Make shl def
R75914:75914 AV.Integers <> y var
R75912:75912 AV.Integers <> x var
R75876:75878 Coq.Init.Logic <> :type_scope:x_'='_x not
R75869:75871 AV.Integers Make add def
R75875:75875 AV.Integers <> z var
R75873:75873 AV.Integers <> y var
R75879:75887 AV.Integers Make iwordsize def
R75856:75858 Coq.Init.Logic <> :type_scope:x_'='_x not
R75841:75843 AV.Integers Make ltu def
R75847:75855 AV.Integers Make iwordsize def
R75845:75845 AV.Integers <> z var
R75859:75862 Coq.Init.Datatypes <> true constr
R75828:75830 Coq.Init.Logic <> :type_scope:x_'='_x not
R75813:75815 AV.Integers Make ltu def
R75819:75827 AV.Integers Make iwordsize def
R75817:75817 AV.Integers <> y var
R75831:75834 Coq.Init.Datatypes <> true constr
R75960:75976 AV.Integers Make ltu_iwordsize_inv thm
R75984:76000 AV.Integers Make ltu_iwordsize_inv thm
R75960:75976 AV.Integers Make ltu_iwordsize_inv thm
R75984:76000 AV.Integers Make ltu_iwordsize_inv thm
R76026:76028 AV.Integers Make ror def
R76031:76032 AV.Integers Make or def
R76035:76037 AV.Integers Make shl def
R76040:76043 AV.Integers Make shru def
R76052:76063 AV.Integers Make same_bits_eq thm
R76052:76063 AV.Integers Make same_bits_eq thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76085:76096 AV.Integers Make testbit_repr thm
R76116:76125 Coq.ZArith.BinInt Z lor_spec thm
R76116:76125 Coq.ZArith.BinInt Z lor_spec thm
R76116:76125 Coq.ZArith.BinInt Z lor_spec thm
R76116:76125 Coq.ZArith.BinInt Z lor_spec thm
R76116:76125 Coq.ZArith.BinInt Z lor_spec thm
R76136:76143 Coq.Bool.Bool <> orb_comm thm
R76136:76143 Coq.Bool.Bool <> orb_comm thm
R76136:76143 Coq.Bool.Bool <> orb_comm thm
R76161:76173 AV.Integers Make same_bits_eqm thm
R76161:76173 AV.Integers Make same_bits_eqm thm
R76161:76173 AV.Integers Make same_bits_eqm thm
R76192:76210 AV.Integers Make eqm_unsigned_repr_r thm
R76192:76210 AV.Integers Make eqm_unsigned_repr_r thm
R76219:76227 AV.Integers Make eqm_refl2 thm
R76219:76227 AV.Integers Make eqm_refl2 thm
R76251:76260 AV.Coqlib <> Zmod_small thm
R76251:76260 AV.Coqlib <> Zmod_small thm
R76251:76260 AV.Coqlib <> Zmod_small thm
R76251:76260 AV.Coqlib <> Zmod_small thm
R76299:76301 Coq.Init.Logic <> :type_scope:x_'='_x not
R76281:76288 AV.Integers Make unsigned def
R76291:76293 AV.Integers Make add def
R76302:76310 AV.Integers Make zwordsize def
R76299:76301 Coq.Init.Logic <> :type_scope:x_'='_x not
R76281:76288 AV.Integers Make unsigned def
R76291:76293 AV.Integers Make add def
R76302:76310 AV.Integers Make zwordsize def
R76338:76359 AV.Integers Make unsigned_repr_wordsize thm
R76338:76359 AV.Integers Make unsigned_repr_wordsize thm
R76373:76375 AV.Integers Make add def
R76392:76404 AV.Integers Make unsigned_repr thm
R76392:76404 AV.Integers Make unsigned_repr thm
R76392:76404 AV.Integers Make unsigned_repr thm
R76392:76404 AV.Integers Make unsigned_repr thm
R76439:76463 AV.Integers Make two_wordsize_max_unsigned thm
R76439:76463 AV.Integers Make two_wordsize_max_unsigned thm
R76483:76501 AV.Integers Make eqm_unsigned_repr_r thm
R76483:76501 AV.Integers Make eqm_unsigned_repr_r thm
R76510:76518 AV.Integers Make eqm_refl2 thm
R76510:76518 AV.Integers Make eqm_refl2 thm
R76540:76549 AV.Coqlib <> Zmod_small thm
R76540:76549 AV.Coqlib <> Zmod_small thm
def 76628:76637 Make powerserie
R76643:76646 Coq.Init.Datatypes <> list ind
R76648:76648 Coq.Numbers.BinNums <> Z ind
R76652:76652 Coq.Numbers.BinNums <> Z ind
R76665:76665 AV.Integers <> l var
R76676:76678 Coq.Init.Datatypes <> nil constr
R76690:76693 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R76707:76709 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76700:76704 Coq.ZArith.Zpower <> two_p def
R76710:76719 AV.Integers <> powerserie def
prf 76738:76758 Make Z_one_bits_powerserie
R76789:76792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76794:76796 Coq.Init.Logic <> :type_scope:x_'='_x not
R76793:76793 AV.Integers <> x var
R76797:76806 AV.Integers Make powerserie def
R76809:76818 AV.Integers Make Z_one_bits def
R76829:76829 AV.Integers <> x var
R76820:76827 AV.Integers Make wordsize def
R76774:76777 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76779:76781 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76778:76778 AV.Integers <> x var
R76778:76778 AV.Integers <> x var
R76782:76788 AV.Integers Make modulus def
R76876:76883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76908:76915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76927:76929 Coq.Init.Logic <> :type_scope:x_'='_x not
R76917:76919 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R76916:76916 AV.Integers <> x var
R76920:76924 Coq.ZArith.Zpower <> two_p def
R76926:76926 AV.Integers <> i var
R76930:76939 AV.Integers Make powerserie def
R76942:76951 AV.Integers Make Z_one_bits def
R76957:76957 AV.Integers <> i var
R76955:76955 AV.Integers <> x var
R76953:76953 AV.Integers <> n var
R76885:76888 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76890:76892 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76889:76889 AV.Integers <> x var
R76889:76889 AV.Integers <> x var
R76893:76905 Coq.ZArith.Zpower <> two_power_nat def
R76907:76907 AV.Integers <> n var
R76871:76874 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R76875:76875 AV.Integers <> i var
R76876:76883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76908:76915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76927:76929 Coq.Init.Logic <> :type_scope:x_'='_x not
R76917:76919 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R76916:76916 AV.Integers <> x var
R76920:76924 Coq.ZArith.Zpower <> two_p def
R76926:76926 AV.Integers <> i var
R76930:76939 AV.Integers Make powerserie def
R76942:76951 AV.Integers Make Z_one_bits def
R76957:76957 AV.Integers <> i var
R76955:76955 AV.Integers <> x var
R76953:76953 AV.Integers <> n var
R76885:76888 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76890:76892 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76889:76889 AV.Integers <> x var
R76889:76889 AV.Integers <> x var
R76893:76905 Coq.ZArith.Zpower <> two_power_nat def
R76907:76907 AV.Integers <> n var
R76871:76874 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R76875:76875 AV.Integers <> i var
R77006:77020 AV.Coqlib <> two_power_nat_O thm
R77006:77020 AV.Coqlib <> two_power_nat_O thm
R77006:77020 AV.Coqlib <> two_power_nat_O thm
R77040:77042 Coq.Init.Logic <> :type_scope:x_'='_x not
R77040:77042 Coq.Init.Logic <> :type_scope:x_'='_x not
R77082:77096 Coq.ZArith.Zpower <> two_power_nat_S thm
R77082:77096 Coq.ZArith.Zpower <> two_power_nat_S thm
R77082:77096 Coq.ZArith.Zpower <> two_power_nat_S thm
R77134:77140 AV.Integers Make Zdecomp thm
R77134:77140 AV.Integers Make Zdecomp thm
R77134:77140 AV.Integers Make Zdecomp thm
R77160:77172 AV.Integers Make Zshiftin_spec thm
R77160:77172 AV.Integers Make Zshiftin_spec thm
R77160:77172 AV.Integers Make Zshiftin_spec thm
R77219:77221 Coq.Init.Logic <> :type_scope:x_'='_x not
R77203:77205 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77195:77200 Coq.ZArith.BinInt Z div2 def
R77206:77210 Coq.ZArith.Zpower <> two_p def
R77214:77216 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77222:77231 AV.Integers Make powerserie def
R77234:77243 AV.Integers Make Z_one_bits def
R77260:77262 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77248:77253 Coq.ZArith.BinInt Z div2 def
R77219:77221 Coq.Init.Logic <> :type_scope:x_'='_x not
R77203:77205 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77195:77200 Coq.ZArith.BinInt Z div2 def
R77206:77210 Coq.ZArith.Zpower <> two_p def
R77214:77216 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77222:77231 AV.Integers Make powerserie def
R77234:77243 AV.Integers Make Z_one_bits def
R77260:77262 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77248:77253 Coq.ZArith.BinInt Z div2 def
R77305:77309 Coq.ZArith.BinInt Z odd def
R77305:77309 Coq.ZArith.BinInt Z odd def
R77332:77343 Coq.ZArith.Zpower <> two_p_is_exp thm
R77332:77343 Coq.ZArith.Zpower <> two_p_is_exp thm
R77332:77343 Coq.ZArith.Zpower <> two_p_is_exp thm
R77332:77343 Coq.ZArith.Zpower <> two_p_is_exp thm
R77332:77343 Coq.ZArith.Zpower <> two_p_is_exp thm
R77360:77364 Coq.ZArith.Zpower <> two_p def
R77360:77364 Coq.ZArith.Zpower <> two_p def
R77394:77400 AV.Integers Make Zdecomp thm
R77394:77400 AV.Integers Make Zdecomp thm
R77394:77400 AV.Integers Make Zdecomp thm
R77419:77431 AV.Integers Make Zshiftin_spec thm
R77419:77431 AV.Integers Make Zshiftin_spec thm
R77419:77431 AV.Integers Make Zshiftin_spec thm
R77446:77450 Coq.ZArith.BinInt Z odd def
R77446:77450 Coq.ZArith.BinInt Z odd def
R77547:77551 Coq.ZArith.Zpower <> two_p def
R77547:77551 Coq.ZArith.Zpower <> two_p def
prf 77602:77617 Make Z_one_bits_range
R77664:77667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77669:77672 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77674:77676 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77673:77673 AV.Integers <> i var
R77673:77673 AV.Integers <> i var
R77677:77685 AV.Integers Make zwordsize def
R77634:77635 Coq.Lists.List <> In def
R77640:77649 AV.Integers Make Z_one_bits def
R77660:77660 AV.Integers <> x var
R77651:77658 AV.Integers Make wordsize def
R77637:77637 AV.Integers <> i var
R77748:77751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77753:77756 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77758:77760 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77752:77752 AV.Integers <> i var
R77757:77757 AV.Integers <> j var
R77757:77757 AV.Integers <> j var
R77762:77764 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77761:77761 AV.Integers <> i var
R77765:77772 Coq.ZArith.BinInt Z of_nat def
R77774:77774 AV.Integers <> n var
R77725:77726 Coq.Lists.List <> In def
R77731:77740 AV.Integers Make Z_one_bits def
R77746:77746 AV.Integers <> i var
R77744:77744 AV.Integers <> x var
R77742:77742 AV.Integers <> n var
R77728:77728 AV.Integers <> j var
R77748:77751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77753:77756 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77758:77760 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77752:77752 AV.Integers <> i var
R77757:77757 AV.Integers <> j var
R77757:77757 AV.Integers <> j var
R77762:77764 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77761:77761 AV.Integers <> i var
R77765:77772 Coq.ZArith.BinInt Z of_nat def
R77774:77774 AV.Integers <> n var
R77725:77726 Coq.Lists.List <> In def
R77731:77740 AV.Integers Make Z_one_bits def
R77746:77746 AV.Integers <> i var
R77744:77744 AV.Integers <> x var
R77742:77742 AV.Integers <> n var
R77728:77728 AV.Integers <> j var
R77840:77853 Coq.ZArith.Znat Nat2Z inj_succ thm
R77840:77853 Coq.ZArith.Znat Nat2Z inj_succ thm
R77840:77853 Coq.ZArith.Znat Nat2Z inj_succ thm
R77904:77907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77909:77912 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77914:77916 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77918:77920 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77921:77926 Coq.ZArith.BinInt Z succ def
R77929:77936 Coq.ZArith.BinInt Z of_nat def
R77866:77867 Coq.Lists.List <> In def
R77872:77881 AV.Integers Make Z_one_bits def
R77898:77900 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77886:77891 Coq.ZArith.BinInt Z div2 def
R77904:77907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77909:77912 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77914:77916 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77918:77920 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77921:77926 Coq.ZArith.BinInt Z succ def
R77929:77936 Coq.ZArith.BinInt Z of_nat def
R77866:77867 Coq.Lists.List <> In def
R77872:77881 AV.Integers Make Z_one_bits def
R77898:77900 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77886:77891 Coq.ZArith.BinInt Z div2 def
R77994:77998 Coq.ZArith.BinInt Z odd def
R77994:77998 Coq.ZArith.BinInt Z odd def
R78085:78092 AV.Integers Make wordsize def
R78085:78092 AV.Integers Make wordsize def
R78110:78118 AV.Integers Make zwordsize def
R78110:78118 AV.Integers Make zwordsize def
prf 78140:78152 Make is_power2_rng
R78197:78202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78204:78207 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78221:78223 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78208:78215 AV.Integers Make unsigned def
R78217:78220 AV.Integers <> logn var
R78208:78215 AV.Integers Make unsigned def
R78217:78220 AV.Integers <> logn var
R78224:78232 AV.Integers Make zwordsize def
R78185:78187 Coq.Init.Logic <> :type_scope:x_'='_x not
R78174:78182 AV.Integers Make is_power2 def
R78184:78184 AV.Integers <> n var
R78188:78191 Coq.Init.Datatypes <> Some constr
R78193:78196 AV.Integers <> logn var
R78266:78274 AV.Integers Make is_power2 def
R78291:78306 AV.Integers Make Z_one_bits_range thm
R78309:78316 AV.Integers Make unsigned def
R78291:78306 AV.Integers Make Z_one_bits_range thm
R78309:78316 AV.Integers Make unsigned def
R78335:78344 AV.Integers Make Z_one_bits def
R78356:78363 AV.Integers Make unsigned def
R78346:78353 AV.Integers Make wordsize def
R78335:78344 AV.Integers Make Z_one_bits def
R78356:78363 AV.Integers Make unsigned def
R78346:78353 AV.Integers Make wordsize def
R78474:78477 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78479:78481 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78482:78490 AV.Integers Make zwordsize def
R78474:78477 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78479:78481 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R78482:78490 AV.Integers Make zwordsize def
R78533:78545 AV.Integers Make unsigned_repr thm
R78533:78545 AV.Integers Make unsigned_repr thm
R78533:78545 AV.Integers Make unsigned_repr thm
R78533:78545 AV.Integers Make unsigned_repr thm
R78565:78585 AV.Integers Make wordsize_max_unsigned thm
R78565:78585 AV.Integers Make wordsize_max_unsigned thm
prf 78633:78647 Make is_power2_range
R78692:78695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78714:78716 Coq.Init.Logic <> :type_scope:x_'='_x not
R78696:78698 AV.Integers Make ltu def
R78705:78713 AV.Integers Make iwordsize def
R78700:78703 AV.Integers <> logn var
R78717:78720 Coq.Init.Datatypes <> true constr
R78680:78682 Coq.Init.Logic <> :type_scope:x_'='_x not
R78669:78677 AV.Integers Make is_power2 def
R78679:78679 AV.Integers <> n var
R78683:78686 Coq.Init.Datatypes <> Some constr
R78688:78691 AV.Integers <> logn var
R78747:78749 AV.Integers Make ltu def
R78760:78781 AV.Integers Make unsigned_repr_wordsize thm
R78760:78781 AV.Integers Make unsigned_repr_wordsize thm
R78760:78781 AV.Integers Make unsigned_repr_wordsize thm
R78792:78799 AV.Coqlib <> zlt_true thm
R78792:78799 AV.Coqlib <> zlt_true thm
R78814:78826 AV.Integers Make is_power2_rng thm
R78814:78826 AV.Integers Make is_power2_rng thm
prf 78855:78871 Make is_power2_correct
R78916:78921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78932:78934 Coq.Init.Logic <> :type_scope:x_'='_x not
R78922:78929 AV.Integers Make unsigned def
R78931:78931 AV.Integers <> n var
R78935:78939 Coq.ZArith.Zpower <> two_p def
R78942:78949 AV.Integers Make unsigned def
R78951:78954 AV.Integers <> logn var
R78904:78906 Coq.Init.Logic <> :type_scope:x_'='_x not
R78893:78901 AV.Integers Make is_power2 def
R78903:78903 AV.Integers <> n var
R78907:78910 Coq.Init.Datatypes <> Some constr
R78912:78915 AV.Integers <> logn var
R78989:78997 AV.Integers Make is_power2 def
R79014:79034 AV.Integers Make Z_one_bits_powerserie thm
R79050:79063 AV.Integers Make unsigned_range thm
R79037:79044 AV.Integers Make unsigned def
R79014:79034 AV.Integers Make Z_one_bits_powerserie thm
R79050:79063 AV.Integers Make unsigned_range thm
R79037:79044 AV.Integers Make unsigned def
R79084:79099 AV.Integers Make Z_one_bits_range thm
R79102:79109 AV.Integers Make unsigned def
R79084:79099 AV.Integers Make Z_one_bits_range thm
R79102:79109 AV.Integers Make unsigned def
R79128:79137 AV.Integers Make Z_one_bits def
R79149:79156 AV.Integers Make unsigned def
R79139:79146 AV.Integers Make wordsize def
R79128:79137 AV.Integers Make Z_one_bits def
R79149:79156 AV.Integers Make unsigned def
R79139:79146 AV.Integers Make wordsize def
R79280:79292 AV.Integers Make unsigned_repr thm
R79280:79292 AV.Integers Make unsigned_repr thm
R79280:79292 AV.Integers Make unsigned_repr thm
R79280:79292 AV.Integers Make unsigned_repr thm
R79304:79308 Coq.ZArith.Zpower <> two_p def
R79326:79328 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79319:79323 Coq.ZArith.Zpower <> two_p def
R79304:79308 Coq.ZArith.Zpower <> two_p def
R79326:79328 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79319:79323 Coq.ZArith.Zpower <> two_p def
R79381:79401 AV.Integers Make wordsize_max_unsigned thm
R79381:79401 AV.Integers Make wordsize_max_unsigned thm
prf 79468:79478 Make two_p_range
R79513:79518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79520:79523 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R79531:79534 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R79524:79528 Coq.ZArith.Zpower <> two_p def
R79530:79530 AV.Integers <> n var
R79524:79528 Coq.ZArith.Zpower <> two_p def
R79530:79530 AV.Integers <> n var
R79535:79546 AV.Integers Make max_unsigned def
R79496:79499 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R79501:79503 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R79500:79500 AV.Integers <> n var
R79500:79500 AV.Integers <> n var
R79504:79512 AV.Integers Make zwordsize def
R79590:79592 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R79583:79587 Coq.ZArith.Zpower <> two_p def
R79590:79592 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R79583:79587 Coq.ZArith.Zpower <> two_p def
R79603:79615 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R79603:79615 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R79646:79666 AV.Coqlib <> two_p_monotone_strict thm
R79646:79666 AV.Coqlib <> two_p_monotone_strict thm
R79685:79693 AV.Integers Make zwordsize def
R79707:79725 AV.Coqlib <> two_power_nat_two_p thm
R79707:79725 AV.Coqlib <> two_power_nat_two_p thm
R79707:79725 AV.Coqlib <> two_power_nat_two_p thm
R79737:79748 AV.Integers Make max_unsigned def
R79751:79757 AV.Integers Make modulus def
prf 79780:79794 Make Z_one_bits_zero
R79827:79829 Coq.Init.Logic <> :type_scope:x_'='_x not
R79811:79820 AV.Integers Make Z_one_bits def
R79826:79826 AV.Integers <> i var
R79822:79822 AV.Integers <> n var
R79830:79832 Coq.Init.Datatypes <> nil constr
prf 79891:79906 Make Z_one_bits_two_p
R79946:79951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79976:79978 Coq.Init.Logic <> :type_scope:x_'='_x not
R79952:79961 AV.Integers Make Z_one_bits def
R79975:79975 AV.Integers <> i var
R79966:79970 Coq.ZArith.Zpower <> two_p def
R79972:79972 AV.Integers <> x var
R79963:79963 AV.Integers <> n var
R79979:79979 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R79985:79989 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R79981:79983 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79980:79980 AV.Integers <> i var
R79984:79984 AV.Integers <> x var
R79990:79992 Coq.Init.Datatypes <> nil constr
R79928:79931 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R79933:79935 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R79932:79932 AV.Integers <> x var
R79932:79932 AV.Integers <> x var
R79936:79943 Coq.ZArith.BinInt Z of_nat def
R79945:79945 AV.Integers <> n var
R80074:80087 Coq.ZArith.Znat Nat2Z inj_succ thm
R80074:80087 Coq.ZArith.Znat Nat2Z inj_succ thm
R80074:80087 Coq.ZArith.Znat Nat2Z inj_succ thm
R80110:80113 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R80106:80108 Coq.Init.Logic <> :type_scope:x_'='_x not
R80115:80117 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R80110:80113 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R80106:80108 Coq.Init.Logic <> :type_scope:x_'='_x not
R80115:80117 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R80182:80196 AV.Integers Make Z_one_bits_zero thm
R80182:80196 AV.Integers Make Z_one_bits_zero thm
R80232:80235 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80224:80226 Coq.Init.Logic <> :type_scope:x_'='_x not
R80209:80213 Coq.ZArith.BinInt Z odd def
R80216:80220 Coq.ZArith.Zpower <> two_p def
R80227:80231 Coq.Init.Datatypes <> false constr
R80252:80254 Coq.Init.Logic <> :type_scope:x_'='_x not
R80236:80241 Coq.ZArith.BinInt Z div2 def
R80244:80248 Coq.ZArith.Zpower <> two_p def
R80255:80259 Coq.ZArith.Zpower <> two_p def
R80263:80263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R80232:80235 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80224:80226 Coq.Init.Logic <> :type_scope:x_'='_x not
R80209:80213 Coq.ZArith.BinInt Z odd def
R80216:80220 Coq.ZArith.Zpower <> two_p def
R80227:80231 Coq.Init.Datatypes <> false constr
R80252:80254 Coq.Init.Logic <> :type_scope:x_'='_x not
R80236:80241 Coq.ZArith.BinInt Z div2 def
R80244:80248 Coq.ZArith.Zpower <> two_p def
R80255:80259 Coq.ZArith.Zpower <> two_p def
R80263:80263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R80279:80290 AV.Integers Make Zshiftin_inj thm
R80279:80290 AV.Integers Make Zshiftin_inj thm
R80304:80310 AV.Integers Make Zdecomp thm
R80304:80310 AV.Integers Make Zdecomp thm
R80304:80310 AV.Integers Make Zdecomp thm
R80322:80334 AV.Integers Make Zshiftin_spec thm
R80322:80334 AV.Integers Make Zshiftin_spec thm
R80322:80334 AV.Integers Make Zshiftin_spec thm
R80322:80334 AV.Integers Make Zshiftin_spec thm
R80352:80358 Coq.ZArith.Zpower <> two_p_S thm
R80352:80358 Coq.ZArith.Zpower <> two_p_S thm
R80352:80358 Coq.ZArith.Zpower <> two_p_S thm
R80352:80358 Coq.ZArith.Zpower <> two_p_S thm
R80369:80377 Coq.ZArith.BinInt Z add_0_r thm
R80369:80377 Coq.ZArith.BinInt Z add_0_r thm
R80369:80377 Coq.ZArith.BinInt Z add_0_r thm
prf 80499:80513 Make is_power2_two_p
R80546:80551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80578:80580 Coq.Init.Logic <> :type_scope:x_'='_x not
R80552:80560 AV.Integers Make is_power2 def
R80563:80566 AV.Integers Make repr def
R80569:80573 Coq.ZArith.Zpower <> two_p def
R80575:80575 AV.Integers <> n var
R80581:80584 Coq.Init.Datatypes <> Some constr
R80587:80590 AV.Integers Make repr def
R80592:80592 AV.Integers <> n var
R80529:80532 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R80534:80536 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R80533:80533 AV.Integers <> n var
R80533:80533 AV.Integers <> n var
R80537:80545 AV.Integers Make zwordsize def
R80620:80628 AV.Integers Make is_power2 def
R80639:80651 AV.Integers Make unsigned_repr thm
R80639:80651 AV.Integers Make unsigned_repr thm
R80639:80651 AV.Integers Make unsigned_repr thm
R80639:80651 AV.Integers Make unsigned_repr thm
R80664:80679 AV.Integers Make Z_one_bits_two_p thm
R80664:80679 AV.Integers Make Z_one_bits_two_p thm
R80664:80679 AV.Integers Make Z_one_bits_two_p thm
R80664:80679 AV.Integers Make Z_one_bits_two_p thm
R80702:80712 AV.Integers Make two_p_range thm
R80702:80712 AV.Integers Make two_p_range thm
prf 80883:80899 Make Zshiftl_mul_two_p
R80922:80925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80938:80940 Coq.Init.Logic <> :type_scope:x_'='_x not
R80926:80933 Coq.ZArith.BinInt Z shiftl def
R80937:80937 AV.Integers <> n var
R80935:80935 AV.Integers <> x var
R80942:80944 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80941:80941 AV.Integers <> x var
R80945:80949 Coq.ZArith.Zpower <> two_p def
R80951:80951 AV.Integers <> n var
R80917:80920 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R80921:80921 AV.Integers <> n var
R81022:81034 Coq.PArith.BinPos Pos peano_ind def
R81022:81034 Coq.PArith.BinPos Pos peano_ind def
R81051:81063 Coq.ZArith.Zpower <> two_power_pos def
R81051:81063 Coq.ZArith.Zpower <> two_power_pos def
R81111:81123 Coq.PArith.BinPos Pos iter_succ thm
R81111:81123 Coq.PArith.BinPos Pos iter_succ thm
R81111:81123 Coq.PArith.BinPos Pos iter_succ thm
R81152:81167 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R81152:81167 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R81152:81167 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R81178:81197 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R81178:81197 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R81178:81197 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R81214:81226 Coq.ZArith.Zpower <> two_power_pos def
R81214:81226 Coq.ZArith.Zpower <> two_power_pos def
prf 81287:81299 Make shl_mul_two_p
R81325:81327 Coq.Init.Logic <> :type_scope:x_'='_x not
R81318:81320 AV.Integers Make shl def
R81324:81324 AV.Integers <> y var
R81322:81322 AV.Integers <> x var
R81328:81330 AV.Integers Make mul def
R81335:81338 AV.Integers Make repr def
R81341:81345 Coq.ZArith.Zpower <> two_p def
R81348:81355 AV.Integers Make unsigned def
R81357:81357 AV.Integers <> y var
R81332:81332 AV.Integers <> x var
R81387:81389 AV.Integers Make shl def
R81392:81394 AV.Integers Make mul def
R81403:81414 AV.Integers Make eqm_samerepr thm
R81403:81414 AV.Integers Make eqm_samerepr thm
R81427:81443 AV.Integers Make Zshiftl_mul_two_p thm
R81427:81443 AV.Integers Make Zshiftl_mul_two_p thm
R81427:81443 AV.Integers Make Zshiftl_mul_two_p thm
R81427:81443 AV.Integers Make Zshiftl_mul_two_p thm
R81476:81489 AV.Integers Make unsigned_range thm
R81476:81489 AV.Integers Make unsigned_range thm
prf 81516:81522 Make shl_mul
R81548:81550 Coq.Init.Logic <> :type_scope:x_'='_x not
R81541:81543 AV.Integers Make shl def
R81547:81547 AV.Integers <> y var
R81545:81545 AV.Integers <> x var
R81551:81553 AV.Integers Make mul def
R81558:81560 AV.Integers Make shl def
R81566:81566 AV.Integers <> y var
R81562:81564 AV.Integers Make one def
R81555:81555 AV.Integers <> x var
R81606:81608 Coq.Init.Logic <> :type_scope:x_'='_x not
R81597:81599 AV.Integers Make shl def
R81601:81603 AV.Integers Make one def
R81609:81612 AV.Integers Make repr def
R81615:81619 Coq.ZArith.Zpower <> two_p def
R81622:81629 AV.Integers Make unsigned def
R81606:81608 Coq.Init.Logic <> :type_scope:x_'='_x not
R81597:81599 AV.Integers Make shl def
R81601:81603 AV.Integers Make one def
R81609:81612 AV.Integers Make repr def
R81615:81619 Coq.ZArith.Zpower <> two_p def
R81622:81629 AV.Integers Make unsigned def
R81653:81665 AV.Integers Make shl_mul_two_p thm
R81653:81665 AV.Integers Make shl_mul_two_p thm
R81653:81665 AV.Integers Make shl_mul_two_p thm
R81676:81685 AV.Integers Make mul_commut thm
R81676:81685 AV.Integers Make mul_commut thm
R81676:81685 AV.Integers Make mul_commut thm
R81696:81702 AV.Integers Make mul_one thm
R81696:81702 AV.Integers Make mul_one thm
R81696:81702 AV.Integers Make mul_one thm
R81734:81746 AV.Integers Make shl_mul_two_p thm
R81734:81746 AV.Integers Make shl_mul_two_p thm
prf 81763:81770 Make mul_pow2
R81817:81822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81830:81832 Coq.Init.Logic <> :type_scope:x_'='_x not
R81823:81825 AV.Integers Make mul def
R81829:81829 AV.Integers <> n var
R81827:81827 AV.Integers <> x var
R81833:81835 AV.Integers Make shl def
R81839:81842 AV.Integers <> logn var
R81837:81837 AV.Integers <> x var
R81805:81807 Coq.Init.Logic <> :type_scope:x_'='_x not
R81794:81802 AV.Integers Make is_power2 def
R81804:81804 AV.Integers <> n var
R81808:81811 Coq.Init.Datatypes <> Some constr
R81813:81816 AV.Integers <> logn var
R81874:81890 AV.Integers Make is_power2_correct thm
R81874:81890 AV.Integers Make is_power2_correct thm
R81920:81932 AV.Integers Make shl_mul_two_p thm
R81920:81932 AV.Integers Make shl_mul_two_p thm
R81920:81932 AV.Integers Make shl_mul_two_p thm
R81958:81970 AV.Integers Make repr_unsigned thm
R81958:81970 AV.Integers Make repr_unsigned thm
R81958:81970 AV.Integers Make repr_unsigned thm
prf 81995:82011 Make shifted_or_is_add
R82050:82055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82076:82081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82103:82105 Coq.Init.Logic <> :type_scope:x_'='_x not
R82082:82083 AV.Integers Make or def
R82102:82102 AV.Integers <> y var
R82086:82088 AV.Integers Make shl def
R82093:82096 AV.Integers Make repr def
R82098:82098 AV.Integers <> n var
R82090:82090 AV.Integers <> x var
R82106:82109 AV.Integers Make repr def
R82131:82133 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82121:82123 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82111:82118 AV.Integers Make unsigned def
R82120:82120 AV.Integers <> x var
R82124:82128 Coq.ZArith.Zpower <> two_p def
R82130:82130 AV.Integers <> n var
R82134:82141 AV.Integers Make unsigned def
R82143:82143 AV.Integers <> y var
R82066:82068 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R82056:82063 AV.Integers Make unsigned def
R82065:82065 AV.Integers <> y var
R82069:82073 Coq.ZArith.Zpower <> two_p def
R82075:82075 AV.Integers <> n var
R82033:82036 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82038:82040 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82037:82037 AV.Integers <> n var
R82037:82037 AV.Integers <> n var
R82041:82049 AV.Integers Make zwordsize def
R82175:82183 AV.Integers Make add_is_or thm
R82175:82183 AV.Integers Make add_is_or thm
R82175:82183 AV.Integers Make add_is_or thm
R82175:82183 AV.Integers Make add_is_or thm
R82197:82199 AV.Integers Make add def
R82208:82219 AV.Integers Make eqm_samerepr thm
R82208:82219 AV.Integers Make eqm_samerepr thm
R82228:82234 AV.Integers Make eqm_add thm
R82228:82234 AV.Integers Make eqm_add thm
R82265:82277 AV.Integers Make shl_mul_two_p thm
R82265:82277 AV.Integers Make shl_mul_two_p thm
R82265:82277 AV.Integers Make shl_mul_two_p thm
R82287:82289 AV.Integers Make mul def
R82298:82316 AV.Integers Make eqm_unsigned_repr_l thm
R82298:82316 AV.Integers Make eqm_unsigned_repr_l thm
R82329:82336 AV.Integers Make eqm_mult thm
R82329:82336 AV.Integers Make eqm_mult thm
R82361:82379 AV.Integers Make eqm_unsigned_repr_l thm
R82361:82379 AV.Integers Make eqm_unsigned_repr_l thm
R82392:82400 AV.Integers Make eqm_refl2 thm
R82392:82400 AV.Integers Make eqm_refl2 thm
R82411:82423 AV.Integers Make unsigned_repr thm
R82411:82423 AV.Integers Make unsigned_repr thm
R82411:82423 AV.Integers Make unsigned_repr thm
R82411:82423 AV.Integers Make unsigned_repr thm
R82447:82467 AV.Integers Make wordsize_max_unsigned thm
R82447:82467 AV.Integers Make wordsize_max_unsigned thm
R82504:82516 AV.Integers Make unsigned_repr thm
R82504:82516 AV.Integers Make unsigned_repr thm
R82504:82516 AV.Integers Make unsigned_repr thm
R82504:82516 AV.Integers Make unsigned_repr thm
R82533:82535 AV.Coqlib <> zlt def
R82533:82535 AV.Coqlib <> zlt def
R82570:82576 AV.Integers Make testbit def
R82588:82592 Coq.Init.Datatypes <> false constr
R82570:82576 AV.Integers Make testbit def
R82588:82592 Coq.Init.Datatypes <> false constr
R82601:82612 Coq.Bool.Bool <> andb_false_r thm
R82601:82612 Coq.Bool.Bool <> andb_false_r thm
R82638:82644 AV.Integers Make testbit def
R82686:82688 Coq.Init.Logic <> :type_scope:x_'='_x not
R82665:82672 Coq.ZArith.BinInt Z of_nat def
R82675:82682 Coq.ZArith.BinInt Z to_nat def
R82702:82709 Coq.ZArith.Znat Z2Nat id thm
R82686:82688 Coq.Init.Logic <> :type_scope:x_'='_x not
R82665:82672 Coq.ZArith.BinInt Z of_nat def
R82675:82682 Coq.ZArith.BinInt Z to_nat def
R82702:82709 Coq.ZArith.Znat Z2Nat id thm
R82753:82760 Coq.ZArith.BinInt Z to_nat def
R82732:82745 AV.Integers Make Ztestbit_above thm
R82753:82760 Coq.ZArith.BinInt Z to_nat def
R82732:82745 AV.Integers Make Ztestbit_above thm
R82804:82822 AV.Coqlib <> two_power_nat_two_p thm
R82804:82822 AV.Coqlib <> two_power_nat_two_p thm
R82804:82822 AV.Coqlib <> two_power_nat_two_p thm
R82849:82862 AV.Integers Make unsigned_range thm
R82849:82862 AV.Integers Make unsigned_range thm
R82916:82936 AV.Integers Make wordsize_max_unsigned thm
R82916:82936 AV.Integers Make wordsize_max_unsigned thm
prf 83027:83043 Make Zshiftr_div_two_p
R83066:83069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R83082:83084 Coq.Init.Logic <> :type_scope:x_'='_x not
R83070:83077 Coq.ZArith.BinInt Z shiftr def
R83081:83081 AV.Integers <> n var
R83079:83079 AV.Integers <> x var
R83086:83088 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R83085:83085 AV.Integers <> x var
R83089:83093 Coq.ZArith.Zpower <> two_p def
R83095:83095 AV.Integers <> n var
R83061:83064 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R83065:83065 AV.Integers <> n var
R83134:83141 Coq.ZArith.BinInt Z shiftr def
R83163:83170 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R83163:83170 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R83163:83170 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R83200:83212 Coq.PArith.BinPos Pos peano_ind def
R83200:83212 Coq.PArith.BinPos Pos peano_ind def
R83229:83241 Coq.ZArith.Zpower <> two_power_pos def
R83229:83241 Coq.ZArith.Zpower <> two_power_pos def
R83267:83275 Coq.ZArith.Zdiv <> Zdiv2_div thm
R83267:83275 Coq.ZArith.Zdiv <> Zdiv2_div thm
R83300:83312 Coq.PArith.BinPos Pos iter_succ thm
R83300:83312 Coq.PArith.BinPos Pos iter_succ thm
R83300:83312 Coq.PArith.BinPos Pos iter_succ thm
R83341:83356 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R83341:83356 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R83341:83356 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R83367:83386 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R83367:83386 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R83367:83386 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R83403:83415 Coq.ZArith.Zpower <> two_power_pos def
R83403:83415 Coq.ZArith.Zpower <> two_power_pos def
R83442:83450 Coq.ZArith.Zdiv <> Zdiv2_div thm
R83442:83450 Coq.ZArith.Zdiv <> Zdiv2_div thm
R83442:83450 Coq.ZArith.Zdiv <> Zdiv2_div thm
R83461:83470 Coq.ZArith.BinInt Z mul_comm thm
R83461:83470 Coq.ZArith.BinInt Z mul_comm thm
R83461:83470 Coq.ZArith.BinInt Z mul_comm thm
R83479:83487 AV.Coqlib <> Zdiv_Zdiv thm
R83479:83487 AV.Coqlib <> Zdiv_Zdiv thm
R83504:83520 Coq.ZArith.Zpower <> two_power_pos_nat thm
R83504:83520 Coq.ZArith.Zpower <> two_power_pos_nat thm
R83504:83520 Coq.ZArith.Zpower <> two_power_pos_nat thm
R83529:83545 AV.Coqlib <> two_power_nat_pos thm
R83529:83545 AV.Coqlib <> two_power_nat_pos thm
prf 83597:83610 Make shru_div_two_p
R83637:83639 Coq.Init.Logic <> :type_scope:x_'='_x not
R83629:83632 AV.Integers Make shru def
R83636:83636 AV.Integers <> y var
R83634:83634 AV.Integers <> x var
R83640:83643 AV.Integers Make repr def
R83656:83658 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R83646:83653 AV.Integers Make unsigned def
R83655:83655 AV.Integers <> x var
R83659:83663 Coq.ZArith.Zpower <> two_p def
R83666:83673 AV.Integers Make unsigned def
R83675:83675 AV.Integers <> y var
R83704:83707 AV.Integers Make shru def
R83720:83736 AV.Integers Make Zshiftr_div_two_p thm
R83720:83736 AV.Integers Make Zshiftr_div_two_p thm
R83720:83736 AV.Integers Make Zshiftr_div_two_p thm
R83720:83736 AV.Integers Make Zshiftr_div_two_p thm
R83759:83772 AV.Integers Make unsigned_range thm
R83759:83772 AV.Integers Make unsigned_range thm
prf 83799:83807 Make divu_pow2
R83854:83859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R83868:83870 Coq.Init.Logic <> :type_scope:x_'='_x not
R83860:83863 AV.Integers Make divu def
R83867:83867 AV.Integers <> n var
R83865:83865 AV.Integers <> x var
R83871:83874 AV.Integers Make shru def
R83878:83881 AV.Integers <> logn var
R83876:83876 AV.Integers <> x var
R83842:83844 Coq.Init.Logic <> :type_scope:x_'='_x not
R83831:83839 AV.Integers Make is_power2 def
R83841:83841 AV.Integers <> n var
R83845:83848 Coq.Init.Datatypes <> Some constr
R83850:83853 AV.Integers <> logn var
R83913:83929 AV.Integers Make is_power2_correct thm
R83913:83929 AV.Integers Make is_power2_correct thm
R83968:83971 AV.Integers Make divu def
R83992:84005 AV.Integers Make shru_div_two_p thm
R83992:84005 AV.Integers Make shru_div_two_p thm
prf 84085:84097 Make shr_div_two_p
R84123:84125 Coq.Init.Logic <> :type_scope:x_'='_x not
R84116:84118 AV.Integers Make shr def
R84122:84122 AV.Integers <> y var
R84120:84120 AV.Integers <> x var
R84126:84129 AV.Integers Make repr def
R84140:84142 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R84132:84137 AV.Integers Make signed def
R84139:84139 AV.Integers <> x var
R84143:84147 Coq.ZArith.Zpower <> two_p def
R84150:84157 AV.Integers Make unsigned def
R84159:84159 AV.Integers <> y var
R84188:84190 AV.Integers Make shr def
R84203:84219 AV.Integers Make Zshiftr_div_two_p thm
R84203:84219 AV.Integers Make Zshiftr_div_two_p thm
R84203:84219 AV.Integers Make Zshiftr_div_two_p thm
R84203:84219 AV.Integers Make Zshiftr_div_two_p thm
R84242:84255 AV.Integers Make unsigned_range thm
R84242:84255 AV.Integers Make unsigned_range thm
prf 84282:84290 Make divs_pow2
R84337:84342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84351:84353 Coq.Init.Logic <> :type_scope:x_'='_x not
R84343:84346 AV.Integers Make divs def
R84350:84350 AV.Integers <> n var
R84348:84348 AV.Integers <> x var
R84354:84357 AV.Integers Make shrx def
R84361:84364 AV.Integers <> logn var
R84359:84359 AV.Integers <> x var
R84325:84327 Coq.Init.Logic <> :type_scope:x_'='_x not
R84314:84322 AV.Integers Make is_power2 def
R84324:84324 AV.Integers <> n var
R84328:84331 Coq.Init.Datatypes <> Some constr
R84333:84336 AV.Integers <> logn var
R84396:84412 AV.Integers Make is_power2_correct thm
R84396:84412 AV.Integers Make is_power2_correct thm
R84438:84441 AV.Integers Make shrx def
R84452:84464 AV.Integers Make shl_mul_two_p thm
R84452:84464 AV.Integers Make shl_mul_two_p thm
R84452:84464 AV.Integers Make shl_mul_two_p thm
R84477:84486 AV.Integers Make mul_commut thm
R84477:84486 AV.Integers Make mul_commut thm
R84477:84486 AV.Integers Make mul_commut thm
R84497:84503 AV.Integers Make mul_one thm
R84497:84503 AV.Integers Make mul_one thm
R84497:84503 AV.Integers Make mul_one thm
R84531:84543 AV.Integers Make repr_unsigned thm
R84531:84543 AV.Integers Make repr_unsigned thm
R84531:84543 AV.Integers Make repr_unsigned thm
prf 84625:84642 Make Ztestbit_mod_two_p
R84669:84672 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84679:84684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84714:84716 Coq.Init.Logic <> :type_scope:x_'='_x not
R84685:84693 Coq.ZArith.BinInt Z testbit def
R84713:84713 AV.Integers <> i var
R84697:84702 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R84710:84710 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R84696:84696 AV.Integers <> x var
R84703:84707 Coq.ZArith.Zpower <> two_p def
R84709:84709 AV.Integers <> n var
R84720:84722 AV.Coqlib <> zlt def
R84726:84726 AV.Integers <> n var
R84724:84724 AV.Integers <> i var
R84752:84756 Coq.Init.Datatypes <> false constr
R84733:84741 Coq.ZArith.BinInt Z testbit def
R84745:84745 AV.Integers <> i var
R84743:84743 AV.Integers <> x var
R84674:84677 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84678:84678 AV.Integers <> i var
R84664:84667 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84668:84668 AV.Integers <> n var
R84819:84829 Coq.ZArith.Wf_Z <> natlike_ind thm
R84819:84829 Coq.ZArith.Wf_Z <> natlike_ind thm
R84858:84862 Coq.ZArith.Zpower <> two_p def
R84858:84862 Coq.ZArith.Zpower <> two_p def
R84883:84890 Coq.ZArith.Zdiv <> Zmod_1_r thm
R84883:84890 Coq.ZArith.Zdiv <> Zmod_1_r thm
R84883:84890 Coq.ZArith.Zdiv <> Zmod_1_r thm
R84901:84913 Coq.ZArith.BinInt Z testbit_0_l thm
R84901:84913 Coq.ZArith.BinInt Z testbit_0_l thm
R84901:84913 Coq.ZArith.BinInt Z testbit_0_l thm
R84928:84936 AV.Coqlib <> zlt_false thm
R84928:84936 AV.Coqlib <> zlt_false thm
R84928:84936 AV.Coqlib <> zlt_false thm
R84928:84936 AV.Coqlib <> zlt_false thm
R84972:84978 Coq.ZArith.Zpower <> two_p_S thm
R84972:84978 Coq.ZArith.Zpower <> two_p_S thm
R84972:84978 Coq.ZArith.Zpower <> two_p_S thm
R84972:84978 Coq.ZArith.Zpower <> two_p_S thm
R85002:85007 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85019:85019 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85009:85011 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85012:85016 Coq.ZArith.Zpower <> two_p def
R85035:85042 AV.Integers Make Zshiftin def
R85065:85069 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85056:85061 Coq.ZArith.BinInt Z div2 def
R85070:85074 Coq.ZArith.Zpower <> two_p def
R85045:85049 Coq.ZArith.BinInt Z odd def
R85002:85007 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85019:85019 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85009:85011 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85012:85016 Coq.ZArith.Zpower <> two_p def
R85035:85042 AV.Integers Make Zshiftin def
R85065:85069 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85056:85061 Coq.ZArith.BinInt Z div2 def
R85070:85074 Coq.ZArith.Zpower <> two_p def
R85045:85049 Coq.ZArith.BinInt Z odd def
R85093:85108 AV.Integers Make Ztestbit_shiftin thm
R85093:85108 AV.Integers Make Ztestbit_shiftin thm
R85093:85108 AV.Integers Make Ztestbit_shiftin thm
R85093:85108 AV.Integers Make Ztestbit_shiftin thm
R85126:85136 AV.Integers Make Ztestbit_eq thm
R85126:85136 AV.Integers Make Ztestbit_eq thm
R85126:85136 AV.Integers Make Ztestbit_eq thm
R85126:85136 AV.Integers Make Ztestbit_eq thm
R85161:85163 AV.Coqlib <> zeq def
R85161:85163 AV.Coqlib <> zeq def
R85185:85192 AV.Coqlib <> zlt_true thm
R85185:85192 AV.Coqlib <> zlt_true thm
R85185:85192 AV.Coqlib <> zlt_true thm
R85185:85192 AV.Coqlib <> zlt_true thm
R85236:85238 AV.Coqlib <> zlt def
R85241:85246 Coq.ZArith.BinInt Z pred def
R85236:85238 AV.Coqlib <> zlt def
R85241:85246 Coq.ZArith.BinInt Z pred def
R85271:85278 AV.Coqlib <> zlt_true thm
R85271:85278 AV.Coqlib <> zlt_true thm
R85271:85278 AV.Coqlib <> zlt_true thm
R85271:85278 AV.Coqlib <> zlt_true thm
R85310:85318 AV.Coqlib <> zlt_false thm
R85310:85318 AV.Coqlib <> zlt_false thm
R85310:85318 AV.Coqlib <> zlt_false thm
R85310:85318 AV.Coqlib <> zlt_false thm
R85364:85370 AV.Integers Make Zdecomp thm
R85364:85370 AV.Integers Make Zdecomp thm
R85364:85370 AV.Integers Make Zdecomp thm
R85393:85398 Coq.ZArith.BinInt Z div2 def
R85393:85398 Coq.ZArith.BinInt Z div2 def
R85447:85449 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85450:85454 Coq.ZArith.Zpower <> two_p def
R85427:85437 AV.Coqlib <> Zmod_unique thm
R85447:85449 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85450:85454 Coq.ZArith.Zpower <> two_p def
R85427:85437 AV.Coqlib <> Zmod_unique thm
R85475:85487 AV.Integers Make Zshiftin_spec thm
R85475:85487 AV.Integers Make Zshiftin_spec thm
R85475:85487 AV.Integers Make Zshiftin_spec thm
R85475:85487 AV.Integers Make Zshiftin_spec thm
R85475:85487 AV.Integers Make Zshiftin_spec thm
R85498:85508 Coq.ZArith.BinInt Z add_assoc thm
R85498:85508 Coq.ZArith.BinInt Z add_assoc thm
R85498:85508 Coq.ZArith.BinInt Z add_assoc thm
R85541:85544 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85586:85586 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85569:85571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85552:85555 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85568:85568 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85545:85549 Coq.ZArith.Zpower <> two_p def
R85558:85560 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85561:85565 Coq.ZArith.Zpower <> two_p def
R85574:85578 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85579:85583 Coq.ZArith.Zpower <> two_p def
R85541:85544 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85586:85586 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85569:85571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85552:85555 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85568:85568 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R85545:85549 Coq.ZArith.Zpower <> two_p def
R85558:85560 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85561:85565 Coq.ZArith.Zpower <> two_p def
R85574:85578 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85579:85583 Coq.ZArith.Zpower <> two_p def
R85611:85622 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R85611:85622 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R85631:85643 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85631:85643 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85678:85690 AV.Integers Make Zshiftin_spec thm
R85678:85690 AV.Integers Make Zshiftin_spec thm
R85678:85690 AV.Integers Make Zshiftin_spec thm
R85702:85709 Coq.ZArith.Zdiv <> Z_mod_lt thm
R85715:85719 Coq.ZArith.Zpower <> two_p def
R85702:85709 Coq.ZArith.Zdiv <> Z_mod_lt thm
R85715:85719 Coq.ZArith.Zpower <> two_p def
R85732:85744 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85732:85744 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85769:85773 Coq.ZArith.BinInt Z odd def
R85769:85773 Coq.ZArith.BinInt Z odd def
prf 85803:85819 Make Ztestbit_two_p_m1
R85842:85845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85852:85857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85883:85885 Coq.Init.Logic <> :type_scope:x_'='_x not
R85858:85866 Coq.ZArith.BinInt Z testbit def
R85882:85882 AV.Integers <> i var
R85876:85878 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85869:85873 Coq.ZArith.Zpower <> two_p def
R85875:85875 AV.Integers <> n var
R85889:85891 AV.Coqlib <> zlt def
R85895:85895 AV.Integers <> n var
R85893:85893 AV.Integers <> i var
R85912:85916 Coq.Init.Datatypes <> false constr
R85902:85905 Coq.Init.Datatypes <> true constr
R85847:85850 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R85851:85851 AV.Integers <> i var
R85837:85840 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R85841:85841 AV.Integers <> n var
R85952:85954 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85945:85949 Coq.ZArith.Zpower <> two_p def
R85964:85964 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85967:85973 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85981:85981 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85974:85978 Coq.ZArith.Zpower <> two_p def
R85952:85954 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85945:85949 Coq.ZArith.Zpower <> two_p def
R85964:85964 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85967:85973 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85981:85981 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85974:85978 Coq.ZArith.Zpower <> two_p def
R85995:86012 AV.Integers Make Ztestbit_mod_two_p thm
R85995:86012 AV.Integers Make Ztestbit_mod_two_p thm
R85995:86012 AV.Integers Make Ztestbit_mod_two_p thm
R85995:86012 AV.Integers Make Ztestbit_mod_two_p thm
R85995:86012 AV.Integers Make Ztestbit_mod_two_p thm
R86031:86033 AV.Coqlib <> zlt def
R86031:86033 AV.Coqlib <> zlt def
R86053:86063 AV.Integers Make Ztestbit_m1 thm
R86053:86063 AV.Integers Make Ztestbit_m1 thm
R86080:86090 AV.Coqlib <> Zmod_unique thm
R86080:86090 AV.Coqlib <> Zmod_unique thm
R86120:86132 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R86120:86132 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 86165:86172 Make modu_and
R86219:86224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R86233:86235 Coq.Init.Logic <> :type_scope:x_'='_x not
R86225:86228 AV.Integers Make modu def
R86232:86232 AV.Integers <> n var
R86230:86230 AV.Integers <> x var
R86236:86238 AV.Integers Make and def
R86243:86245 AV.Integers Make sub def
R86249:86251 AV.Integers Make one def
R86247:86247 AV.Integers <> n var
R86240:86240 AV.Integers <> x var
R86207:86209 Coq.Init.Logic <> :type_scope:x_'='_x not
R86196:86204 AV.Integers Make is_power2 def
R86206:86206 AV.Integers <> n var
R86210:86213 Coq.Init.Datatypes <> Some constr
R86215:86218 AV.Integers <> logn var
R86284:86300 AV.Integers Make is_power2_correct thm
R86284:86300 AV.Integers Make is_power2_correct thm
R86331:86343 AV.Integers Make is_power2_rng thm
R86331:86343 AV.Integers Make is_power2_rng thm
R86368:86379 AV.Integers Make same_bits_eq thm
R86368:86379 AV.Integers Make same_bits_eq thm
R86400:86407 AV.Integers Make bits_and thm
R86400:86407 AV.Integers Make bits_and thm
R86400:86407 AV.Integers Make bits_and thm
R86400:86407 AV.Integers Make bits_and thm
R86425:86427 AV.Integers Make sub def
R86438:86449 AV.Integers Make testbit_repr thm
R86438:86449 AV.Integers Make testbit_repr thm
R86438:86449 AV.Integers Make testbit_repr thm
R86438:86449 AV.Integers Make testbit_repr thm
R86480:86491 AV.Integers Make unsigned_one thm
R86480:86491 AV.Integers Make unsigned_one thm
R86480:86491 AV.Integers Make unsigned_one thm
R86503:86506 AV.Integers Make modu def
R86517:86528 AV.Integers Make testbit_repr thm
R86517:86528 AV.Integers Make testbit_repr thm
R86517:86528 AV.Integers Make testbit_repr thm
R86517:86528 AV.Integers Make testbit_repr thm
R86559:86576 AV.Integers Make Ztestbit_mod_two_p thm
R86559:86576 AV.Integers Make Ztestbit_mod_two_p thm
R86559:86576 AV.Integers Make Ztestbit_mod_two_p thm
R86559:86576 AV.Integers Make Ztestbit_mod_two_p thm
R86559:86576 AV.Integers Make Ztestbit_mod_two_p thm
R86587:86603 AV.Integers Make Ztestbit_two_p_m1 thm
R86587:86603 AV.Integers Make Ztestbit_two_p_m1 thm
R86587:86603 AV.Integers Make Ztestbit_two_p_m1 thm
R86587:86603 AV.Integers Make Ztestbit_two_p_m1 thm
R86587:86603 AV.Integers Make Ztestbit_two_p_m1 thm
R86618:86620 AV.Coqlib <> zlt def
R86625:86632 AV.Integers Make unsigned def
R86618:86620 AV.Coqlib <> zlt def
R86625:86632 AV.Integers Make unsigned def
R86652:86662 Coq.Bool.Bool <> andb_true_r thm
R86652:86662 Coq.Bool.Bool <> andb_true_r thm
R86652:86662 Coq.Bool.Bool <> andb_true_r thm
R86681:86692 Coq.Bool.Bool <> andb_false_r thm
R86681:86692 Coq.Bool.Bool <> andb_false_r thm
R86681:86692 Coq.Bool.Bool <> andb_false_r thm
prf 86809:86818 Make Zquot_Zdiv
R86842:86847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R86858:86860 Coq.Init.Logic <> :type_scope:x_'='_x not
R86848:86853 Coq.ZArith.BinInt Z quot def
R86857:86857 AV.Integers <> y var
R86855:86855 AV.Integers <> x var
R86864:86866 AV.Coqlib <> zlt def
R86868:86868 AV.Integers <> x var
R86899:86901 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R86898:86898 AV.Integers <> x var
R86902:86902 AV.Integers <> y var
R86877:86877 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R86887:86890 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R86883:86885 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86879:86881 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R86878:86878 AV.Integers <> x var
R86882:86882 AV.Integers <> y var
R86891:86891 AV.Integers <> y var
R86838:86840 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R86837:86837 AV.Integers <> y var
R86932:86934 AV.Coqlib <> zlt def
R86932:86934 AV.Coqlib <> zlt def
R87003:87006 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87012:87012 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86986:86986 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86996:87001 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86992:86994 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86988:86990 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87008:87010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86962:86978 Coq.ZArith.Zquot <> Zquot_unique_full thm
R87003:87006 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87012:87012 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86986:86986 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86996:87001 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86992:86994 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86988:86990 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87008:87010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86962:86978 Coq.ZArith.Zquot <> Zquot_unique_full thm
R87065:87072 Coq.ZArith.Zdiv <> Z_mod_lt thm
R87080:87082 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87076:87078 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87065:87072 Coq.ZArith.Zdiv <> Z_mod_lt thm
R87080:87082 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87076:87078 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87111:87118 Coq.ZArith.BinInt Z abs_eq thm
R87111:87118 Coq.ZArith.BinInt Z abs_eq thm
R87111:87118 Coq.ZArith.BinInt Z abs_eq thm
R87111:87118 Coq.ZArith.BinInt Z abs_eq thm
R87156:87156 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87198:87202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87206:87206 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87178:87180 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87158:87161 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R87177:87177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R87162:87162 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R87172:87175 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R87168:87170 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87164:87166 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87181:87181 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87191:87196 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87187:87189 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87183:87185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87204:87204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87156:87156 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87198:87202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87206:87206 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87178:87180 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87158:87161 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R87177:87177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R87162:87162 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R87172:87175 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R87168:87170 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87164:87166 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87181:87181 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87191:87196 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87187:87189 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87183:87185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R87204:87204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87228:87239 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R87228:87239 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R87228:87239 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R87228:87239 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R87270:87283 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
R87270:87283 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
prf 87307:87315 Make shrx_zero
R87343:87346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87358:87360 Coq.Init.Logic <> :type_scope:x_'='_x not
R87347:87350 AV.Integers Make shrx def
R87354:87357 AV.Integers Make zero def
R87352:87352 AV.Integers <> x var
R87361:87361 AV.Integers <> x var
R87339:87341 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R87330:87338 AV.Integers Make zwordsize def
R87388:87391 AV.Integers Make shrx def
R87402:87409 AV.Integers Make shl_zero thm
R87402:87409 AV.Integers Make shl_zero thm
R87402:87409 AV.Integers Make shl_zero thm
R87419:87422 AV.Integers Make divs def
R87433:87442 AV.Integers Make signed_one thm
R87433:87442 AV.Integers Make signed_one thm
R87433:87442 AV.Integers Make signed_one thm
R87463:87472 Coq.ZArith.BinInt Z quot_1_r thm
R87463:87472 Coq.ZArith.BinInt Z quot_1_r thm
R87463:87472 Coq.ZArith.BinInt Z quot_1_r thm
R87481:87491 AV.Integers Make repr_signed thm
R87481:87491 AV.Integers Make repr_signed thm
prf 87509:87516 Make shrx_shr
R87570:87575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87584:87586 Coq.Init.Logic <> :type_scope:x_'='_x not
R87576:87579 AV.Integers Make shrx def
R87583:87583 AV.Integers <> y var
R87581:87581 AV.Integers <> x var
R87587:87589 AV.Integers Make shr def
R87646:87646 AV.Integers <> y var
R87595:87596 AV.Integers Make lt def
R87600:87603 AV.Integers Make zero def
R87598:87598 AV.Integers <> x var
R87643:87643 AV.Integers <> x var
R87610:87612 AV.Integers Make add def
R87617:87619 AV.Integers Make sub def
R87633:87635 AV.Integers Make one def
R87622:87624 AV.Integers Make shl def
R87630:87630 AV.Integers <> y var
R87626:87628 AV.Integers Make one def
R87614:87614 AV.Integers <> x var
R87563:87565 Coq.Init.Logic <> :type_scope:x_'='_x not
R87535:87537 AV.Integers Make ltu def
R87542:87545 AV.Integers Make repr def
R87557:87559 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87548:87556 AV.Integers Make zwordsize def
R87539:87539 AV.Integers <> y var
R87566:87569 Coq.Init.Datatypes <> true constr
R87679:87686 AV.Integers Make unsigned def
R87679:87686 AV.Integers Make unsigned def
R87703:87706 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R87709:87711 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R87721:87723 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87712:87720 AV.Integers Make zwordsize def
R87703:87706 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R87709:87711 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R87721:87723 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87712:87720 AV.Integers Make zwordsize def
R87744:87750 AV.Integers Make ltu_inv thm
R87744:87750 AV.Integers Make ltu_inv thm
R87768:87780 AV.Integers Make unsigned_repr thm
R87768:87780 AV.Integers Make unsigned_repr thm
R87768:87780 AV.Integers Make unsigned_repr thm
R87768:87780 AV.Integers Make unsigned_repr thm
R87804:87815 AV.Integers Make wordsize_pos thm
R87817:87837 AV.Integers Make wordsize_max_unsigned thm
R87804:87815 AV.Integers Make wordsize_pos thm
R87817:87837 AV.Integers Make wordsize_max_unsigned thm
R87857:87869 AV.Integers Make shr_div_two_p thm
R87857:87869 AV.Integers Make shr_div_two_p thm
R87857:87869 AV.Integers Make shr_div_two_p thm
R87879:87882 AV.Integers Make shrx def
R87892:87895 AV.Integers Make divs def
R87917:87919 Coq.Init.Logic <> :type_scope:x_'='_x not
R87908:87910 AV.Integers Make shl def
R87912:87914 AV.Integers Make one def
R87920:87923 AV.Integers Make repr def
R87926:87930 Coq.ZArith.Zpower <> two_p def
R87917:87919 Coq.Init.Logic <> :type_scope:x_'='_x not
R87908:87910 AV.Integers Make shl def
R87912:87914 AV.Integers Make one def
R87920:87923 AV.Integers Make repr def
R87926:87930 Coq.ZArith.Zpower <> two_p def
R87956:87958 AV.Integers Make mul def
R87965:87968 AV.Integers Make repr def
R87971:87975 Coq.ZArith.Zpower <> two_p def
R87960:87962 AV.Integers Make one def
R87956:87958 AV.Integers Make mul def
R87965:87968 AV.Integers Make repr def
R87971:87975 Coq.ZArith.Zpower <> two_p def
R87960:87962 AV.Integers Make one def
R88004:88011 AV.Integers Make mul_pow2 thm
R88004:88011 AV.Integers Make mul_pow2 thm
R88030:88033 AV.Integers Make repr def
R88030:88033 AV.Integers Make repr def
R88050:88064 AV.Integers Make is_power2_two_p thm
R88050:88064 AV.Integers Make is_power2_two_p thm
R88080:88092 AV.Integers Make repr_unsigned thm
R88080:88092 AV.Integers Make repr_unsigned thm
R88107:88116 AV.Integers Make mul_commut thm
R88107:88116 AV.Integers Make mul_commut thm
R88107:88116 AV.Integers Make mul_commut thm
R88125:88131 AV.Integers Make mul_one thm
R88125:88131 AV.Integers Make mul_one thm
R88152:88154 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R88144:88148 Coq.ZArith.Zpower <> two_p def
R88152:88154 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R88144:88148 Coq.ZArith.Zpower <> two_p def
R88165:88177 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R88165:88177 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R88205:88207 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88197:88201 Coq.ZArith.Zpower <> two_p def
R88208:88219 AV.Integers Make half_modulus def
R88205:88207 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88197:88201 Coq.ZArith.Zpower <> two_p def
R88208:88219 AV.Integers Make half_modulus def
R88235:88252 AV.Integers Make half_modulus_power thm
R88235:88252 AV.Integers Make half_modulus_power thm
R88235:88252 AV.Integers Make half_modulus_power thm
R88265:88285 AV.Coqlib <> two_p_monotone_strict thm
R88265:88285 AV.Coqlib <> two_p_monotone_strict thm
R88312:88314 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88304:88308 Coq.ZArith.Zpower <> two_p def
R88315:88321 AV.Integers Make modulus def
R88312:88314 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88304:88308 Coq.ZArith.Zpower <> two_p def
R88315:88321 AV.Integers Make modulus def
R88337:88349 AV.Integers Make modulus_power thm
R88337:88349 AV.Integers Make modulus_power thm
R88337:88349 AV.Integers Make modulus_power thm
R88358:88378 AV.Coqlib <> two_p_monotone_strict thm
R88358:88378 AV.Coqlib <> two_p_monotone_strict thm
R88418:88420 Coq.Init.Logic <> :type_scope:x_'='_x not
R88398:88405 AV.Integers Make unsigned def
R88408:88410 AV.Integers Make shl def
R88412:88414 AV.Integers Make one def
R88421:88425 Coq.ZArith.Zpower <> two_p def
R88418:88420 Coq.Init.Logic <> :type_scope:x_'='_x not
R88398:88405 AV.Integers Make unsigned def
R88408:88410 AV.Integers Make shl def
R88412:88414 AV.Integers Make one def
R88421:88425 Coq.ZArith.Zpower <> two_p def
R88454:88466 AV.Integers Make unsigned_repr thm
R88454:88466 AV.Integers Make unsigned_repr thm
R88476:88487 AV.Integers Make max_unsigned def
R88525:88527 Coq.Init.Logic <> :type_scope:x_'='_x not
R88507:88512 AV.Integers Make signed def
R88515:88517 AV.Integers Make shl def
R88519:88521 AV.Integers Make one def
R88528:88532 Coq.ZArith.Zpower <> two_p def
R88525:88527 Coq.Init.Logic <> :type_scope:x_'='_x not
R88507:88512 AV.Integers Make signed def
R88515:88517 AV.Integers Make shl def
R88519:88521 AV.Integers Make one def
R88528:88532 Coq.ZArith.Zpower <> two_p def
R88561:88571 AV.Integers Make signed_repr thm
R88561:88571 AV.Integers Make signed_repr thm
R88585:88594 AV.Integers Make max_signed def
R88608:88621 AV.Integers Make min_signed_neg thm
R88608:88621 AV.Integers Make min_signed_neg thm
R88655:88664 AV.Integers Make Zquot_Zdiv thm
R88655:88664 AV.Integers Make Zquot_Zdiv thm
R88655:88664 AV.Integers Make Zquot_Zdiv thm
R88655:88664 AV.Integers Make Zquot_Zdiv thm
R88682:88683 AV.Integers Make lt def
R88694:88704 AV.Integers Make signed_zero thm
R88694:88704 AV.Integers Make signed_zero thm
R88694:88704 AV.Integers Make signed_zero thm
R88719:88721 AV.Coqlib <> zlt def
R88724:88729 AV.Integers Make signed def
R88719:88721 AV.Coqlib <> zlt def
R88724:88729 AV.Integers Make signed def
R88754:88763 AV.Integers Make add_signed thm
R88754:88763 AV.Integers Make add_signed thm
R88754:88763 AV.Integers Make add_signed thm
R88804:88806 Coq.Init.Logic <> :type_scope:x_'='_x not
R88776:88781 AV.Integers Make signed def
R88784:88786 AV.Integers Make sub def
R88800:88802 AV.Integers Make one def
R88789:88791 AV.Integers Make shl def
R88793:88795 AV.Integers Make one def
R88815:88817 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R88807:88811 Coq.ZArith.Zpower <> two_p def
R88804:88806 Coq.Init.Logic <> :type_scope:x_'='_x not
R88776:88781 AV.Integers Make signed def
R88784:88786 AV.Integers Make sub def
R88800:88802 AV.Integers Make one def
R88789:88791 AV.Integers Make shl def
R88793:88795 AV.Integers Make one def
R88815:88817 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R88807:88811 Coq.ZArith.Zpower <> two_p def
R88833:88835 AV.Integers Make sub def
R88858:88869 AV.Integers Make unsigned_one thm
R88858:88869 AV.Integers Make unsigned_one thm
R88858:88869 AV.Integers Make unsigned_one thm
R88882:88892 AV.Integers Make signed_repr thm
R88882:88892 AV.Integers Make signed_repr thm
R88910:88923 AV.Integers Make min_signed_neg thm
R88910:88923 AV.Integers Make min_signed_neg thm
R88933:88942 AV.Integers Make max_signed def
R88974:88984 AV.Integers Make signed_repr thm
R88974:88984 AV.Integers Make signed_repr thm
R88974:88984 AV.Integers Make signed_repr thm
R88974:88984 AV.Integers Make signed_repr thm
R89026:89037 AV.Integers Make signed_range thm
R89026:89037 AV.Integers Make signed_range thm
R89073:89076 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89069:89071 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89061:89065 Coq.ZArith.Zpower <> two_p def
R89077:89086 AV.Integers Make max_signed def
R89073:89076 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89069:89071 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89061:89065 Coq.ZArith.Zpower <> two_p def
R89077:89086 AV.Integers Make max_signed def
R89097:89106 AV.Integers Make max_signed def
prf 89137:89146 Make shrx_shr_2
R89200:89205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89214:89216 Coq.Init.Logic <> :type_scope:x_'='_x not
R89206:89209 AV.Integers Make shrx def
R89213:89213 AV.Integers <> y var
R89211:89211 AV.Integers <> x var
R89217:89219 AV.Integers Make shr def
R89285:89285 AV.Integers <> y var
R89222:89224 AV.Integers Make add def
R89229:89232 AV.Integers Make shru def
R89266:89268 AV.Integers Make sub def
R89280:89280 AV.Integers <> y var
R89270:89278 AV.Integers Make iwordsize def
R89235:89237 AV.Integers Make shr def
R89242:89245 AV.Integers Make repr def
R89257:89259 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89248:89256 AV.Integers Make zwordsize def
R89239:89239 AV.Integers <> x var
R89226:89226 AV.Integers <> x var
R89193:89195 Coq.Init.Logic <> :type_scope:x_'='_x not
R89165:89167 AV.Integers Make ltu def
R89172:89175 AV.Integers Make repr def
R89187:89189 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89178:89186 AV.Integers Make zwordsize def
R89169:89169 AV.Integers <> y var
R89196:89199 Coq.Init.Datatypes <> true constr
R89315:89322 AV.Integers Make shrx_shr thm
R89315:89322 AV.Integers Make shrx_shr thm
R89315:89322 AV.Integers Make shrx_shr thm
R89352:89362 AV.Integers Make shr_lt_zero thm
R89352:89362 AV.Integers Make shr_lt_zero thm
R89352:89362 AV.Integers Make shr_lt_zero thm
R89375:89376 AV.Integers Make lt def
R89380:89383 AV.Integers Make zero def
R89375:89376 AV.Integers Make lt def
R89380:89383 AV.Integers Make zero def
R89400:89407 AV.Integers Make unsigned def
R89400:89407 AV.Integers Make unsigned def
R89427:89440 AV.Integers Make unsigned_range thm
R89427:89440 AV.Integers Make unsigned_range thm
R89474:89477 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R89480:89482 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R89492:89494 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89483:89491 AV.Integers Make zwordsize def
R89474:89477 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R89480:89482 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R89492:89494 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R89483:89491 AV.Integers Make zwordsize def
R89515:89521 AV.Integers Make ltu_inv thm
R89515:89521 AV.Integers Make ltu_inv thm
R89539:89551 AV.Integers Make unsigned_repr thm
R89539:89551 AV.Integers Make unsigned_repr thm
R89539:89551 AV.Integers Make unsigned_repr thm
R89539:89551 AV.Integers Make unsigned_repr thm
R89575:89586 AV.Integers Make wordsize_pos thm
R89588:89608 AV.Integers Make wordsize_max_unsigned thm
R89575:89586 AV.Integers Make wordsize_pos thm
R89588:89608 AV.Integers Make wordsize_max_unsigned thm
R89636:89638 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R89628:89632 Coq.ZArith.Zpower <> two_p def
R89639:89645 AV.Integers Make modulus def
R89636:89638 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R89628:89632 Coq.ZArith.Zpower <> two_p def
R89639:89645 AV.Integers Make modulus def
R89661:89673 AV.Integers Make modulus_power thm
R89661:89673 AV.Integers Make modulus_power thm
R89661:89673 AV.Integers Make modulus_power thm
R89682:89702 AV.Coqlib <> two_p_monotone_strict thm
R89682:89702 AV.Coqlib <> two_p_monotone_strict thm
R89731:89743 AV.Integers Make shl_mul_two_p thm
R89731:89743 AV.Integers Make shl_mul_two_p thm
R89731:89743 AV.Integers Make shl_mul_two_p thm
R89763:89772 AV.Integers Make mul_commut thm
R89763:89772 AV.Integers Make mul_commut thm
R89763:89772 AV.Integers Make mul_commut thm
R89783:89789 AV.Integers Make mul_one thm
R89783:89789 AV.Integers Make mul_one thm
R89783:89789 AV.Integers Make mul_one thm
R89801:89803 AV.Integers Make sub def
R89814:89825 AV.Integers Make unsigned_one thm
R89814:89825 AV.Integers Make unsigned_one thm
R89814:89825 AV.Integers Make unsigned_one thm
R89836:89848 AV.Integers Make unsigned_repr thm
R89836:89848 AV.Integers Make unsigned_repr thm
R89836:89848 AV.Integers Make unsigned_repr thm
R89836:89848 AV.Integers Make unsigned_repr thm
R89861:89882 AV.Integers Make unsigned_repr_wordsize thm
R89861:89882 AV.Integers Make unsigned_repr_wordsize thm
R89861:89882 AV.Integers Make unsigned_repr_wordsize thm
R89902:89913 AV.Integers Make same_bits_eq thm
R89902:89913 AV.Integers Make same_bits_eq thm
R89932:89940 AV.Integers Make bits_shru thm
R89932:89940 AV.Integers Make bits_shru thm
R89932:89940 AV.Integers Make bits_shru thm
R89961:89972 AV.Integers Make testbit_repr thm
R89961:89972 AV.Integers Make testbit_repr thm
R89961:89972 AV.Integers Make testbit_repr thm
R89991:90007 AV.Integers Make Ztestbit_two_p_m1 thm
R89991:90007 AV.Integers Make Ztestbit_two_p_m1 thm
R89991:90007 AV.Integers Make Ztestbit_two_p_m1 thm
R90058:90078 AV.Integers Make wordsize_max_unsigned thm
R90029:90041 AV.Integers Make unsigned_repr thm
R90029:90041 AV.Integers Make unsigned_repr thm
R90058:90078 AV.Integers Make wordsize_max_unsigned thm
R90029:90041 AV.Integers Make unsigned_repr thm
R90101:90103 AV.Coqlib <> zlt def
R90101:90103 AV.Coqlib <> zlt def
R90122:90129 AV.Coqlib <> zlt_true thm
R90122:90129 AV.Coqlib <> zlt_true thm
R90122:90129 AV.Coqlib <> zlt_true thm
R90149:90157 AV.Integers Make bits_mone thm
R90149:90157 AV.Integers Make bits_mone thm
R90149:90157 AV.Integers Make bits_mone thm
R90185:90193 AV.Coqlib <> zlt_false thm
R90185:90193 AV.Coqlib <> zlt_false thm
R90185:90193 AV.Coqlib <> zlt_false thm
R90229:90231 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R90221:90225 Coq.ZArith.Zpower <> two_p def
R90245:90257 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R90229:90231 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R90221:90225 Coq.ZArith.Zpower <> two_p def
R90245:90257 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R90275:90286 AV.Integers Make max_unsigned def
R90307:90310 AV.Integers Make shru def
R90318:90320 AV.Integers Make sub def
R90322:90330 AV.Integers Make iwordsize def
R90312:90315 AV.Integers Make zero def
R90341:90344 AV.Integers Make zero def
R90307:90310 AV.Integers Make shru def
R90318:90320 AV.Integers Make sub def
R90322:90330 AV.Integers Make iwordsize def
R90312:90315 AV.Integers Make zero def
R90341:90344 AV.Integers Make zero def
R90357:90364 AV.Integers Make add_zero thm
R90357:90364 AV.Integers Make add_zero thm
R90357:90364 AV.Integers Make add_zero thm
R90396:90398 AV.Coqlib <> zlt def
R90433:90441 AV.Integers Make zwordsize def
R90402:90404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R90405:90412 AV.Integers Make unsigned def
R90415:90417 AV.Integers Make sub def
R90419:90427 AV.Integers Make iwordsize def
R90396:90398 AV.Coqlib <> zlt def
R90433:90441 AV.Integers Make zwordsize def
R90402:90404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R90405:90412 AV.Integers Make unsigned def
R90415:90417 AV.Integers Make sub def
R90419:90427 AV.Integers Make iwordsize def
prf 90463:90472 Make Zdiv_shift
R90494:90499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90517:90519 Coq.Init.Logic <> :type_scope:x_'='_x not
R90500:90500 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R90512:90515 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R90502:90505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R90511:90511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R90501:90501 AV.Integers <> x var
R90507:90509 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90506:90506 AV.Integers <> y var
R90516:90516 AV.Integers <> y var
R90525:90527 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R90521:90523 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R90520:90520 AV.Integers <> x var
R90524:90524 AV.Integers <> y var
R90531:90533 AV.Coqlib <> zeq def
R90536:90543 Coq.ZArith.BinInt Z modulo def
R90547:90547 AV.Integers <> y var
R90545:90545 AV.Integers <> x var
R90490:90492 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R90489:90489 AV.Integers <> y var
R90596:90607 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R90596:90607 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R90629:90636 Coq.ZArith.Zdiv <> Z_mod_lt thm
R90629:90636 Coq.ZArith.Zdiv <> Z_mod_lt thm
R90659:90661 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R90659:90661 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R90677:90681 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R90677:90681 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R90706:90708 AV.Coqlib <> zeq def
R90706:90708 AV.Coqlib <> zeq def
R90743:90745 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90724:90734 AV.Coqlib <> Zdiv_unique thm
R90743:90745 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90724:90734 AV.Coqlib <> Zdiv_unique thm
R90813:90815 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90794:90804 AV.Coqlib <> Zdiv_unique thm
R90813:90815 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90794:90804 AV.Coqlib <> Zdiv_unique thm
prf 90859:90868 Make shrx_carry
R90922:90927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90936:90938 Coq.Init.Logic <> :type_scope:x_'='_x not
R90928:90931 AV.Integers Make shrx def
R90935:90935 AV.Integers <> y var
R90933:90933 AV.Integers <> x var
R90939:90941 AV.Integers Make add def
R90954:90962 AV.Integers Make shr_carry def
R90966:90966 AV.Integers <> y var
R90964:90964 AV.Integers <> x var
R90944:90946 AV.Integers Make shr def
R90950:90950 AV.Integers <> y var
R90948:90948 AV.Integers <> x var
R90915:90917 Coq.Init.Logic <> :type_scope:x_'='_x not
R90887:90889 AV.Integers Make ltu def
R90894:90897 AV.Integers Make repr def
R90909:90911 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R90900:90908 AV.Integers Make zwordsize def
R90891:90891 AV.Integers <> y var
R90918:90921 Coq.Init.Datatypes <> true constr
R90995:91002 AV.Integers Make shrx_shr thm
R90995:91002 AV.Integers Make shrx_shr thm
R90995:91002 AV.Integers Make shrx_shr thm
R90995:91002 AV.Integers Make shrx_shr thm
R91018:91026 AV.Integers Make shr_carry def
R91038:91039 AV.Integers Make lt def
R91053:91058 AV.Integers Make signed def
R91053:91058 AV.Integers Make signed def
R91072:91082 AV.Integers Make signed_zero thm
R91072:91082 AV.Integers Make signed_zero thm
R91072:91082 AV.Integers Make signed_zero thm
R91097:91099 AV.Coqlib <> zlt def
R91097:91099 AV.Coqlib <> zlt def
R91128:91135 AV.Integers Make add_zero thm
R91128:91135 AV.Integers Make add_zero thm
R91128:91135 AV.Integers Make add_zero thm
R91157:91164 AV.Integers Make unsigned def
R91157:91164 AV.Integers Make unsigned def
R91181:91184 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R91187:91189 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R91199:91201 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91190:91198 AV.Integers Make zwordsize def
R91181:91184 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R91187:91189 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R91199:91201 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91190:91198 AV.Integers Make zwordsize def
R91222:91228 AV.Integers Make ltu_inv thm
R91222:91228 AV.Integers Make ltu_inv thm
R91246:91258 AV.Integers Make unsigned_repr thm
R91246:91258 AV.Integers Make unsigned_repr thm
R91246:91258 AV.Integers Make unsigned_repr thm
R91246:91258 AV.Integers Make unsigned_repr thm
R91282:91293 AV.Integers Make wordsize_pos thm
R91295:91315 AV.Integers Make wordsize_max_unsigned thm
R91282:91293 AV.Integers Make wordsize_pos thm
R91295:91315 AV.Integers Make wordsize_max_unsigned thm
R91344:91346 Coq.Init.Logic <> :type_scope:x_'='_x not
R91335:91337 AV.Integers Make shl def
R91339:91341 AV.Integers Make one def
R91347:91350 AV.Integers Make repr def
R91353:91357 Coq.ZArith.Zpower <> two_p def
R91344:91346 Coq.Init.Logic <> :type_scope:x_'='_x not
R91335:91337 AV.Integers Make shl def
R91339:91341 AV.Integers Make one def
R91347:91350 AV.Integers Make repr def
R91353:91357 Coq.ZArith.Zpower <> two_p def
R91377:91389 AV.Integers Make shl_mul_two_p thm
R91377:91389 AV.Integers Make shl_mul_two_p thm
R91377:91389 AV.Integers Make shl_mul_two_p thm
R91400:91409 AV.Integers Make mul_commut thm
R91400:91409 AV.Integers Make mul_commut thm
R91400:91409 AV.Integers Make mul_commut thm
R91418:91424 AV.Integers Make mul_one thm
R91418:91424 AV.Integers Make mul_one thm
R91464:91466 Coq.Init.Logic <> :type_scope:x_'='_x not
R91437:91439 AV.Integers Make and def
R91444:91446 AV.Integers Make sub def
R91460:91462 AV.Integers Make one def
R91449:91451 AV.Integers Make shl def
R91453:91455 AV.Integers Make one def
R91467:91470 AV.Integers Make modu def
R91475:91478 AV.Integers Make repr def
R91481:91485 Coq.ZArith.Zpower <> two_p def
R91464:91466 Coq.Init.Logic <> :type_scope:x_'='_x not
R91437:91439 AV.Integers Make and def
R91444:91446 AV.Integers Make sub def
R91460:91462 AV.Integers Make one def
R91449:91451 AV.Integers Make shl def
R91453:91455 AV.Integers Make one def
R91467:91470 AV.Integers Make modu def
R91475:91478 AV.Integers Make repr def
R91481:91485 Coq.ZArith.Zpower <> two_p def
R91526:91533 AV.Integers Make modu_and thm
R91526:91533 AV.Integers Make modu_and thm
R91565:91579 AV.Integers Make is_power2_two_p thm
R91565:91579 AV.Integers Make is_power2_two_p thm
R91565:91579 AV.Integers Make is_power2_two_p thm
R91565:91579 AV.Integers Make is_power2_two_p thm
R91601:91613 AV.Integers Make repr_unsigned thm
R91601:91613 AV.Integers Make repr_unsigned thm
R91601:91613 AV.Integers Make repr_unsigned thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91676:91688 AV.Integers Make shr_div_two_p thm
R91727:91729 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R91719:91723 Coq.ZArith.Zpower <> two_p def
R91727:91729 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R91719:91723 Coq.ZArith.Zpower <> two_p def
R91740:91752 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R91740:91752 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R91780:91782 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91772:91776 Coq.ZArith.Zpower <> two_p def
R91783:91789 AV.Integers Make modulus def
R91780:91782 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91772:91776 Coq.ZArith.Zpower <> two_p def
R91783:91789 AV.Integers Make modulus def
R91805:91817 AV.Integers Make modulus_power thm
R91805:91817 AV.Integers Make modulus_power thm
R91805:91817 AV.Integers Make modulus_power thm
R91826:91846 AV.Coqlib <> two_p_monotone_strict thm
R91826:91846 AV.Coqlib <> two_p_monotone_strict thm
R91874:91876 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91866:91870 Coq.ZArith.Zpower <> two_p def
R91877:91888 AV.Integers Make half_modulus def
R91874:91876 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91866:91870 Coq.ZArith.Zpower <> two_p def
R91877:91888 AV.Integers Make half_modulus def
R91904:91921 AV.Integers Make half_modulus_power thm
R91904:91921 AV.Integers Make half_modulus_power thm
R91904:91921 AV.Integers Make half_modulus_power thm
R91934:91954 AV.Coqlib <> two_p_monotone_strict thm
R91934:91954 AV.Coqlib <> two_p_monotone_strict thm
R91981:91983 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91973:91977 Coq.ZArith.Zpower <> two_p def
R91984:91990 AV.Integers Make modulus def
R91981:91983 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91973:91977 Coq.ZArith.Zpower <> two_p def
R91984:91990 AV.Integers Make modulus def
R92006:92018 AV.Integers Make modulus_power thm
R92006:92018 AV.Integers Make modulus_power thm
R92006:92018 AV.Integers Make modulus_power thm
R92027:92047 AV.Coqlib <> two_p_monotone_strict thm
R92027:92047 AV.Coqlib <> two_p_monotone_strict thm
R92092:92094 Coq.Init.Logic <> :type_scope:x_'='_x not
R92067:92069 AV.Integers Make sub def
R92089:92091 AV.Integers Make one def
R92072:92075 AV.Integers Make repr def
R92078:92082 Coq.ZArith.Zpower <> two_p def
R92095:92098 AV.Integers Make repr def
R92109:92111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92101:92105 Coq.ZArith.Zpower <> two_p def
R92092:92094 Coq.Init.Logic <> :type_scope:x_'='_x not
R92067:92069 AV.Integers Make sub def
R92089:92091 AV.Integers Make one def
R92072:92075 AV.Integers Make repr def
R92078:92082 Coq.ZArith.Zpower <> two_p def
R92095:92098 AV.Integers Make repr def
R92109:92111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92101:92105 Coq.ZArith.Zpower <> two_p def
R92128:92130 AV.Integers Make sub def
R92139:92150 AV.Integers Make eqm_samerepr thm
R92139:92150 AV.Integers Make eqm_samerepr thm
R92159:92165 AV.Integers Make eqm_sub thm
R92159:92165 AV.Integers Make eqm_sub thm
R92174:92180 AV.Integers Make eqm_sym thm
R92189:92205 AV.Integers Make eqm_unsigned_repr thm
R92174:92180 AV.Integers Make eqm_sym thm
R92189:92205 AV.Integers Make eqm_unsigned_repr thm
R92220:92231 AV.Integers Make unsigned_one thm
R92220:92231 AV.Integers Make unsigned_one thm
R92220:92231 AV.Integers Make unsigned_one thm
R92240:92247 AV.Integers Make eqm_refl thm
R92240:92247 AV.Integers Make eqm_refl thm
R92272:92281 AV.Integers Make add_signed thm
R92272:92281 AV.Integers Make add_signed thm
R92272:92281 AV.Integers Make add_signed thm
R92304:92314 AV.Integers Make signed_repr thm
R92325:92327 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92317:92321 Coq.ZArith.Zpower <> two_p def
R92304:92314 AV.Integers Make signed_repr thm
R92325:92327 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92317:92321 Coq.ZArith.Zpower <> two_p def
R92304:92314 AV.Integers Make signed_repr thm
R92325:92327 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92317:92321 Coq.ZArith.Zpower <> two_p def
R92304:92314 AV.Integers Make signed_repr thm
R92325:92327 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92317:92321 Coq.ZArith.Zpower <> two_p def
R92341:92351 AV.Integers Make signed_repr thm
R92341:92351 AV.Integers Make signed_repr thm
R92341:92351 AV.Integers Make signed_repr thm
R92341:92351 AV.Integers Make signed_repr thm
R92363:92366 AV.Integers Make modu def
R92377:92389 AV.Integers Make unsigned_repr thm
R92377:92389 AV.Integers Make unsigned_repr thm
R92377:92389 AV.Integers Make unsigned_repr thm
R92377:92389 AV.Integers Make unsigned_repr thm
R92401:92402 AV.Integers Make eq def
R92413:92425 AV.Integers Make unsigned_zero thm
R92413:92425 AV.Integers Make unsigned_zero thm
R92413:92425 AV.Integers Make unsigned_zero thm
R92436:92448 AV.Integers Make unsigned_repr thm
R92436:92448 AV.Integers Make unsigned_repr thm
R92436:92448 AV.Integers Make unsigned_repr thm
R92436:92448 AV.Integers Make unsigned_repr thm
R92484:92486 Coq.Init.Logic <> :type_scope:x_'='_x not
R92471:92475 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92461:92468 AV.Integers Make unsigned def
R92476:92480 Coq.ZArith.Zpower <> two_p def
R92489:92493 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92494:92498 Coq.ZArith.Zpower <> two_p def
R92484:92486 Coq.Init.Logic <> :type_scope:x_'='_x not
R92471:92475 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92461:92468 AV.Integers Make unsigned def
R92476:92480 Coq.ZArith.Zpower <> two_p def
R92489:92493 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92494:92498 Coq.ZArith.Zpower <> two_p def
R92515:92526 AV.Integers Make eqmod_mod_eq thm
R92515:92526 AV.Integers Make eqmod_mod_eq thm
R92560:92566 AV.Integers Make modulus def
R92541:92553 AV.Integers Make eqmod_divides thm
R92560:92566 AV.Integers Make modulus def
R92541:92553 AV.Integers Make eqmod_divides thm
R92578:92580 AV.Integers Make eqm def
R92578:92580 AV.Integers Make eqm def
R92600:92606 AV.Integers Make eqm_sym thm
R92600:92606 AV.Integers Make eqm_sym thm
R92615:92633 AV.Integers Make eqm_signed_unsigned thm
R92615:92633 AV.Integers Make eqm_signed_unsigned thm
R92647:92653 AV.Integers Make modulus def
R92664:92682 AV.Coqlib <> two_power_nat_two_p thm
R92664:92682 AV.Coqlib <> two_power_nat_two_p thm
R92664:92682 AV.Coqlib <> two_power_nat_two_p thm
R92697:92701 Coq.ZArith.Zpower <> two_p def
R92713:92715 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92704:92712 AV.Integers Make zwordsize def
R92697:92701 Coq.ZArith.Zpower <> two_p def
R92713:92715 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92704:92712 AV.Integers Make zwordsize def
R92733:92744 Coq.ZArith.Zpower <> two_p_is_exp thm
R92733:92744 Coq.ZArith.Zpower <> two_p_is_exp thm
R92733:92744 Coq.ZArith.Zpower <> two_p_is_exp thm
R92733:92744 Coq.ZArith.Zpower <> two_p_is_exp thm
R92733:92744 Coq.ZArith.Zpower <> two_p_is_exp thm
R92765:92773 AV.Integers Make zwordsize def
R92765:92773 AV.Integers Make zwordsize def
R92819:92828 AV.Integers Make Zdiv_shift thm
R92819:92828 AV.Integers Make Zdiv_shift thm
R92819:92828 AV.Integers Make Zdiv_shift thm
R92819:92828 AV.Integers Make Zdiv_shift thm
R92846:92848 AV.Integers Make add def
R92857:92868 AV.Integers Make eqm_samerepr thm
R92857:92868 AV.Integers Make eqm_samerepr thm
R92877:92883 AV.Integers Make eqm_add thm
R92877:92883 AV.Integers Make eqm_add thm
R92894:92910 AV.Integers Make eqm_unsigned_repr thm
R92894:92910 AV.Integers Make eqm_unsigned_repr thm
R92925:92927 AV.Coqlib <> zeq def
R92932:92936 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92937:92941 Coq.ZArith.Zpower <> two_p def
R92925:92927 AV.Coqlib <> zeq def
R92932:92936 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R92937:92941 Coq.ZArith.Zpower <> two_p def
R92968:92980 AV.Integers Make unsigned_zero thm
R92968:92980 AV.Integers Make unsigned_zero thm
R92968:92980 AV.Integers Make unsigned_zero thm
R92989:92996 AV.Integers Make eqm_refl thm
R92989:92996 AV.Integers Make eqm_refl thm
R93009:93020 AV.Integers Make unsigned_one thm
R93009:93020 AV.Integers Make unsigned_one thm
R93009:93020 AV.Integers Make unsigned_one thm
R93029:93036 AV.Integers Make eqm_refl thm
R93029:93036 AV.Integers Make eqm_refl thm
R93053:93060 Coq.ZArith.Zdiv <> Z_mod_lt thm
R93076:93080 Coq.ZArith.Zpower <> two_p def
R93063:93070 AV.Integers Make unsigned def
R93053:93060 Coq.ZArith.Zdiv <> Z_mod_lt thm
R93076:93080 Coq.ZArith.Zpower <> two_p def
R93063:93070 AV.Integers Make unsigned def
R93098:93109 AV.Integers Make max_unsigned def
R93128:93139 AV.Integers Make max_unsigned def
R93163:93174 AV.Integers Make signed_range thm
R93163:93174 AV.Integers Make signed_range thm
R93218:93227 AV.Integers Make max_signed def
R93250:93263 AV.Integers Make min_signed_neg thm
R93250:93263 AV.Integers Make min_signed_neg thm
R93273:93282 AV.Integers Make max_signed def
prf 93350:93366 Make shr_shru_positive
R93398:93403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93411:93413 Coq.Init.Logic <> :type_scope:x_'='_x not
R93404:93406 AV.Integers Make shr def
R93410:93410 AV.Integers <> y var
R93408:93408 AV.Integers <> x var
R93414:93417 AV.Integers Make shru def
R93421:93421 AV.Integers <> y var
R93419:93419 AV.Integers <> x var
R93393:93396 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R93385:93390 AV.Integers Make signed def
R93392:93392 AV.Integers <> x var
R93451:93463 AV.Integers Make shr_div_two_p thm
R93451:93463 AV.Integers Make shr_div_two_p thm
R93451:93463 AV.Integers Make shr_div_two_p thm
R93474:93487 AV.Integers Make shru_div_two_p thm
R93474:93487 AV.Integers Make shru_div_two_p thm
R93474:93487 AV.Integers Make shru_div_two_p thm
R93500:93517 AV.Integers Make signed_eq_unsigned thm
R93500:93517 AV.Integers Make signed_eq_unsigned thm
R93500:93517 AV.Integers Make signed_eq_unsigned thm
R93500:93517 AV.Integers Make signed_eq_unsigned thm
R93532:93546 AV.Integers Make signed_positive thm
R93532:93546 AV.Integers Make signed_positive thm
prf 93567:93578 Make and_positive
R93608:93611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93628:93631 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R93612:93617 AV.Integers Make signed def
R93620:93622 AV.Integers Make and def
R93626:93626 AV.Integers <> y var
R93624:93624 AV.Integers <> x var
R93603:93606 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R93595:93600 AV.Integers Make signed def
R93602:93602 AV.Integers <> y var
R93672:93674 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R93662:93669 AV.Integers Make unsigned def
R93675:93686 AV.Integers Make half_modulus def
R93672:93674 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R93662:93669 AV.Integers Make unsigned def
R93675:93686 AV.Integers Make half_modulus def
R93698:93712 AV.Integers Make signed_positive thm
R93698:93712 AV.Integers Make signed_positive thm
R93698:93712 AV.Integers Make signed_positive thm
R93727:93736 AV.Integers Make max_signed def
R93765:93784 AV.Integers Make sign_bit_of_unsigned thm
R93765:93784 AV.Integers Make sign_bit_of_unsigned thm
R93798:93805 AV.Coqlib <> zlt_true thm
R93798:93805 AV.Coqlib <> zlt_true thm
R93798:93805 AV.Coqlib <> zlt_true thm
R93798:93805 AV.Coqlib <> zlt_true thm
R93838:93857 AV.Integers Make sign_bit_of_unsigned thm
R93860:93862 AV.Integers Make and def
R93838:93857 AV.Integers Make sign_bit_of_unsigned thm
R93860:93862 AV.Integers Make and def
R93879:93886 AV.Integers Make bits_and thm
R93879:93886 AV.Integers Make bits_and thm
R93879:93886 AV.Integers Make bits_and thm
R93879:93886 AV.Integers Make bits_and thm
R93910:93921 Coq.Bool.Bool <> andb_false_r thm
R93910:93921 Coq.Bool.Bool <> andb_false_r thm
R93910:93921 Coq.Bool.Bool <> andb_false_r thm
R93931:93936 AV.Integers Make signed def
R93951:93953 AV.Coqlib <> zlt def
R93976:93987 AV.Integers Make half_modulus def
R93956:93963 AV.Integers Make unsigned def
R93966:93968 AV.Integers Make and def
R93951:93953 AV.Coqlib <> zlt def
R93976:93987 AV.Integers Make half_modulus def
R93956:93963 AV.Integers Make unsigned def
R93966:93968 AV.Integers Make and def
R94013:94026 AV.Integers Make unsigned_range thm
R94029:94031 AV.Integers Make and def
R94013:94026 AV.Integers Make unsigned_range thm
R94029:94031 AV.Integers Make and def
R94074:94085 AV.Integers Make wordsize_pos thm
R94074:94085 AV.Integers Make wordsize_pos thm
prf 94109:94127 Make shr_and_is_shru_and
R94165:94168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94184:94186 Coq.Init.Logic <> :type_scope:x_'='_x not
R94169:94171 AV.Integers Make shr def
R94183:94183 AV.Integers <> z var
R94174:94176 AV.Integers Make and def
R94180:94180 AV.Integers <> y var
R94178:94178 AV.Integers <> x var
R94187:94190 AV.Integers Make shru def
R94202:94202 AV.Integers <> z var
R94193:94195 AV.Integers Make and def
R94199:94199 AV.Integers <> y var
R94197:94197 AV.Integers <> x var
R94157:94159 Coq.Init.Logic <> :type_scope:x_'='_x not
R94148:94149 AV.Integers Make lt def
R94153:94156 AV.Integers Make zero def
R94151:94151 AV.Integers <> y var
R94160:94164 Coq.Init.Datatypes <> false constr
R94228:94244 AV.Integers Make shr_shru_positive thm
R94228:94244 AV.Integers Make shr_shru_positive thm
R94253:94264 AV.Integers Make and_positive thm
R94253:94264 AV.Integers Make and_positive thm
R94276:94277 AV.Integers Make lt def
R94293:94303 AV.Integers Make signed_zero thm
R94293:94303 AV.Integers Make signed_zero thm
R94293:94303 AV.Integers Make signed_zero thm
R94321:94323 AV.Coqlib <> zlt def
R94326:94331 AV.Integers Make signed def
R94321:94323 AV.Coqlib <> zlt def
R94326:94331 AV.Integers Make signed def
prf 94438:94447 Make Ziter_base
R94476:94479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94480:94480 AV.Integers <> A var
R94475:94475 AV.Integers <> A var
R94492:94495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94508:94510 Coq.Init.Logic <> :type_scope:x_'='_x not
R94496:94501 Coq.ZArith.BinInt Z iter def
R94507:94507 AV.Integers <> x var
R94505:94505 AV.Integers <> f var
R94503:94503 AV.Integers <> n var
R94511:94511 AV.Integers <> x var
R94487:94490 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R94486:94486 AV.Integers <> n var
R94538:94543 Coq.ZArith.BinInt Z iter def
prf 94604:94613 Make Ziter_succ
R94642:94645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94646:94646 AV.Integers <> A var
R94641:94641 AV.Integers <> A var
R94660:94663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94685:94687 Coq.Init.Logic <> :type_scope:x_'='_x not
R94664:94669 Coq.ZArith.BinInt Z iter def
R94684:94684 AV.Integers <> x var
R94682:94682 AV.Integers <> f var
R94672:94677 Coq.ZArith.BinInt Z succ def
R94679:94679 AV.Integers <> n var
R94688:94688 AV.Integers <> f var
R94691:94696 Coq.ZArith.BinInt Z iter def
R94702:94702 AV.Integers <> x var
R94700:94700 AV.Integers <> f var
R94698:94698 AV.Integers <> n var
R94655:94658 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R94659:94659 AV.Integers <> n var
R94764:94774 Coq.PArith.BinPos Pos add_1_r thm
R94764:94774 Coq.PArith.BinPos Pos add_1_r thm
R94764:94774 Coq.PArith.BinPos Pos add_1_r thm
R94783:94795 Coq.PArith.BinPos Pos iter_succ thm
R94783:94795 Coq.PArith.BinPos Pos iter_succ thm
prf 94842:94853 Make Znatlike_ind
R94870:94873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94869:94869 Coq.Numbers.BinNums <> Z ind
R94883:94883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94907:94913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94914:94914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94954:94960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94971:94971 AV.Integers <> P var
R94973:94973 AV.Integers <> n var
R94931:94934 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94938:94941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94942:94942 AV.Integers <> P var
R94945:94950 Coq.ZArith.BinInt Z succ def
R94952:94952 AV.Integers <> n var
R94935:94935 AV.Integers <> P var
R94937:94937 AV.Integers <> n var
R94926:94929 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R94930:94930 AV.Integers <> n var
R94900:94903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94904:94904 AV.Integers <> P var
R94906:94906 AV.Integers <> n var
R94895:94898 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R94894:94894 AV.Integers <> n var
R95003:95005 AV.Coqlib <> zle def
R95003:95005 AV.Coqlib <> zle def
R95021:95031 Coq.ZArith.Wf_Z <> natlike_ind thm
R95021:95031 Coq.ZArith.Wf_Z <> natlike_ind thm
prf 95086:95099 Make Zzero_ext_spec
R95124:95129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95157:95159 Coq.Init.Logic <> :type_scope:x_'='_x not
R95130:95138 Coq.ZArith.BinInt Z testbit def
R95156:95156 AV.Integers <> i var
R95141:95149 AV.Integers Make Zzero_ext def
R95153:95153 AV.Integers <> x var
R95151:95151 AV.Integers <> n var
R95163:95165 AV.Coqlib <> zlt def
R95169:95169 AV.Integers <> n var
R95167:95167 AV.Integers <> i var
R95195:95199 Coq.Init.Datatypes <> false constr
R95176:95184 Coq.ZArith.BinInt Z testbit def
R95188:95188 AV.Integers <> i var
R95186:95186 AV.Integers <> x var
R95119:95122 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R95123:95123 AV.Integers <> i var
R95218:95226 AV.Integers Make Zzero_ext def
R95247:95258 AV.Integers Make Znatlike_ind thm
R95247:95258 AV.Integers Make Znatlike_ind thm
R95281:95290 AV.Integers Make Ziter_base thm
R95281:95290 AV.Integers Make Ziter_base thm
R95281:95290 AV.Integers Make Ziter_base thm
R95281:95290 AV.Integers Make Ziter_base thm
R95311:95319 AV.Coqlib <> zlt_false thm
R95311:95319 AV.Coqlib <> zlt_false thm
R95311:95319 AV.Coqlib <> zlt_false thm
R95311:95319 AV.Coqlib <> zlt_false thm
R95330:95339 AV.Integers Make Ztestbit_0 thm
R95330:95339 AV.Integers Make Ztestbit_0 thm
R95330:95339 AV.Integers Make Ztestbit_0 thm
R95375:95384 AV.Integers Make Ziter_succ thm
R95375:95384 AV.Integers Make Ziter_succ thm
R95375:95384 AV.Integers Make Ziter_succ thm
R95375:95384 AV.Integers Make Ziter_succ thm
R95405:95420 AV.Integers Make Ztestbit_shiftin thm
R95405:95420 AV.Integers Make Ztestbit_shiftin thm
R95405:95420 AV.Integers Make Ztestbit_shiftin thm
R95405:95420 AV.Integers Make Ztestbit_shiftin thm
R95442:95452 AV.Integers Make Ztestbit_eq thm
R95442:95452 AV.Integers Make Ztestbit_eq thm
R95442:95452 AV.Integers Make Ztestbit_eq thm
R95442:95452 AV.Integers Make Ztestbit_eq thm
R95480:95482 AV.Coqlib <> zeq def
R95480:95482 AV.Coqlib <> zeq def
R95513:95520 AV.Coqlib <> zlt_true thm
R95513:95520 AV.Coqlib <> zlt_true thm
R95513:95520 AV.Coqlib <> zlt_true thm
R95513:95520 AV.Coqlib <> zlt_true thm
R95565:95567 AV.Coqlib <> zlt def
R95570:95575 Coq.ZArith.BinInt Z pred def
R95565:95567 AV.Coqlib <> zlt def
R95570:95575 Coq.ZArith.BinInt Z pred def
R95598:95605 AV.Coqlib <> zlt_true thm
R95598:95605 AV.Coqlib <> zlt_true thm
R95598:95605 AV.Coqlib <> zlt_true thm
R95598:95605 AV.Coqlib <> zlt_true thm
R95635:95643 AV.Coqlib <> zlt_false thm
R95635:95643 AV.Coqlib <> zlt_false thm
R95635:95643 AV.Coqlib <> zlt_false thm
R95635:95643 AV.Coqlib <> zlt_false thm
prf 95684:95696 Make bits_zero_ext
R95721:95726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95751:95753 Coq.Init.Logic <> :type_scope:x_'='_x not
R95727:95733 AV.Integers Make testbit def
R95750:95750 AV.Integers <> i var
R95736:95743 AV.Integers Make zero_ext def
R95747:95747 AV.Integers <> x var
R95745:95745 AV.Integers <> n var
R95757:95759 AV.Coqlib <> zlt def
R95763:95763 AV.Integers <> n var
R95761:95761 AV.Integers <> i var
R95787:95791 Coq.Init.Datatypes <> false constr
R95770:95776 AV.Integers Make testbit def
R95780:95780 AV.Integers <> i var
R95778:95778 AV.Integers <> x var
R95716:95719 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R95720:95720 AV.Integers <> i var
R95818:95825 AV.Integers Make zero_ext def
R95838:95840 AV.Coqlib <> zlt def
R95844:95852 AV.Integers Make zwordsize def
R95838:95840 AV.Coqlib <> zlt def
R95844:95852 AV.Integers Make zwordsize def
R95866:95877 AV.Integers Make testbit_repr thm
R95866:95877 AV.Integers Make testbit_repr thm
R95866:95877 AV.Integers Make testbit_repr thm
R95866:95877 AV.Integers Make testbit_repr thm
R95894:95907 AV.Integers Make Zzero_ext_spec thm
R95894:95907 AV.Integers Make Zzero_ext_spec thm
R95894:95907 AV.Integers Make Zzero_ext_spec thm
R95894:95907 AV.Integers Make Zzero_ext_spec thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95933:95942 AV.Integers Make bits_above thm
R95961:95963 AV.Coqlib <> zlt def
R95961:95963 AV.Coqlib <> zlt def
prf 95989:96002 Make Zsign_ext_spec
R96027:96030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96036:96041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96069:96071 Coq.Init.Logic <> :type_scope:x_'='_x not
R96042:96050 Coq.ZArith.BinInt Z testbit def
R96068:96068 AV.Integers <> i var
R96053:96061 AV.Integers Make Zsign_ext def
R96065:96065 AV.Integers <> x var
R96063:96063 AV.Integers <> n var
R96072:96080 Coq.ZArith.BinInt Z testbit def
R96088:96090 AV.Coqlib <> zlt def
R96094:96094 AV.Integers <> n var
R96092:96092 AV.Integers <> i var
R96109:96111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96108:96108 AV.Integers <> n var
R96101:96101 AV.Integers <> i var
R96082:96082 AV.Integers <> x var
R96032:96034 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R96035:96035 AV.Integers <> n var
R96022:96025 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R96026:96026 AV.Integers <> i var
R96181:96199 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R96181:96199 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R96227:96235 AV.Integers Make Zsign_ext def
R96260:96262 AV.Coqlib <> zeq def
R96260:96262 AV.Coqlib <> zeq def
R96310:96312 AV.Coqlib <> zlt def
R96310:96312 AV.Coqlib <> zlt def
R96355:96367 AV.Integers Make Ztestbit_base thm
R96355:96367 AV.Integers Make Ztestbit_base thm
R96355:96367 AV.Integers Make Ztestbit_base thm
R96386:96390 Coq.ZArith.BinInt Z odd def
R96386:96390 Coq.ZArith.BinInt Z odd def
R96409:96419 AV.Integers Make Ztestbit_m1 thm
R96409:96419 AV.Integers Make Ztestbit_m1 thm
R96440:96449 AV.Integers Make Ztestbit_0 thm
R96440:96449 AV.Integers Make Ztestbit_0 thm
R96468:96470 AV.Coqlib <> zlt def
R96468:96470 AV.Coqlib <> zlt def
R96502:96507 Coq.ZArith.BinInt Z pred def
R96502:96507 Coq.ZArith.BinInt Z pred def
R96530:96535 Coq.ZArith.BinInt Z succ def
R96538:96543 Coq.ZArith.BinInt Z pred def
R96530:96535 Coq.ZArith.BinInt Z succ def
R96538:96543 Coq.ZArith.BinInt Z pred def
R96565:96574 AV.Integers Make Ziter_succ thm
R96565:96574 AV.Integers Make Ziter_succ thm
R96565:96574 AV.Integers Make Ziter_succ thm
R96565:96574 AV.Integers Make Ziter_succ thm
R96585:96600 AV.Integers Make Ztestbit_shiftin thm
R96585:96600 AV.Integers Make Ztestbit_shiftin thm
R96585:96600 AV.Integers Make Ztestbit_shiftin thm
R96585:96600 AV.Integers Make Ztestbit_shiftin thm
R96619:96621 AV.Coqlib <> zeq def
R96619:96621 AV.Coqlib <> zeq def
R96654:96661 AV.Coqlib <> zlt_true thm
R96654:96661 AV.Coqlib <> zlt_true thm
R96654:96661 AV.Coqlib <> zlt_true thm
R96654:96661 AV.Coqlib <> zlt_true thm
R96672:96684 AV.Integers Make Ztestbit_base thm
R96672:96684 AV.Integers Make Ztestbit_base thm
R96672:96684 AV.Integers Make Ztestbit_base thm
R96740:96742 AV.Coqlib <> zlt def
R96756:96761 Coq.ZArith.BinInt Z pred def
R96745:96750 Coq.ZArith.BinInt Z pred def
R96740:96742 AV.Coqlib <> zlt def
R96756:96761 Coq.ZArith.BinInt Z pred def
R96745:96750 Coq.ZArith.BinInt Z pred def
R96784:96791 AV.Coqlib <> zlt_true thm
R96784:96791 AV.Coqlib <> zlt_true thm
R96784:96791 AV.Coqlib <> zlt_true thm
R96784:96791 AV.Coqlib <> zlt_true thm
R96803:96813 AV.Integers Make Ztestbit_eq thm
R96803:96813 AV.Integers Make Ztestbit_eq thm
R96803:96813 AV.Integers Make Ztestbit_eq thm
R96803:96813 AV.Integers Make Ztestbit_eq thm
R96836:96844 AV.Coqlib <> zeq_false thm
R96836:96844 AV.Coqlib <> zeq_false thm
R96836:96844 AV.Coqlib <> zeq_false thm
R96836:96844 AV.Coqlib <> zeq_false thm
R96876:96884 AV.Coqlib <> zlt_false thm
R96876:96884 AV.Coqlib <> zlt_false thm
R96876:96884 AV.Coqlib <> zlt_false thm
R96876:96884 AV.Coqlib <> zlt_false thm
R96896:96906 AV.Integers Make Ztestbit_eq thm
R96910:96912 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96896:96906 AV.Integers Make Ztestbit_eq thm
R96910:96912 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96896:96906 AV.Integers Make Ztestbit_eq thm
R96910:96912 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96896:96906 AV.Integers Make Ztestbit_eq thm
R96910:96912 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96929:96937 AV.Coqlib <> zeq_false thm
R96929:96937 AV.Coqlib <> zeq_false thm
R96929:96937 AV.Coqlib <> zeq_false thm
R96929:96937 AV.Coqlib <> zeq_false thm
prf 97079:97091 Make bits_sign_ext
R97128:97131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97137:97142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97167:97169 Coq.Init.Logic <> :type_scope:x_'='_x not
R97143:97149 AV.Integers Make testbit def
R97166:97166 AV.Integers <> i var
R97152:97159 AV.Integers Make sign_ext def
R97163:97163 AV.Integers <> x var
R97161:97161 AV.Integers <> n var
R97170:97176 AV.Integers Make testbit def
R97184:97186 AV.Coqlib <> zlt def
R97190:97190 AV.Integers <> n var
R97188:97188 AV.Integers <> i var
R97205:97207 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R97204:97204 AV.Integers <> n var
R97197:97197 AV.Integers <> i var
R97178:97178 AV.Integers <> x var
R97133:97135 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R97136:97136 AV.Integers <> n var
R97111:97114 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97116:97118 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97115:97115 AV.Integers <> i var
R97115:97115 AV.Integers <> i var
R97119:97127 AV.Integers Make zwordsize def
R97236:97243 AV.Integers Make sign_ext def
R97256:97267 AV.Integers Make testbit_repr thm
R97256:97267 AV.Integers Make testbit_repr thm
R97256:97267 AV.Integers Make testbit_repr thm
R97256:97267 AV.Integers Make testbit_repr thm
R97284:97297 AV.Integers Make Zsign_ext_spec thm
R97284:97297 AV.Integers Make Zsign_ext_spec thm
R97284:97297 AV.Integers Make Zsign_ext_spec thm
R97284:97297 AV.Integers Make Zsign_ext_spec thm
R97284:97297 AV.Integers Make Zsign_ext_spec thm
R97310:97312 AV.Coqlib <> zlt def
R97310:97312 AV.Coqlib <> zlt def
R97360:97372 AV.Integers Make bits_zero_ext thm
R97374:97386 AV.Integers Make bits_sign_ext thm
prf 97404:97417 Make zero_ext_above
R97448:97451 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97464:97466 Coq.Init.Logic <> :type_scope:x_'='_x not
R97452:97459 AV.Integers Make zero_ext def
R97463:97463 AV.Integers <> x var
R97461:97461 AV.Integers <> n var
R97467:97467 AV.Integers <> x var
R97435:97438 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R97434:97434 AV.Integers <> n var
R97439:97447 AV.Integers Make zwordsize def
R97493:97504 AV.Integers Make same_bits_eq thm
R97493:97504 AV.Integers Make same_bits_eq thm
R97525:97537 AV.Integers Make bits_zero_ext thm
R97525:97537 AV.Integers Make bits_zero_ext thm
R97525:97537 AV.Integers Make bits_zero_ext thm
R97525:97537 AV.Integers Make bits_zero_ext thm
R97546:97553 AV.Coqlib <> zlt_true thm
R97546:97553 AV.Coqlib <> zlt_true thm
prf 97584:97597 Make sign_ext_above
R97628:97631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97644:97646 Coq.Init.Logic <> :type_scope:x_'='_x not
R97632:97639 AV.Integers Make sign_ext def
R97643:97643 AV.Integers <> x var
R97641:97641 AV.Integers <> n var
R97647:97647 AV.Integers <> x var
R97615:97618 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R97614:97614 AV.Integers <> n var
R97619:97627 AV.Integers Make zwordsize def
R97673:97684 AV.Integers Make same_bits_eq thm
R97673:97684 AV.Integers Make same_bits_eq thm
R97704:97711 AV.Integers Make sign_ext def
R97722:97733 AV.Integers Make testbit_repr thm
R97722:97733 AV.Integers Make testbit_repr thm
R97722:97733 AV.Integers Make testbit_repr thm
R97722:97733 AV.Integers Make testbit_repr thm
R97752:97765 AV.Integers Make Zsign_ext_spec thm
R97752:97765 AV.Integers Make Zsign_ext_spec thm
R97752:97765 AV.Integers Make Zsign_ext_spec thm
R97752:97765 AV.Integers Make Zsign_ext_spec thm
R97752:97765 AV.Integers Make Zsign_ext_spec thm
R97776:97783 AV.Coqlib <> zlt_true thm
R97776:97783 AV.Coqlib <> zlt_true thm
R97776:97783 AV.Coqlib <> zlt_true thm
R97776:97783 AV.Coqlib <> zlt_true thm
prf 97827:97838 Make zero_ext_and
R97861:97864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97877:97879 Coq.Init.Logic <> :type_scope:x_'='_x not
R97865:97872 AV.Integers Make zero_ext def
R97876:97876 AV.Integers <> x var
R97874:97874 AV.Integers <> n var
R97880:97882 AV.Integers Make and def
R97887:97890 AV.Integers Make repr def
R97900:97902 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R97893:97897 Coq.ZArith.Zpower <> two_p def
R97899:97899 AV.Integers <> n var
R97884:97884 AV.Integers <> x var
R97856:97859 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R97860:97860 AV.Integers <> n var
R97936:97947 AV.Integers Make testbit_repr thm
R97936:97947 AV.Integers Make testbit_repr thm
R97936:97947 AV.Integers Make testbit_repr thm
R97936:97947 AV.Integers Make testbit_repr thm
R97964:97980 AV.Integers Make Ztestbit_two_p_m1 thm
R97964:97980 AV.Integers Make Ztestbit_two_p_m1 thm
R97964:97980 AV.Integers Make Ztestbit_two_p_m1 thm
R97964:97980 AV.Integers Make Ztestbit_two_p_m1 thm
R97964:97980 AV.Integers Make Ztestbit_two_p_m1 thm
R98006:98008 AV.Coqlib <> zlt def
R98006:98008 AV.Coqlib <> zlt def
R98026:98036 Coq.Bool.Bool <> andb_true_r thm
R98026:98036 Coq.Bool.Bool <> andb_true_r thm
R98026:98036 Coq.Bool.Bool <> andb_true_r thm
R98055:98066 Coq.Bool.Bool <> andb_false_r thm
R98055:98066 Coq.Bool.Bool <> andb_false_r thm
R98055:98066 Coq.Bool.Bool <> andb_false_r thm
prf 98098:98109 Make zero_ext_mod
R98144:98149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R98173:98175 Coq.Init.Logic <> :type_scope:x_'='_x not
R98150:98157 AV.Integers Make unsigned def
R98160:98167 AV.Integers Make zero_ext def
R98171:98171 AV.Integers <> x var
R98169:98169 AV.Integers <> n var
R98176:98183 Coq.ZArith.BinInt Z modulo def
R98199:98203 Coq.ZArith.Zpower <> two_p def
R98205:98205 AV.Integers <> n var
R98186:98193 AV.Integers Make unsigned def
R98195:98195 AV.Integers <> x var
R98127:98130 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98132:98134 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98131:98131 AV.Integers <> n var
R98131:98131 AV.Integers <> n var
R98135:98143 AV.Integers Make zwordsize def
R98232:98246 AV.Integers Make equal_same_bits thm
R98232:98246 AV.Integers Make equal_same_bits thm
R98267:98284 AV.Integers Make Ztestbit_mod_two_p thm
R98267:98284 AV.Integers Make Ztestbit_mod_two_p thm
R98267:98284 AV.Integers Make Ztestbit_mod_two_p thm
R98267:98284 AV.Integers Make Ztestbit_mod_two_p thm
R98267:98284 AV.Integers Make Ztestbit_mod_two_p thm
R98301:98307 AV.Integers Make testbit def
R98310:98317 AV.Integers Make zero_ext def
R98301:98307 AV.Integers Make testbit def
R98310:98317 AV.Integers Make zero_ext def
R98340:98342 AV.Coqlib <> zlt def
R98346:98354 AV.Integers Make zwordsize def
R98340:98342 AV.Coqlib <> zlt def
R98346:98354 AV.Integers Make zwordsize def
R98368:98380 AV.Integers Make bits_zero_ext thm
R98368:98380 AV.Integers Make bits_zero_ext thm
R98368:98380 AV.Integers Make bits_zero_ext thm
R98368:98380 AV.Integers Make bits_zero_ext thm
R98399:98408 AV.Integers Make bits_above thm
R98399:98408 AV.Integers Make bits_above thm
R98399:98408 AV.Integers Make bits_above thm
R98399:98408 AV.Integers Make bits_above thm
R98419:98427 AV.Coqlib <> zlt_false thm
R98419:98427 AV.Coqlib <> zlt_false thm
R98419:98427 AV.Coqlib <> zlt_false thm
R98419:98427 AV.Coqlib <> zlt_false thm
prf 98473:98486 Make zero_ext_widen
R98518:98523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R98550:98552 Coq.Init.Logic <> :type_scope:x_'='_x not
R98524:98531 AV.Integers Make zero_ext def
R98537:98544 AV.Integers Make zero_ext def
R98548:98548 AV.Integers <> x var
R98546:98546 AV.Integers <> n var
R98533:98534 AV.Integers <> n' var
R98553:98560 AV.Integers Make zero_ext def
R98564:98564 AV.Integers <> x var
R98562:98562 AV.Integers <> n var
R98507:98510 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R98512:98515 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R98511:98511 AV.Integers <> n var
R98511:98511 AV.Integers <> n var
R98516:98517 AV.Integers <> n' var
R98597:98599 AV.Coqlib <> zlt def
R98597:98599 AV.Coqlib <> zlt def
R98615:98622 AV.Coqlib <> zlt_true thm
R98615:98622 AV.Coqlib <> zlt_true thm
R98644:98646 AV.Coqlib <> zlt def
R98644:98646 AV.Coqlib <> zlt def
prf 98691:98704 Make sign_ext_widen
R98736:98741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R98768:98770 Coq.Init.Logic <> :type_scope:x_'='_x not
R98742:98749 AV.Integers Make sign_ext def
R98755:98762 AV.Integers Make sign_ext def
R98766:98766 AV.Integers <> x var
R98764:98764 AV.Integers <> n var
R98751:98752 AV.Integers <> n' var
R98771:98778 AV.Integers Make sign_ext def
R98782:98782 AV.Integers <> x var
R98780:98780 AV.Integers <> n var
R98725:98727 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R98729:98733 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R98728:98728 AV.Integers <> n var
R98728:98728 AV.Integers <> n var
R98734:98735 AV.Integers <> n' var
R98812:98814 AV.Coqlib <> zlt def
R98819:98827 AV.Integers Make zwordsize def
R98812:98814 AV.Coqlib <> zlt def
R98819:98827 AV.Integers Make zwordsize def
R98854:98856 AV.Coqlib <> zlt def
R98854:98856 AV.Coqlib <> zlt def
R98884:98892 AV.Coqlib <> zlt_false thm
R98884:98892 AV.Coqlib <> zlt_false thm
R98884:98892 AV.Coqlib <> zlt_false thm
R98884:98892 AV.Coqlib <> zlt_false thm
R98914:98916 AV.Coqlib <> zlt def
R98921:98923 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98914:98916 AV.Coqlib <> zlt def
R98921:98923 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98975:98977 AV.Coqlib <> zlt def
R98975:98977 AV.Coqlib <> zlt def
R99017:99030 AV.Integers Make sign_ext_above thm
R99017:99030 AV.Integers Make sign_ext_above thm
prf 99053:99071 Make sign_zero_ext_widen
R99102:99107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99134:99136 Coq.Init.Logic <> :type_scope:x_'='_x not
R99108:99115 AV.Integers Make sign_ext def
R99121:99128 AV.Integers Make zero_ext def
R99132:99132 AV.Integers <> x var
R99130:99130 AV.Integers <> n var
R99117:99118 AV.Integers <> n' var
R99137:99144 AV.Integers Make zero_ext def
R99148:99148 AV.Integers <> x var
R99146:99146 AV.Integers <> n var
R99092:99095 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R99097:99099 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R99096:99096 AV.Integers <> n var
R99096:99096 AV.Integers <> n var
R99100:99101 AV.Integers <> n' var
R99178:99180 AV.Coqlib <> zlt def
R99185:99193 AV.Integers Make zwordsize def
R99178:99180 AV.Coqlib <> zlt def
R99185:99193 AV.Integers Make zwordsize def
R99222:99224 AV.Coqlib <> zlt def
R99222:99224 AV.Coqlib <> zlt def
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99252:99260 AV.Coqlib <> zlt_false thm
R99302:99304 AV.Coqlib <> zlt def
R99302:99304 AV.Coqlib <> zlt def
R99337:99350 AV.Integers Make sign_ext_above thm
R99337:99350 AV.Integers Make sign_ext_above thm
prf 99373:99387 Make zero_ext_narrow
R99419:99424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99451:99453 Coq.Init.Logic <> :type_scope:x_'='_x not
R99425:99432 AV.Integers Make zero_ext def
R99437:99444 AV.Integers Make zero_ext def
R99449:99449 AV.Integers <> x var
R99446:99447 AV.Integers <> n' var
R99434:99434 AV.Integers <> n var
R99454:99461 AV.Integers Make zero_ext def
R99465:99465 AV.Integers <> x var
R99463:99463 AV.Integers <> n var
R99408:99411 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R99413:99416 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R99412:99412 AV.Integers <> n var
R99412:99412 AV.Integers <> n var
R99417:99418 AV.Integers <> n' var
R99498:99500 AV.Coqlib <> zlt def
R99498:99500 AV.Coqlib <> zlt def
R99516:99523 AV.Coqlib <> zlt_true thm
R99516:99523 AV.Coqlib <> zlt_true thm
prf 99578:99592 Make sign_ext_narrow
R99623:99628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99655:99657 Coq.Init.Logic <> :type_scope:x_'='_x not
R99629:99636 AV.Integers Make sign_ext def
R99641:99648 AV.Integers Make sign_ext def
R99653:99653 AV.Integers <> x var
R99650:99651 AV.Integers <> n' var
R99638:99638 AV.Integers <> n var
R99658:99665 AV.Integers Make sign_ext def
R99669:99669 AV.Integers <> x var
R99667:99667 AV.Integers <> n var
R99613:99615 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R99617:99620 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R99616:99616 AV.Integers <> n var
R99616:99616 AV.Integers <> n var
R99621:99622 AV.Integers <> n' var
R99699:99701 AV.Coqlib <> zlt def
R99705:99713 AV.Integers Make zwordsize def
R99699:99701 AV.Coqlib <> zlt def
R99705:99713 AV.Integers Make zwordsize def
R99740:99742 AV.Coqlib <> zlt def
R99765:99772 AV.Coqlib <> zlt_true thm
R99740:99742 AV.Coqlib <> zlt def
R99765:99772 AV.Coqlib <> zlt_true thm
R99765:99772 AV.Coqlib <> zlt_true thm
R99803:99805 AV.Coqlib <> zlt def
R99803:99805 AV.Coqlib <> zlt def
R99847:99860 AV.Integers Make sign_ext_above thm
R99847:99860 AV.Integers Make sign_ext_above thm
R99847:99860 AV.Integers Make sign_ext_above thm
R99847:99860 AV.Integers Make sign_ext_above thm
prf 99894:99913 Make zero_sign_ext_narrow
R99944:99949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99976:99978 Coq.Init.Logic <> :type_scope:x_'='_x not
R99950:99957 AV.Integers Make zero_ext def
R99962:99969 AV.Integers Make sign_ext def
R99974:99974 AV.Integers <> x var
R99971:99972 AV.Integers <> n' var
R99959:99959 AV.Integers <> n var
R99979:99986 AV.Integers Make zero_ext def
R99990:99990 AV.Integers <> x var
R99988:99988 AV.Integers <> n var
R99934:99936 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R99938:99941 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R99937:99937 AV.Integers <> n var
R99937:99937 AV.Integers <> n var
R99942:99943 AV.Integers <> n' var
R100020:100022 AV.Coqlib <> zlt def
R100027:100035 AV.Integers Make zwordsize def
R100020:100022 AV.Coqlib <> zlt def
R100027:100035 AV.Integers Make zwordsize def
R100064:100066 AV.Coqlib <> zlt def
R100064:100066 AV.Coqlib <> zlt def
R100090:100097 AV.Coqlib <> zlt_true thm
R100090:100097 AV.Coqlib <> zlt_true thm
R100090:100097 AV.Coqlib <> zlt_true thm
R100090:100097 AV.Coqlib <> zlt_true thm
R100146:100159 AV.Integers Make sign_ext_above thm
R100146:100159 AV.Integers Make sign_ext_above thm
R100146:100159 AV.Integers Make sign_ext_above thm
R100146:100159 AV.Integers Make sign_ext_above thm
prf 100182:100194 Make zero_ext_idem
R100217:100220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100246:100248 Coq.Init.Logic <> :type_scope:x_'='_x not
R100221:100228 AV.Integers Make zero_ext def
R100233:100240 AV.Integers Make zero_ext def
R100244:100244 AV.Integers <> x var
R100242:100242 AV.Integers <> n var
R100230:100230 AV.Integers <> n var
R100249:100256 AV.Integers Make zero_ext def
R100260:100260 AV.Integers <> x var
R100258:100258 AV.Integers <> n var
R100212:100215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R100216:100216 AV.Integers <> n var
R100286:100299 AV.Integers Make zero_ext_widen thm
R100286:100299 AV.Integers Make zero_ext_widen thm
prf 100323:100335 Make sign_ext_idem
R100357:100360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100386:100388 Coq.Init.Logic <> :type_scope:x_'='_x not
R100361:100368 AV.Integers Make sign_ext def
R100373:100380 AV.Integers Make sign_ext def
R100384:100384 AV.Integers <> x var
R100382:100382 AV.Integers <> n var
R100370:100370 AV.Integers <> n var
R100389:100396 AV.Integers Make sign_ext def
R100400:100400 AV.Integers <> x var
R100398:100398 AV.Integers <> n var
R100353:100355 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R100356:100356 AV.Integers <> n var
R100426:100439 AV.Integers Make sign_ext_widen thm
R100426:100439 AV.Integers Make sign_ext_widen thm
prf 100463:100479 Make sign_ext_zero_ext
R100501:100504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100530:100532 Coq.Init.Logic <> :type_scope:x_'='_x not
R100505:100512 AV.Integers Make sign_ext def
R100517:100524 AV.Integers Make zero_ext def
R100528:100528 AV.Integers <> x var
R100526:100526 AV.Integers <> n var
R100514:100514 AV.Integers <> n var
R100533:100540 AV.Integers Make sign_ext def
R100544:100544 AV.Integers <> x var
R100542:100542 AV.Integers <> n var
R100497:100499 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R100500:100500 AV.Integers <> n var
R100574:100576 AV.Coqlib <> zlt def
R100580:100588 AV.Integers Make zwordsize def
R100574:100576 AV.Coqlib <> zlt def
R100580:100588 AV.Integers Make zwordsize def
R100617:100619 AV.Coqlib <> zlt def
R100617:100619 AV.Coqlib <> zlt def
R100637:100644 AV.Coqlib <> zlt_true thm
R100637:100644 AV.Coqlib <> zlt_true thm
R100637:100644 AV.Coqlib <> zlt_true thm
R100637:100644 AV.Coqlib <> zlt_true thm
R100663:100670 AV.Coqlib <> zlt_true thm
R100663:100670 AV.Coqlib <> zlt_true thm
R100663:100670 AV.Coqlib <> zlt_true thm
R100663:100670 AV.Coqlib <> zlt_true thm
R100698:100700 AV.Coqlib <> zlt def
R100698:100700 AV.Coqlib <> zlt def
R100725:100738 AV.Integers Make zero_ext_above thm
R100725:100738 AV.Integers Make zero_ext_above thm
R100725:100738 AV.Integers Make zero_ext_above thm
R100725:100738 AV.Integers Make zero_ext_above thm
prf 100761:100777 Make zero_ext_sign_ext
R100799:100802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100828:100830 Coq.Init.Logic <> :type_scope:x_'='_x not
R100803:100810 AV.Integers Make zero_ext def
R100815:100822 AV.Integers Make sign_ext def
R100826:100826 AV.Integers <> x var
R100824:100824 AV.Integers <> n var
R100812:100812 AV.Integers <> n var
R100831:100838 AV.Integers Make zero_ext def
R100842:100842 AV.Integers <> x var
R100840:100840 AV.Integers <> n var
R100795:100797 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R100798:100798 AV.Integers <> n var
R100868:100887 AV.Integers Make zero_sign_ext_narrow thm
R100868:100887 AV.Integers Make zero_sign_ext_narrow thm
prf 100911:100938 Make sign_ext_equal_if_zero_equal
R100962:100967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100995:101000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101013:101015 Coq.Init.Logic <> :type_scope:x_'='_x not
R101001:101008 AV.Integers Make sign_ext def
R101012:101012 AV.Integers <> x var
R101010:101010 AV.Integers <> n var
R101016:101023 AV.Integers Make sign_ext def
R101027:101027 AV.Integers <> y var
R101025:101025 AV.Integers <> n var
R100980:100982 Coq.Init.Logic <> :type_scope:x_'='_x not
R100968:100975 AV.Integers Make zero_ext def
R100979:100979 AV.Integers <> x var
R100977:100977 AV.Integers <> n var
R100983:100990 AV.Integers Make zero_ext def
R100994:100994 AV.Integers <> y var
R100992:100992 AV.Integers <> n var
R100958:100960 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R100961:100961 AV.Integers <> n var
R101059:101075 AV.Integers Make sign_ext_zero_ext thm
R101059:101075 AV.Integers Make sign_ext_zero_ext thm
R101059:101075 AV.Integers Make sign_ext_zero_ext thm
R101099:101115 AV.Integers Make sign_ext_zero_ext thm
R101099:101115 AV.Integers Make sign_ext_zero_ext thm
R101099:101115 AV.Integers Make sign_ext_zero_ext thm
prf 101151:101167 Make zero_ext_shru_shl
R101203:101208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101218:101221 AV.Integers Make repr def
R101233:101235 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101224:101232 AV.Integers Make zwordsize def
R101236:101236 AV.Integers <> n var
R101256:101258 Coq.Init.Logic <> :type_scope:x_'='_x not
R101244:101251 AV.Integers Make zero_ext def
R101255:101255 AV.Integers <> x var
R101253:101253 AV.Integers <> n var
R101259:101262 AV.Integers Make shru def
R101274:101274 AV.Integers <> y var
R101265:101267 AV.Integers Make shl def
R101271:101271 AV.Integers <> y var
R101269:101269 AV.Integers <> x var
R101187:101189 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R101191:101193 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R101190:101190 AV.Integers <> n var
R101190:101190 AV.Integers <> n var
R101194:101202 AV.Integers Make zwordsize def
R101314:101316 Coq.Init.Logic <> :type_scope:x_'='_x not
R101304:101311 AV.Integers Make unsigned def
R101326:101328 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101317:101325 AV.Integers Make zwordsize def
R101314:101316 Coq.Init.Logic <> :type_scope:x_'='_x not
R101304:101311 AV.Integers Make unsigned def
R101326:101328 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101317:101325 AV.Integers Make zwordsize def
R101353:101365 AV.Integers Make unsigned_repr thm
R101353:101365 AV.Integers Make unsigned_repr thm
R101379:101399 AV.Integers Make wordsize_max_unsigned thm
R101379:101399 AV.Integers Make wordsize_max_unsigned thm
R101417:101428 AV.Integers Make same_bits_eq thm
R101417:101428 AV.Integers Make same_bits_eq thm
R101449:101461 AV.Integers Make bits_zero_ext thm
R101449:101461 AV.Integers Make bits_zero_ext thm
R101449:101461 AV.Integers Make bits_zero_ext thm
R101449:101461 AV.Integers Make bits_zero_ext thm
R101474:101482 AV.Integers Make bits_shru thm
R101474:101482 AV.Integers Make bits_shru thm
R101474:101482 AV.Integers Make bits_shru thm
R101474:101482 AV.Integers Make bits_shru thm
R101503:101505 AV.Coqlib <> zlt def
R101503:101505 AV.Coqlib <> zlt def
R101523:101530 AV.Coqlib <> zlt_true thm
R101523:101530 AV.Coqlib <> zlt_true thm
R101523:101530 AV.Coqlib <> zlt_true thm
R101523:101530 AV.Coqlib <> zlt_true thm
R101541:101548 AV.Integers Make bits_shl thm
R101541:101548 AV.Integers Make bits_shl thm
R101541:101548 AV.Integers Make bits_shl thm
R101541:101548 AV.Integers Make bits_shl thm
R101559:101567 AV.Coqlib <> zlt_false thm
R101559:101567 AV.Coqlib <> zlt_false thm
R101559:101567 AV.Coqlib <> zlt_false thm
R101559:101567 AV.Coqlib <> zlt_false thm
R101619:101627 AV.Coqlib <> zlt_false thm
R101619:101627 AV.Coqlib <> zlt_false thm
R101619:101627 AV.Coqlib <> zlt_false thm
R101619:101627 AV.Coqlib <> zlt_false thm
prf 101666:101681 Make sign_ext_shr_shl
R101717:101722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101732:101735 AV.Integers Make repr def
R101747:101749 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101738:101746 AV.Integers Make zwordsize def
R101750:101750 AV.Integers <> n var
R101770:101772 Coq.Init.Logic <> :type_scope:x_'='_x not
R101758:101765 AV.Integers Make sign_ext def
R101769:101769 AV.Integers <> x var
R101767:101767 AV.Integers <> n var
R101773:101775 AV.Integers Make shr def
R101787:101787 AV.Integers <> y var
R101778:101780 AV.Integers Make shl def
R101784:101784 AV.Integers <> y var
R101782:101782 AV.Integers <> x var
R101701:101703 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R101705:101707 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R101704:101704 AV.Integers <> n var
R101704:101704 AV.Integers <> n var
R101708:101716 AV.Integers Make zwordsize def
R101827:101829 Coq.Init.Logic <> :type_scope:x_'='_x not
R101817:101824 AV.Integers Make unsigned def
R101839:101841 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101830:101838 AV.Integers Make zwordsize def
R101827:101829 Coq.Init.Logic <> :type_scope:x_'='_x not
R101817:101824 AV.Integers Make unsigned def
R101839:101841 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R101830:101838 AV.Integers Make zwordsize def
R101866:101878 AV.Integers Make unsigned_repr thm
R101866:101878 AV.Integers Make unsigned_repr thm
R101892:101912 AV.Integers Make wordsize_max_unsigned thm
R101892:101912 AV.Integers Make wordsize_max_unsigned thm
R101930:101941 AV.Integers Make same_bits_eq thm
R101930:101941 AV.Integers Make same_bits_eq thm
R101962:101974 AV.Integers Make bits_sign_ext thm
R101962:101974 AV.Integers Make bits_sign_ext thm
R101962:101974 AV.Integers Make bits_sign_ext thm
R101962:101974 AV.Integers Make bits_sign_ext thm
R101962:101974 AV.Integers Make bits_sign_ext thm
R101987:101994 AV.Integers Make bits_shr thm
R101987:101994 AV.Integers Make bits_shr thm
R101987:101994 AV.Integers Make bits_shr thm
R101987:101994 AV.Integers Make bits_shr thm
R102015:102017 AV.Coqlib <> zlt def
R102015:102017 AV.Coqlib <> zlt def
R102035:102042 AV.Coqlib <> zlt_true thm
R102035:102042 AV.Coqlib <> zlt_true thm
R102035:102042 AV.Coqlib <> zlt_true thm
R102035:102042 AV.Coqlib <> zlt_true thm
R102053:102060 AV.Integers Make bits_shl thm
R102053:102060 AV.Integers Make bits_shl thm
R102053:102060 AV.Integers Make bits_shl thm
R102053:102060 AV.Integers Make bits_shl thm
R102071:102079 AV.Coqlib <> zlt_false thm
R102071:102079 AV.Coqlib <> zlt_false thm
R102071:102079 AV.Coqlib <> zlt_false thm
R102071:102079 AV.Coqlib <> zlt_false thm
R102131:102139 AV.Coqlib <> zlt_false thm
R102131:102139 AV.Coqlib <> zlt_false thm
R102131:102139 AV.Coqlib <> zlt_false thm
R102131:102139 AV.Coqlib <> zlt_false thm
R102150:102157 AV.Integers Make bits_shl thm
R102150:102157 AV.Integers Make bits_shl thm
R102150:102157 AV.Integers Make bits_shl thm
R102150:102157 AV.Integers Make bits_shl thm
R102168:102176 AV.Coqlib <> zlt_false thm
R102168:102176 AV.Coqlib <> zlt_false thm
R102168:102176 AV.Coqlib <> zlt_false thm
R102168:102176 AV.Coqlib <> zlt_false thm
prf 102349:102362 Make zero_ext_range
R102397:102400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102402:102405 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102429:102431 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102406:102413 AV.Integers Make unsigned def
R102416:102423 AV.Integers Make zero_ext def
R102427:102427 AV.Integers <> x var
R102425:102425 AV.Integers <> n var
R102406:102413 AV.Integers Make unsigned def
R102416:102423 AV.Integers Make zero_ext def
R102427:102427 AV.Integers <> x var
R102425:102425 AV.Integers <> n var
R102432:102436 Coq.ZArith.Zpower <> two_p def
R102438:102438 AV.Integers <> n var
R102380:102383 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102385:102387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102384:102384 AV.Integers <> n var
R102384:102384 AV.Integers <> n var
R102388:102396 AV.Integers Make zwordsize def
R102466:102477 AV.Integers Make zero_ext_mod thm
R102466:102477 AV.Integers Make zero_ext_mod thm
R102466:102477 AV.Integers Make zero_ext_mod thm
R102466:102477 AV.Integers Make zero_ext_mod thm
R102492:102499 Coq.ZArith.Zdiv <> Z_mod_lt thm
R102492:102499 Coq.ZArith.Zdiv <> Z_mod_lt thm
R102508:102520 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R102508:102520 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 102542:102555 Make eqmod_zero_ext
R102590:102593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102594:102598 AV.Integers Make eqmod def
R102637:102644 AV.Integers Make unsigned def
R102646:102646 AV.Integers <> x var
R102611:102618 AV.Integers Make unsigned def
R102621:102628 AV.Integers Make zero_ext def
R102632:102632 AV.Integers <> x var
R102630:102630 AV.Integers <> n var
R102601:102605 Coq.ZArith.Zpower <> two_p def
R102607:102607 AV.Integers <> n var
R102573:102576 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102578:102580 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102577:102577 AV.Integers <> n var
R102577:102577 AV.Integers <> n var
R102581:102589 AV.Integers Make zwordsize def
R102675:102686 AV.Integers Make zero_ext_mod thm
R102675:102686 AV.Integers Make zero_ext_mod thm
R102675:102686 AV.Integers Make zero_ext_mod thm
R102675:102686 AV.Integers Make zero_ext_mod thm
R102701:102709 AV.Integers Make eqmod_sym thm
R102701:102709 AV.Integers Make eqmod_sym thm
R102718:102726 AV.Integers Make eqmod_mod thm
R102718:102726 AV.Integers Make eqmod_mod thm
R102737:102749 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R102737:102749 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 102889:102902 Make sign_ext_range
R102936:102939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102952:102955 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102977:102979 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R102940:102940 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R102941:102945 Coq.ZArith.Zpower <> two_p def
R102949:102949 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102948:102948 AV.Integers <> n var
R102956:102961 AV.Integers Make signed def
R102964:102971 AV.Integers Make sign_ext def
R102975:102975 AV.Integers <> x var
R102973:102973 AV.Integers <> n var
R102956:102961 AV.Integers Make signed def
R102964:102971 AV.Integers Make sign_ext def
R102975:102975 AV.Integers <> x var
R102973:102973 AV.Integers <> n var
R102980:102984 Coq.ZArith.Zpower <> two_p def
R102988:102988 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102987:102987 AV.Integers <> n var
R102920:102922 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R102924:102926 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R102923:102923 AV.Integers <> n var
R102923:102923 AV.Integers <> n var
R102927:102935 AV.Integers Make zwordsize def
R103018:103033 AV.Integers Make sign_ext_shr_shl thm
R103018:103033 AV.Integers Make sign_ext_shr_shl thm
R103018:103033 AV.Integers Make sign_ext_shr_shl thm
R103018:103033 AV.Integers Make sign_ext_shr_shl thm
R103054:103056 AV.Integers Make shl def
R103061:103064 AV.Integers Make repr def
R103076:103078 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103067:103075 AV.Integers Make zwordsize def
R103054:103056 AV.Integers Make shl def
R103061:103064 AV.Integers Make repr def
R103076:103078 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103067:103075 AV.Integers Make zwordsize def
R103108:103110 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R103095:103099 Coq.ZArith.Zpower <> two_p def
R103103:103105 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103124:103136 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R103108:103110 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R103095:103099 Coq.ZArith.Zpower <> two_p def
R103103:103105 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103124:103136 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R103188:103190 Coq.Init.Logic <> :type_scope:x_'='_x not
R103157:103164 AV.Integers Make unsigned def
R103167:103170 AV.Integers Make repr def
R103182:103184 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103173:103181 AV.Integers Make zwordsize def
R103200:103202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103191:103199 AV.Integers Make zwordsize def
R103188:103190 Coq.Init.Logic <> :type_scope:x_'='_x not
R103157:103164 AV.Integers Make unsigned def
R103167:103170 AV.Integers Make repr def
R103182:103184 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103173:103181 AV.Integers Make zwordsize def
R103200:103202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103191:103199 AV.Integers Make zwordsize def
R103217:103229 AV.Integers Make unsigned_repr thm
R103217:103229 AV.Integers Make unsigned_repr thm
R103261:103281 AV.Integers Make wordsize_max_unsigned thm
R103261:103281 AV.Integers Make wordsize_max_unsigned thm
R103301:103313 AV.Integers Make shr_div_two_p thm
R103301:103313 AV.Integers Make shr_div_two_p thm
R103301:103313 AV.Integers Make shr_div_two_p thm
R103326:103336 AV.Integers Make signed_repr thm
R103326:103336 AV.Integers Make signed_repr thm
R103326:103336 AV.Integers Make signed_repr thm
R103326:103336 AV.Integers Make signed_repr thm
R103361:103375 AV.Coqlib <> Zdiv_interval_1 thm
R103361:103375 AV.Coqlib <> Zdiv_interval_1 thm
R103400:103412 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R103400:103412 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R103448:103450 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R103433:103434 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103435:103439 Coq.ZArith.Zpower <> two_p def
R103443:103445 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103451:103455 Coq.ZArith.Zpower <> two_p def
R103467:103469 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103458:103466 AV.Integers Make zwordsize def
R103485:103487 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103525:103525 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103501:103503 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R103488:103492 Coq.ZArith.Zpower <> two_p def
R103496:103498 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103504:103508 Coq.ZArith.Zpower <> two_p def
R103520:103522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103511:103519 AV.Integers Make zwordsize def
R103448:103450 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R103433:103434 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103435:103439 Coq.ZArith.Zpower <> two_p def
R103443:103445 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103451:103455 Coq.ZArith.Zpower <> two_p def
R103467:103469 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103458:103466 AV.Integers Make zwordsize def
R103485:103487 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103525:103525 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R103501:103503 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R103488:103492 Coq.ZArith.Zpower <> two_p def
R103496:103498 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103504:103508 Coq.ZArith.Zpower <> two_p def
R103520:103522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103511:103519 AV.Integers Make zwordsize def
R103550:103561 Coq.ZArith.Zpower <> two_p_is_exp thm
R103550:103561 Coq.ZArith.Zpower <> two_p_is_exp thm
R103550:103561 Coq.ZArith.Zpower <> two_p_is_exp thm
R103550:103561 Coq.ZArith.Zpower <> two_p_is_exp thm
R103550:103561 Coq.ZArith.Zpower <> two_p_is_exp thm
R103580:103583 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103597:103597 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103576:103578 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103593:103595 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103584:103592 AV.Integers Make zwordsize def
R103615:103617 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103606:103614 AV.Integers Make zwordsize def
R103580:103583 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103597:103597 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103576:103578 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103593:103595 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103584:103592 AV.Integers Make zwordsize def
R103615:103617 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R103606:103614 AV.Integers Make zwordsize def
R103644:103661 AV.Integers Make half_modulus_power thm
R103644:103661 AV.Integers Make half_modulus_power thm
R103644:103661 AV.Integers Make half_modulus_power thm
R103678:103689 AV.Integers Make signed_range thm
R103678:103689 AV.Integers Make signed_range thm
R103702:103711 AV.Integers Make min_signed def
R103714:103723 AV.Integers Make max_signed def
R103757:103771 AV.Coqlib <> Zdiv_interval_2 thm
R103757:103771 AV.Coqlib <> Zdiv_interval_2 thm
R103780:103791 AV.Integers Make signed_range thm
R103780:103791 AV.Integers Make signed_range thm
R103807:103820 AV.Integers Make min_signed_neg thm
R103807:103820 AV.Integers Make min_signed_neg thm
R103843:103856 AV.Integers Make max_signed_pos thm
R103843:103856 AV.Integers Make max_signed_pos thm
R103886:103898 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R103886:103898 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 103920:103934 Make eqmod_sign_ext'
R103968:103973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103974:103978 AV.Integers Make eqmod def
R104017:104024 AV.Integers Make unsigned def
R104026:104026 AV.Integers <> x var
R103991:103998 AV.Integers Make unsigned def
R104001:104008 AV.Integers Make sign_ext def
R104012:104012 AV.Integers <> x var
R104010:104010 AV.Integers <> n var
R103981:103985 Coq.ZArith.Zpower <> two_p def
R103987:103987 AV.Integers <> n var
R103952:103954 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R103956:103958 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R103955:103955 AV.Integers <> n var
R103955:103955 AV.Integers <> n var
R103959:103967 AV.Integers Make zwordsize def
R104059:104066 Coq.ZArith.BinInt Z to_nat def
R104059:104066 Coq.ZArith.BinInt Z to_nat def
R104092:104094 Coq.Init.Logic <> :type_scope:x_'='_x not
R104082:104089 Coq.ZArith.BinInt Z of_nat def
R104108:104115 Coq.ZArith.Znat Z2Nat id thm
R104092:104094 Coq.Init.Logic <> :type_scope:x_'='_x not
R104082:104089 Coq.ZArith.BinInt Z of_nat def
R104108:104115 Coq.ZArith.Znat Z2Nat id thm
R104154:104172 AV.Coqlib <> two_power_nat_two_p thm
R104154:104172 AV.Coqlib <> two_power_nat_two_p thm
R104154:104172 AV.Coqlib <> two_power_nat_two_p thm
R104183:104197 AV.Integers Make eqmod_same_bits thm
R104183:104197 AV.Integers Make eqmod_same_bits thm
R104248:104254 AV.Integers Make testbit def
R104257:104264 AV.Integers Make sign_ext def
R104248:104254 AV.Integers Make testbit def
R104257:104264 AV.Integers Make sign_ext def
R104283:104295 AV.Integers Make bits_sign_ext thm
R104283:104295 AV.Integers Make bits_sign_ext thm
R104283:104295 AV.Integers Make bits_sign_ext thm
R104283:104295 AV.Integers Make bits_sign_ext thm
R104283:104295 AV.Integers Make bits_sign_ext thm
R104308:104315 AV.Coqlib <> zlt_true thm
R104308:104315 AV.Coqlib <> zlt_true thm
R104308:104315 AV.Coqlib <> zlt_true thm
R104308:104315 AV.Coqlib <> zlt_true thm
prf 104357:104370 Make eqmod_sign_ext
R104404:104409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104410:104414 AV.Integers Make eqmod def
R104451:104458 AV.Integers Make unsigned def
R104460:104460 AV.Integers <> x var
R104427:104432 AV.Integers Make signed def
R104435:104442 AV.Integers Make sign_ext def
R104446:104446 AV.Integers <> x var
R104444:104444 AV.Integers <> n var
R104417:104421 Coq.ZArith.Zpower <> two_p def
R104423:104423 AV.Integers <> n var
R104388:104390 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R104392:104394 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R104391:104391 AV.Integers <> n var
R104391:104391 AV.Integers <> n var
R104395:104403 AV.Integers Make zwordsize def
R104505:104512 AV.Integers Make unsigned def
R104515:104522 AV.Integers Make sign_ext def
R104487:104497 AV.Integers Make eqmod_trans thm
R104505:104512 AV.Integers Make unsigned def
R104515:104522 AV.Integers Make sign_ext def
R104487:104497 AV.Integers Make eqmod_trans thm
R104558:104564 AV.Integers Make modulus def
R104539:104551 AV.Integers Make eqmod_divides thm
R104558:104564 AV.Integers Make modulus def
R104539:104551 AV.Integers Make eqmod_divides thm
R104573:104591 AV.Integers Make eqm_signed_unsigned thm
R104573:104591 AV.Integers Make eqm_signed_unsigned thm
R104604:104608 Coq.ZArith.Zpower <> two_p def
R104620:104622 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R104611:104619 AV.Integers Make zwordsize def
R104604:104608 Coq.ZArith.Zpower <> two_p def
R104620:104622 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R104611:104619 AV.Integers Make zwordsize def
R104637:104643 AV.Integers Make modulus def
R104654:104672 AV.Coqlib <> two_power_nat_two_p thm
R104654:104672 AV.Coqlib <> two_power_nat_two_p thm
R104654:104672 AV.Coqlib <> two_power_nat_two_p thm
R104680:104688 AV.Integers Make zwordsize def
R104680:104688 AV.Integers Make zwordsize def
R104704:104715 Coq.ZArith.Zpower <> two_p_is_exp thm
R104704:104715 Coq.ZArith.Zpower <> two_p_is_exp thm
R104704:104715 Coq.ZArith.Zpower <> two_p_is_exp thm
R104704:104715 Coq.ZArith.Zpower <> two_p_is_exp thm
R104704:104715 Coq.ZArith.Zpower <> two_p_is_exp thm
R104756:104770 AV.Integers Make eqmod_sign_ext' thm
R104756:104770 AV.Integers Make eqmod_sign_ext' thm
prf 104869:104882 Make one_bits_range
R104916:104919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104935:104937 Coq.Init.Logic <> :type_scope:x_'='_x not
R104920:104922 AV.Integers Make ltu def
R104926:104934 AV.Integers Make iwordsize def
R104924:104924 AV.Integers <> i var
R104938:104941 Coq.Init.Datatypes <> true constr
R104899:104900 Coq.Lists.List <> In def
R104905:104912 AV.Integers Make one_bits def
R104914:104914 AV.Integers <> x var
R104902:104902 AV.Integers <> i var
R104992:104995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R105018:105020 Coq.Init.Logic <> :type_scope:x_'='_x not
R104996:104998 AV.Integers Make ltu def
R105009:105017 AV.Integers Make iwordsize def
R105001:105004 AV.Integers Make repr def
R105006:105006 AV.Integers <> p var
R105021:105024 Coq.Init.Datatypes <> true constr
R104975:104978 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104980:104982 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104979:104979 AV.Integers <> p var
R104979:104979 AV.Integers <> p var
R104983:104991 AV.Integers Make zwordsize def
R104992:104995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R105018:105020 Coq.Init.Logic <> :type_scope:x_'='_x not
R104996:104998 AV.Integers Make ltu def
R105009:105017 AV.Integers Make iwordsize def
R105001:105004 AV.Integers Make repr def
R105006:105006 AV.Integers <> p var
R105021:105024 Coq.Init.Datatypes <> true constr
R104975:104978 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104980:104982 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104979:104979 AV.Integers <> p var
R104979:104979 AV.Integers <> p var
R104983:104991 AV.Integers Make zwordsize def
R105047:105049 AV.Integers Make ltu def
R105052:105060 AV.Integers Make iwordsize def
R105069:105076 AV.Coqlib <> zlt_true thm
R105069:105076 AV.Coqlib <> zlt_true thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105098:105110 AV.Integers Make unsigned_repr thm
R105135:105155 AV.Integers Make wordsize_max_unsigned thm
R105135:105155 AV.Integers Make wordsize_max_unsigned thm
R105180:105200 AV.Integers Make wordsize_max_unsigned thm
R105180:105200 AV.Integers Make wordsize_max_unsigned thm
R105219:105226 AV.Integers Make one_bits def
R105249:105263 AV.Coqlib <> list_in_map_inv thm
R105249:105263 AV.Coqlib <> list_in_map_inv thm
R105340:105347 AV.Integers Make unsigned def
R105317:105332 AV.Integers Make Z_one_bits_range thm
R105340:105347 AV.Integers Make unsigned def
R105317:105332 AV.Integers Make Z_one_bits_range thm
def 105374:105388 Make int_of_one_bits
R105394:105397 Coq.Init.Datatypes <> list ind
R105399:105401 AV.Integers Make int rec
R105406:105408 AV.Integers Make int rec
R105421:105421 AV.Integers <> l var
R105432:105434 Coq.Init.Datatypes <> nil constr
R105439:105442 AV.Integers Make zero def
R105449:105452 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R105458:105460 AV.Integers Make add def
R105475:105489 AV.Integers <> int_of_one_bits def
R105463:105465 AV.Integers Make shl def
R105467:105469 AV.Integers Make one def
prf 105510:105524 Make one_bits_decomp
R105540:105542 Coq.Init.Logic <> :type_scope:x_'='_x not
R105539:105539 AV.Integers <> x var
R105543:105557 AV.Integers Make int_of_one_bits def
R105560:105567 AV.Integers Make one_bits def
R105569:105569 AV.Integers <> x var
R105606:105609 AV.Integers Make repr def
R105612:105621 AV.Integers Make powerserie def
R105624:105633 AV.Integers Make Z_one_bits def
R105645:105652 AV.Integers Make unsigned def
R105635:105642 AV.Integers Make wordsize def
R105606:105609 AV.Integers Make repr def
R105612:105621 AV.Integers Make powerserie def
R105624:105633 AV.Integers Make Z_one_bits def
R105645:105652 AV.Integers Make unsigned def
R105635:105642 AV.Integers Make wordsize def
R105679:105682 AV.Integers Make repr def
R105685:105692 AV.Integers Make unsigned def
R105679:105682 AV.Integers Make repr def
R105685:105692 AV.Integers Make unsigned def
R105730:105750 AV.Integers Make Z_one_bits_powerserie thm
R105730:105750 AV.Integers Make Z_one_bits_powerserie thm
R105780:105787 AV.Integers Make one_bits def
R105804:105819 AV.Integers Make Z_one_bits_range thm
R105822:105829 AV.Integers Make unsigned def
R105804:105819 AV.Integers Make Z_one_bits_range thm
R105822:105829 AV.Integers Make unsigned def
R105850:105859 AV.Integers Make Z_one_bits def
R105871:105878 AV.Integers Make unsigned def
R105861:105868 AV.Integers Make wordsize def
R105850:105859 AV.Integers Make Z_one_bits def
R105871:105878 AV.Integers Make unsigned def
R105861:105868 AV.Integers Make wordsize def
R105965:105967 AV.Integers Make add def
R105976:105987 AV.Integers Make eqm_samerepr thm
R105976:105987 AV.Integers Make eqm_samerepr thm
R105998:106004 AV.Integers Make eqm_add thm
R105998:106004 AV.Integers Make eqm_add thm
R106015:106027 AV.Integers Make shl_mul_two_p thm
R106015:106027 AV.Integers Make shl_mul_two_p thm
R106015:106027 AV.Integers Make shl_mul_two_p thm
R106038:106047 AV.Integers Make mul_commut thm
R106038:106047 AV.Integers Make mul_commut thm
R106038:106047 AV.Integers Make mul_commut thm
R106060:106066 AV.Integers Make mul_one thm
R106060:106066 AV.Integers Make mul_one thm
R106060:106066 AV.Integers Make mul_one thm
R106075:106093 AV.Integers Make eqm_unsigned_repr_r thm
R106075:106093 AV.Integers Make eqm_unsigned_repr_r thm
R106106:106118 AV.Integers Make unsigned_repr thm
R106106:106118 AV.Integers Make unsigned_repr thm
R106106:106118 AV.Integers Make unsigned_repr thm
R106106:106118 AV.Integers Make unsigned_repr thm
R106156:106160 Coq.Lists.List <> in_eq thm
R106156:106160 Coq.Lists.List <> in_eq thm
R106180:106200 AV.Integers Make wordsize_max_unsigned thm
R106180:106200 AV.Integers Make wordsize_max_unsigned thm
prf 106316:106325 Make negate_cmp
R106373:106375 Coq.Init.Logic <> :type_scope:x_'='_x not
R106344:106346 AV.Integers Make cmp def
R106372:106372 AV.Integers <> y var
R106370:106370 AV.Integers <> x var
R106349:106365 AV.Integers <> negate_comparison def
R106367:106367 AV.Integers <> c var
R106376:106379 Coq.Init.Datatypes <> negb def
R106382:106384 AV.Integers Make cmp def
R106390:106390 AV.Integers <> y var
R106388:106388 AV.Integers <> x var
R106386:106386 AV.Integers <> c var
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
R106442:106450 Coq.Bool.Bool <> negb_elim syndef
prf 106473:106483 Make negate_cmpu
R106532:106534 Coq.Init.Logic <> :type_scope:x_'='_x not
R106502:106505 AV.Integers Make cmpu def
R106531:106531 AV.Integers <> y var
R106529:106529 AV.Integers <> x var
R106508:106524 AV.Integers <> negate_comparison def
R106526:106526 AV.Integers <> c var
R106535:106538 Coq.Init.Datatypes <> negb def
R106541:106544 AV.Integers Make cmpu def
R106550:106550 AV.Integers <> y var
R106548:106548 AV.Integers <> x var
R106546:106546 AV.Integers <> c var
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
R106602:106610 Coq.Bool.Bool <> negb_elim syndef
prf 106633:106640 Make swap_cmp
R106686:106688 Coq.Init.Logic <> :type_scope:x_'='_x not
R106659:106661 AV.Integers Make cmp def
R106685:106685 AV.Integers <> y var
R106683:106683 AV.Integers <> x var
R106664:106678 AV.Integers <> swap_comparison def
R106680:106680 AV.Integers <> c var
R106689:106691 AV.Integers Make cmp def
R106697:106697 AV.Integers <> x var
R106695:106695 AV.Integers <> y var
R106693:106693 AV.Integers <> c var
R106748:106753 AV.Integers Make eq_sym thm
R106748:106753 AV.Integers Make eq_sym thm
R106769:106774 AV.Integers Make eq_sym thm
R106769:106774 AV.Integers Make eq_sym thm
prf 106791:106799 Make swap_cmpu
R106846:106848 Coq.Init.Logic <> :type_scope:x_'='_x not
R106818:106821 AV.Integers Make cmpu def
R106845:106845 AV.Integers <> y var
R106843:106843 AV.Integers <> x var
R106824:106838 AV.Integers <> swap_comparison def
R106840:106840 AV.Integers <> c var
R106849:106852 AV.Integers Make cmpu def
R106858:106858 AV.Integers <> x var
R106856:106856 AV.Integers <> y var
R106854:106854 AV.Integers <> c var
R106909:106914 AV.Integers Make eq_sym thm
R106909:106914 AV.Integers Make eq_sym thm
R106930:106935 AV.Integers Make eq_sym thm
R106930:106935 AV.Integers Make eq_sym thm
prf 106950:106961 Make translate_eq
R107004:107006 Coq.Init.Logic <> :type_scope:x_'='_x not
R106982:106983 AV.Integers Make eq def
R106996:106998 AV.Integers Make add def
R107002:107002 AV.Integers <> d var
R107000:107000 AV.Integers <> y var
R106986:106988 AV.Integers Make add def
R106992:106992 AV.Integers <> d var
R106990:106990 AV.Integers <> x var
R107007:107008 AV.Integers Make eq def
R107012:107012 AV.Integers <> y var
R107010:107010 AV.Integers <> x var
R107039:107040 AV.Integers Make eq def
R107049:107051 AV.Coqlib <> zeq def
R107067:107074 AV.Integers Make unsigned def
R107054:107061 AV.Integers Make unsigned def
R107049:107051 AV.Coqlib <> zeq def
R107067:107074 AV.Integers Make unsigned def
R107054:107061 AV.Integers Make unsigned def
R107097:107099 AV.Integers Make add def
R107119:107126 AV.Coqlib <> zeq_true thm
R107119:107126 AV.Coqlib <> zeq_true thm
R107137:107145 AV.Coqlib <> zeq_false thm
R107137:107145 AV.Coqlib <> zeq_false thm
R107155:107157 AV.Integers Make add def
R107189:107200 AV.Integers Make eqm_small_eq thm
R107189:107200 AV.Integers Make eqm_small_eq thm
R107230:107237 AV.Integers Make unsigned def
R107248:107248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107272:107275 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107259:107261 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107249:107256 AV.Integers Make unsigned def
R107262:107269 AV.Integers Make unsigned def
R107276:107283 AV.Integers Make unsigned def
R107230:107237 AV.Integers Make unsigned def
R107248:107248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107272:107275 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107259:107261 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107249:107256 AV.Integers Make unsigned def
R107262:107269 AV.Integers Make unsigned def
R107276:107283 AV.Integers Make unsigned def
R107300:107307 AV.Integers Make unsigned def
R107318:107318 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107342:107345 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107329:107331 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107319:107326 AV.Integers Make unsigned def
R107332:107339 AV.Integers Make unsigned def
R107346:107353 AV.Integers Make unsigned def
R107300:107307 AV.Integers Make unsigned def
R107318:107318 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107342:107345 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R107329:107331 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107319:107326 AV.Integers Make unsigned def
R107332:107339 AV.Integers Make unsigned def
R107346:107353 AV.Integers Make unsigned def
R107367:107373 AV.Integers Make eqm_sub thm
R107367:107373 AV.Integers Make eqm_sub thm
R107398:107405 AV.Integers Make unsigned def
R107408:107411 AV.Integers Make repr def
R107424:107426 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107414:107421 AV.Integers Make unsigned def
R107427:107434 AV.Integers Make unsigned def
R107382:107390 AV.Integers Make eqm_trans thm
R107398:107405 AV.Integers Make unsigned def
R107408:107411 AV.Integers Make repr def
R107424:107426 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107414:107421 AV.Integers Make unsigned def
R107427:107434 AV.Integers Make unsigned def
R107382:107390 AV.Integers Make eqm_trans thm
R107483:107490 AV.Integers Make unsigned def
R107493:107496 AV.Integers Make repr def
R107509:107511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107499:107506 AV.Integers Make unsigned def
R107512:107519 AV.Integers Make unsigned def
R107467:107475 AV.Integers Make eqm_trans thm
R107483:107490 AV.Integers Make unsigned def
R107493:107496 AV.Integers Make repr def
R107509:107511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107499:107506 AV.Integers Make unsigned def
R107512:107519 AV.Integers Make unsigned def
R107467:107475 AV.Integers Make eqm_trans thm
prf 107608:107620 Make translate_ltu
R107685:107690 Coq.Init.Logic <> :type_scope:x_'->'_x not
R107735:107740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R107764:107766 Coq.Init.Logic <> :type_scope:x_'='_x not
R107741:107743 AV.Integers Make ltu def
R107756:107758 AV.Integers Make add def
R107762:107762 AV.Integers <> d var
R107760:107760 AV.Integers <> y var
R107746:107748 AV.Integers Make add def
R107752:107752 AV.Integers <> d var
R107750:107750 AV.Integers <> x var
R107767:107769 AV.Integers Make ltu def
R107773:107773 AV.Integers <> y var
R107771:107771 AV.Integers <> x var
R107692:107695 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R107719:107722 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R107706:107708 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107696:107703 AV.Integers Make unsigned def
R107705:107705 AV.Integers <> y var
R107709:107716 AV.Integers Make unsigned def
R107718:107718 AV.Integers <> d var
R107706:107708 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107696:107703 AV.Integers Make unsigned def
R107705:107705 AV.Integers <> y var
R107709:107716 AV.Integers Make unsigned def
R107718:107718 AV.Integers <> d var
R107723:107734 AV.Integers Make max_unsigned def
R107642:107645 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R107669:107672 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R107656:107658 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107646:107653 AV.Integers Make unsigned def
R107655:107655 AV.Integers <> x var
R107659:107666 AV.Integers Make unsigned def
R107668:107668 AV.Integers <> d var
R107656:107658 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107646:107653 AV.Integers Make unsigned def
R107655:107655 AV.Integers <> x var
R107659:107666 AV.Integers Make unsigned def
R107668:107668 AV.Integers <> d var
R107673:107684 AV.Integers Make max_unsigned def
R107800:107802 AV.Integers Make add def
R107812:107814 AV.Integers Make ltu def
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107834:107846 AV.Integers Make unsigned_repr thm
R107861:107863 AV.Coqlib <> zlt def
R107879:107886 AV.Integers Make unsigned def
R107866:107873 AV.Integers Make unsigned def
R107861:107863 AV.Coqlib <> zlt def
R107879:107886 AV.Integers Make unsigned def
R107866:107873 AV.Integers Make unsigned def
R107908:107915 AV.Coqlib <> zlt_true thm
R107908:107915 AV.Coqlib <> zlt_true thm
R107933:107941 AV.Coqlib <> zlt_false thm
R107933:107941 AV.Coqlib <> zlt_false thm
prf 107965:107978 Make translate_cmpu
R108045:108050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108095:108100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108127:108129 Coq.Init.Logic <> :type_scope:x_'='_x not
R108101:108104 AV.Integers Make cmpu def
R108119:108121 AV.Integers Make add def
R108125:108125 AV.Integers <> d var
R108123:108123 AV.Integers <> y var
R108109:108111 AV.Integers Make add def
R108115:108115 AV.Integers <> d var
R108113:108113 AV.Integers <> x var
R108106:108106 AV.Integers <> c var
R108130:108133 AV.Integers Make cmpu def
R108139:108139 AV.Integers <> y var
R108137:108137 AV.Integers <> x var
R108135:108135 AV.Integers <> c var
R108052:108055 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108079:108082 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108066:108068 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108056:108063 AV.Integers Make unsigned def
R108065:108065 AV.Integers <> y var
R108069:108076 AV.Integers Make unsigned def
R108078:108078 AV.Integers <> d var
R108066:108068 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108056:108063 AV.Integers Make unsigned def
R108065:108065 AV.Integers <> y var
R108069:108076 AV.Integers Make unsigned def
R108078:108078 AV.Integers <> d var
R108083:108094 AV.Integers Make max_unsigned def
R108002:108005 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108029:108032 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108016:108018 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108006:108013 AV.Integers Make unsigned def
R108015:108015 AV.Integers <> x var
R108019:108026 AV.Integers Make unsigned def
R108028:108028 AV.Integers <> d var
R108016:108018 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108006:108013 AV.Integers Make unsigned def
R108015:108015 AV.Integers <> x var
R108019:108026 AV.Integers Make unsigned def
R108028:108028 AV.Integers <> d var
R108033:108044 AV.Integers Make max_unsigned def
R108166:108169 AV.Integers Make cmpu def
R108182:108193 AV.Integers Make translate_eq thm
R108182:108193 AV.Integers Make translate_eq thm
R108182:108193 AV.Integers Make translate_eq thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
R108211:108223 AV.Integers Make translate_ltu thm
prf 108244:108255 Make translate_lt
R108323:108328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108376:108381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108404:108406 Coq.Init.Logic <> :type_scope:x_'='_x not
R108382:108383 AV.Integers Make lt def
R108396:108398 AV.Integers Make add def
R108402:108402 AV.Integers <> d var
R108400:108400 AV.Integers <> y var
R108386:108388 AV.Integers Make add def
R108392:108392 AV.Integers <> d var
R108390:108390 AV.Integers <> x var
R108407:108408 AV.Integers Make lt def
R108412:108412 AV.Integers <> y var
R108410:108410 AV.Integers <> x var
R108339:108342 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108362:108365 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108329:108338 AV.Integers Make min_signed def
R108351:108353 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108343:108348 AV.Integers Make signed def
R108350:108350 AV.Integers <> y var
R108354:108359 AV.Integers Make signed def
R108361:108361 AV.Integers <> d var
R108351:108353 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108343:108348 AV.Integers Make signed def
R108350:108350 AV.Integers <> y var
R108354:108359 AV.Integers Make signed def
R108361:108361 AV.Integers <> d var
R108366:108375 AV.Integers Make max_signed def
R108286:108289 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108309:108312 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108276:108285 AV.Integers Make min_signed def
R108298:108300 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108290:108295 AV.Integers Make signed def
R108297:108297 AV.Integers <> x var
R108301:108306 AV.Integers Make signed def
R108308:108308 AV.Integers <> d var
R108298:108300 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108290:108295 AV.Integers Make signed def
R108297:108297 AV.Integers <> x var
R108301:108306 AV.Integers Make signed def
R108308:108308 AV.Integers <> d var
R108313:108322 AV.Integers Make max_signed def
R108447:108456 AV.Integers Make add_signed thm
R108447:108456 AV.Integers Make add_signed thm
R108447:108456 AV.Integers Make add_signed thm
R108447:108456 AV.Integers Make add_signed thm
R108447:108456 AV.Integers Make add_signed thm
R108447:108456 AV.Integers Make add_signed thm
R108466:108467 AV.Integers Make lt def
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108487:108497 AV.Integers Make signed_repr thm
R108512:108514 AV.Coqlib <> zlt def
R108528:108533 AV.Integers Make signed def
R108517:108522 AV.Integers Make signed def
R108512:108514 AV.Coqlib <> zlt def
R108528:108533 AV.Integers Make signed def
R108517:108522 AV.Integers Make signed def
R108555:108562 AV.Coqlib <> zlt_true thm
R108555:108562 AV.Coqlib <> zlt_true thm
R108580:108588 AV.Coqlib <> zlt_false thm
R108580:108588 AV.Coqlib <> zlt_false thm
prf 108612:108624 Make translate_cmp
R108694:108699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108747:108752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108778:108780 Coq.Init.Logic <> :type_scope:x_'='_x not
R108753:108755 AV.Integers Make cmp def
R108770:108772 AV.Integers Make add def
R108776:108776 AV.Integers <> d var
R108774:108774 AV.Integers <> y var
R108760:108762 AV.Integers Make add def
R108766:108766 AV.Integers <> d var
R108764:108764 AV.Integers <> x var
R108757:108757 AV.Integers <> c var
R108781:108783 AV.Integers Make cmp def
R108789:108789 AV.Integers <> y var
R108787:108787 AV.Integers <> x var
R108785:108785 AV.Integers <> c var
R108710:108713 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108733:108736 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108700:108709 AV.Integers Make min_signed def
R108722:108724 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108714:108719 AV.Integers Make signed def
R108721:108721 AV.Integers <> y var
R108725:108730 AV.Integers Make signed def
R108732:108732 AV.Integers <> d var
R108722:108724 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108714:108719 AV.Integers Make signed def
R108721:108721 AV.Integers <> y var
R108725:108730 AV.Integers Make signed def
R108732:108732 AV.Integers <> d var
R108737:108746 AV.Integers Make max_signed def
R108657:108660 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108680:108683 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R108647:108656 AV.Integers Make min_signed def
R108669:108671 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108661:108666 AV.Integers Make signed def
R108668:108668 AV.Integers <> x var
R108672:108677 AV.Integers Make signed def
R108679:108679 AV.Integers <> d var
R108669:108671 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R108661:108666 AV.Integers Make signed def
R108668:108668 AV.Integers <> x var
R108672:108677 AV.Integers Make signed def
R108679:108679 AV.Integers <> d var
R108684:108693 AV.Integers Make max_signed def
R108816:108818 AV.Integers Make cmp def
R108831:108842 AV.Integers Make translate_eq thm
R108831:108842 AV.Integers Make translate_eq thm
R108831:108842 AV.Integers Make translate_eq thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
R108860:108871 AV.Integers Make translate_lt thm
prf 108894:108915 Make notbool_isfalse_istrue
R108940:108943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108944:108950 AV.Integers Make is_true def
R108953:108959 AV.Integers Make notbool def
R108961:108961 AV.Integers <> x var
R108930:108937 AV.Integers Make is_false def
R108939:108939 AV.Integers <> x var
R108981:108988 AV.Integers Make is_false def
R108991:108997 AV.Integers Make is_true def
R109000:109006 AV.Integers Make notbool def
R109036:109042 AV.Integers Make eq_true thm
R109036:109042 AV.Integers Make eq_true thm
R109036:109042 AV.Integers Make eq_true thm
R109051:109062 AV.Integers Make one_not_zero thm
R109051:109062 AV.Integers Make one_not_zero thm
prf 109079:109100 Make notbool_istrue_isfalse
R109124:109127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109128:109135 AV.Integers Make is_false def
R109138:109144 AV.Integers Make notbool def
R109146:109146 AV.Integers <> x var
R109115:109121 AV.Integers Make is_true def
R109123:109123 AV.Integers <> x var
R109166:109173 AV.Integers Make is_false def
R109176:109182 AV.Integers Make is_true def
R109185:109191 AV.Integers Make notbool def
R109216:109222 AV.Integers Make eq_spec thm
R109226:109229 AV.Integers Make zero def
R109216:109222 AV.Integers Make eq_spec thm
R109226:109229 AV.Integers Make zero def
R109239:109240 AV.Integers Make eq def
R109244:109247 AV.Integers Make zero def
R109239:109240 AV.Integers Make eq def
R109244:109247 AV.Integers Make zero def
prf 109295:109308 Make ltu_range_test
R109341:109344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109369:109374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109376:109379 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109388:109390 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109380:109385 AV.Integers Make signed def
R109387:109387 AV.Integers <> x var
R109380:109385 AV.Integers Make signed def
R109387:109387 AV.Integers <> x var
R109391:109398 AV.Integers Make unsigned def
R109400:109400 AV.Integers <> y var
R109355:109358 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R109345:109352 AV.Integers Make unsigned def
R109354:109354 AV.Integers <> y var
R109359:109368 AV.Integers Make max_signed def
R109334:109336 Coq.Init.Logic <> :type_scope:x_'='_x not
R109327:109329 AV.Integers Make ltu def
R109333:109333 AV.Integers <> y var
R109331:109331 AV.Integers <> x var
R109337:109340 Coq.Init.Datatypes <> true constr
R109429:109431 AV.Integers Make ltu def
R109449:109451 AV.Coqlib <> zlt def
R109467:109474 AV.Integers Make unsigned def
R109454:109461 AV.Integers Make unsigned def
R109449:109451 AV.Coqlib <> zlt def
R109467:109474 AV.Integers Make unsigned def
R109454:109461 AV.Integers Make unsigned def
R109509:109526 AV.Integers Make signed_eq_unsigned thm
R109509:109526 AV.Integers Make signed_eq_unsigned thm
R109509:109526 AV.Integers Make signed_eq_unsigned thm
R109509:109526 AV.Integers Make signed_eq_unsigned thm
R109543:109556 AV.Integers Make unsigned_range thm
R109543:109556 AV.Integers Make unsigned_range thm
prf 109590:109604 Make lt_sub_overflow
R109671:109673 Coq.Init.Logic <> :type_scope:x_'='_x not
R109623:109625 AV.Integers Make xor def
R109652:109659 AV.Integers Make negative def
R109662:109664 AV.Integers Make sub def
R109668:109668 AV.Integers <> y var
R109666:109666 AV.Integers <> x var
R109628:109639 AV.Integers Make sub_overflow def
R109645:109648 AV.Integers Make zero def
R109643:109643 AV.Integers <> y var
R109641:109641 AV.Integers <> x var
R109677:109678 AV.Integers Make lt def
R109682:109682 AV.Integers <> y var
R109680:109680 AV.Integers <> x var
R109698:109701 AV.Integers Make zero def
R109689:109691 AV.Integers Make one def
R109728:109735 AV.Integers Make negative def
R109738:109749 AV.Integers Make sub_overflow def
R109752:109753 AV.Integers Make lt def
R109764:109773 AV.Integers Make sub_signed thm
R109764:109773 AV.Integers Make sub_signed thm
R109764:109773 AV.Integers Make sub_signed thm
R109786:109796 AV.Integers Make signed_zero thm
R109786:109796 AV.Integers Make signed_zero thm
R109786:109796 AV.Integers Make signed_zero thm
R109807:109815 Coq.ZArith.BinInt Z sub_0_r thm
R109807:109815 Coq.ZArith.BinInt Z sub_0_r thm
R109807:109815 Coq.ZArith.BinInt Z sub_0_r thm
R109832:109843 AV.Integers Make signed_range thm
R109849:109860 AV.Integers Make signed_range thm
R109832:109843 AV.Integers Make signed_range thm
R109849:109860 AV.Integers Make signed_range thm
R109878:109883 AV.Integers Make signed def
R109899:109904 AV.Integers Make signed def
R109878:109883 AV.Integers Make signed def
R109899:109904 AV.Integers Make signed def
R109933:109942 AV.Integers Make min_signed def
R109945:109954 AV.Integers Make max_signed def
R109975:109990 AV.Integers Make half_modulus_pos thm
R109992:110011 AV.Integers Make half_modulus_modulus thm
R109975:109990 AV.Integers Make half_modulus_pos thm
R109992:110011 AV.Integers Make half_modulus_modulus thm
R110040:110042 AV.Coqlib <> zle def
R110048:110050 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110040:110042 AV.Coqlib <> zle def
R110048:110050 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110065:110076 AV.Coqlib <> proj_sumbool def
R110092:110099 AV.Coqlib <> zle_true thm
R110092:110099 AV.Coqlib <> zle_true thm
R110092:110099 AV.Coqlib <> zle_true thm
R110134:110142 AV.Coqlib <> zlt_false thm
R110134:110142 AV.Coqlib <> zlt_false thm
R110134:110142 AV.Coqlib <> zlt_false thm
R110171:110173 AV.Coqlib <> zlt def
R110183:110194 AV.Integers Make half_modulus def
R110177:110179 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110171:110173 AV.Coqlib <> zlt def
R110183:110194 AV.Integers Make half_modulus def
R110177:110179 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110209:110220 AV.Coqlib <> proj_sumbool def
R110231:110238 AV.Coqlib <> zle_true thm
R110231:110238 AV.Coqlib <> zle_true thm
R110231:110238 AV.Coqlib <> zle_true thm
R110262:110272 AV.Integers Make signed_repr thm
R110262:110272 AV.Integers Make signed_repr thm
R110262:110272 AV.Integers Make signed_repr thm
R110262:110272 AV.Integers Make signed_repr thm
R110283:110291 AV.Coqlib <> zlt_false thm
R110283:110291 AV.Coqlib <> zlt_false thm
R110283:110291 AV.Coqlib <> zlt_false thm
R110309:110316 AV.Integers Make xor_idem thm
R110309:110316 AV.Integers Make xor_idem thm
R110330:110339 AV.Integers Make min_signed def
R110342:110351 AV.Integers Make max_signed def
R110372:110383 AV.Coqlib <> proj_sumbool def
R110394:110402 AV.Coqlib <> zle_false thm
R110394:110402 AV.Coqlib <> zle_false thm
R110394:110402 AV.Coqlib <> zle_false thm
R110427:110432 AV.Integers Make signed def
R110435:110438 AV.Integers Make repr def
R110442:110444 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110461:110463 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110457:110459 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110464:110470 AV.Integers Make modulus def
R110427:110432 AV.Integers Make signed def
R110435:110438 AV.Integers Make repr def
R110442:110444 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110461:110463 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110457:110459 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110464:110470 AV.Integers Make modulus def
R110486:110493 AV.Coqlib <> zlt_true thm
R110486:110493 AV.Coqlib <> zlt_true thm
R110486:110493 AV.Coqlib <> zlt_true thm
R110511:110518 AV.Integers Make xor_idem thm
R110511:110518 AV.Integers Make xor_idem thm
R110533:110546 AV.Integers Make signed_repr_eq thm
R110533:110546 AV.Integers Make signed_repr_eq thm
R110533:110546 AV.Integers Make signed_repr_eq thm
R110558:110558 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R110564:110569 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R110560:110562 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110570:110576 AV.Integers Make modulus def
R110586:110588 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110558:110558 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R110564:110569 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R110560:110562 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110570:110576 AV.Integers Make modulus def
R110586:110588 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110605:110613 AV.Coqlib <> zlt_false thm
R110605:110613 AV.Coqlib <> zlt_false thm
R110605:110613 AV.Coqlib <> zlt_false thm
R110605:110613 AV.Coqlib <> zlt_false thm
R110642:110652 AV.Coqlib <> Zmod_unique thm
R110642:110652 AV.Coqlib <> Zmod_unique thm
R110678:110689 AV.Coqlib <> proj_sumbool def
R110705:110712 AV.Coqlib <> zle_true thm
R110705:110712 AV.Coqlib <> zle_true thm
R110705:110712 AV.Coqlib <> zle_true thm
R110737:110747 Coq.Bool.Bool <> andb_true_r thm
R110737:110747 Coq.Bool.Bool <> andb_true_r thm
R110737:110747 Coq.Bool.Bool <> andb_true_r thm
R110761:110768 AV.Coqlib <> zlt_true thm
R110761:110768 AV.Coqlib <> zlt_true thm
R110761:110768 AV.Coqlib <> zlt_true thm
R110797:110799 AV.Coqlib <> zlt def
R110810:110810 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R110811:110822 AV.Integers Make half_modulus def
R110803:110805 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110797:110799 AV.Coqlib <> zlt def
R110810:110810 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R110811:110822 AV.Integers Make half_modulus def
R110803:110805 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110838:110849 AV.Coqlib <> proj_sumbool def
R110860:110868 AV.Coqlib <> zle_false thm
R110860:110868 AV.Coqlib <> zle_false thm
R110860:110868 AV.Coqlib <> zle_false thm
R110893:110898 AV.Integers Make signed def
R110901:110904 AV.Integers Make repr def
R110908:110910 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110927:110929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R110923:110925 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110930:110936 AV.Integers Make modulus def
R110893:110898 AV.Integers Make signed def
R110901:110904 AV.Integers Make repr def
R110908:110910 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110927:110929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R110923:110925 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R110930:110936 AV.Integers Make modulus def
R110952:110960 AV.Coqlib <> zlt_false thm
R110952:110960 AV.Coqlib <> zlt_false thm
R110952:110960 AV.Coqlib <> zlt_false thm
R110978:110985 AV.Integers Make xor_zero thm
R110978:110985 AV.Integers Make xor_zero thm
R111000:111013 AV.Integers Make signed_repr_eq thm
R111000:111013 AV.Integers Make signed_repr_eq thm
R111000:111013 AV.Integers Make signed_repr_eq thm
R111025:111025 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R111031:111036 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R111027:111029 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R111037:111043 AV.Integers Make modulus def
R111057:111059 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R111053:111055 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R111060:111066 AV.Integers Make modulus def
R111025:111025 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R111031:111036 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R111027:111029 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R111037:111043 AV.Integers Make modulus def
R111057:111059 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R111053:111055 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R111060:111066 AV.Integers Make modulus def
R111082:111089 AV.Coqlib <> zlt_true thm
R111082:111089 AV.Coqlib <> zlt_true thm
R111082:111089 AV.Coqlib <> zlt_true thm
R111127:111137 AV.Coqlib <> Zmod_unique thm
R111127:111137 AV.Coqlib <> Zmod_unique thm
R111168:111179 AV.Coqlib <> proj_sumbool def
R111190:111197 AV.Coqlib <> zle_true thm
R111190:111197 AV.Coqlib <> zle_true thm
R111190:111197 AV.Coqlib <> zle_true thm
R111221:111231 AV.Integers Make signed_repr thm
R111221:111231 AV.Integers Make signed_repr thm
R111221:111231 AV.Integers Make signed_repr thm
R111221:111231 AV.Integers Make signed_repr thm
R111242:111249 AV.Coqlib <> zlt_true thm
R111242:111249 AV.Coqlib <> zlt_true thm
R111242:111249 AV.Coqlib <> zlt_true thm
R111267:111276 AV.Integers Make xor_zero_l thm
R111267:111276 AV.Integers Make xor_zero_l thm
R111290:111299 AV.Integers Make min_signed def
R111302:111311 AV.Integers Make max_signed def
prf 111333:111341 Make signed_eq
R111364:111366 Coq.Init.Logic <> :type_scope:x_'='_x not
R111358:111359 AV.Integers Make eq def
R111363:111363 AV.Integers <> y var
R111361:111361 AV.Integers <> x var
R111367:111369 AV.Coqlib <> zeq def
R111383:111388 AV.Integers Make signed def
R111390:111390 AV.Integers <> y var
R111372:111377 AV.Integers Make signed def
R111379:111379 AV.Integers <> x var
R111418:111419 AV.Integers Make eq def
R111429:111440 AV.Coqlib <> proj_sumbool def
R111455:111457 AV.Coqlib <> zeq def
R111473:111480 AV.Integers Make unsigned def
R111460:111467 AV.Integers Make unsigned def
R111499:111501 AV.Coqlib <> zeq def
R111515:111520 AV.Integers Make signed def
R111504:111509 AV.Integers Make signed def
R111455:111457 AV.Coqlib <> zeq def
R111473:111480 AV.Integers Make unsigned def
R111460:111467 AV.Integers Make unsigned def
R111499:111501 AV.Coqlib <> zeq def
R111515:111520 AV.Integers Make signed def
R111504:111509 AV.Integers Make signed def
R111499:111501 AV.Coqlib <> zeq def
R111515:111520 AV.Integers Make signed def
R111504:111509 AV.Integers Make signed def
R111550:111555 AV.Integers Make signed def
R111591:111602 AV.Integers Make eqm_small_eq thm
R111591:111602 AV.Integers Make eqm_small_eq thm
R111630:111638 AV.Integers Make eqm_trans thm
R111630:111638 AV.Integers Make eqm_trans thm
R111647:111653 AV.Integers Make eqm_sym thm
R111647:111653 AV.Integers Make eqm_sym thm
R111662:111680 AV.Integers Make eqm_signed_unsigned thm
R111662:111680 AV.Integers Make eqm_signed_unsigned thm
R111702:111720 AV.Integers Make eqm_signed_unsigned thm
R111702:111720 AV.Integers Make eqm_signed_unsigned thm
prf 111735:111740 Make not_lt
R111770:111773 Coq.Init.Logic <> :type_scope:x_'='_x not
R111790:111790 Coq.Init.Logic <> :type_scope:x_'='_x not
R111757:111760 Coq.Init.Datatypes <> negb def
R111763:111764 AV.Integers Make lt def
R111768:111768 AV.Integers <> x var
R111766:111766 AV.Integers <> y var
R111780:111783 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R111774:111775 AV.Integers Make lt def
R111779:111779 AV.Integers <> y var
R111777:111777 AV.Integers <> x var
R111784:111785 AV.Integers Make eq def
R111789:111789 AV.Integers <> y var
R111787:111787 AV.Integers <> x var
R111817:111818 AV.Integers Make lt def
R111829:111837 AV.Integers Make signed_eq thm
R111829:111837 AV.Integers Make signed_eq thm
R111829:111837 AV.Integers Make signed_eq thm
R111847:111858 AV.Coqlib <> proj_sumbool def
R111873:111875 AV.Coqlib <> zlt def
R111889:111894 AV.Integers Make signed def
R111878:111883 AV.Integers Make signed def
R111873:111875 AV.Coqlib <> zlt def
R111889:111894 AV.Integers Make signed def
R111878:111883 AV.Integers Make signed def
R111911:111919 AV.Coqlib <> zlt_false thm
R111911:111919 AV.Coqlib <> zlt_false thm
R111911:111919 AV.Coqlib <> zlt_false thm
R111911:111919 AV.Coqlib <> zlt_false thm
R111930:111938 AV.Coqlib <> zeq_false thm
R111930:111938 AV.Coqlib <> zeq_false thm
R111930:111938 AV.Coqlib <> zeq_false thm
R111930:111938 AV.Coqlib <> zeq_false thm
R111973:111975 AV.Coqlib <> zeq def
R111989:111994 AV.Integers Make signed def
R111978:111983 AV.Integers Make signed def
R111973:111975 AV.Coqlib <> zeq def
R111989:111994 AV.Integers Make signed def
R111978:111983 AV.Integers Make signed def
R112011:112019 AV.Coqlib <> zlt_false thm
R112011:112019 AV.Coqlib <> zlt_false thm
R112011:112019 AV.Coqlib <> zlt_false thm
R112011:112019 AV.Coqlib <> zlt_false thm
R112045:112052 AV.Coqlib <> zlt_true thm
R112045:112052 AV.Coqlib <> zlt_true thm
R112045:112052 AV.Coqlib <> zlt_true thm
R112045:112052 AV.Coqlib <> zlt_true thm
prf 112080:112085 Make lt_not
R112108:112110 Coq.Init.Logic <> :type_scope:x_'='_x not
R112102:112103 AV.Integers Make lt def
R112107:112107 AV.Integers <> x var
R112105:112105 AV.Integers <> y var
R112124:112127 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R112111:112114 Coq.Init.Datatypes <> negb def
R112117:112118 AV.Integers Make lt def
R112122:112122 AV.Integers <> y var
R112120:112120 AV.Integers <> x var
R112128:112131 Coq.Init.Datatypes <> negb def
R112134:112135 AV.Integers Make eq def
R112139:112139 AV.Integers <> y var
R112137:112137 AV.Integers <> x var
R112171:112178 Coq.Bool.Bool <> negb_orb thm
R112171:112178 Coq.Bool.Bool <> negb_orb thm
R112171:112178 Coq.Bool.Bool <> negb_orb thm
R112192:112197 AV.Integers Make not_lt thm
R112192:112197 AV.Integers Make not_lt thm
R112192:112197 AV.Integers Make not_lt thm
R112208:112222 Coq.Bool.Bool <> negb_involutive thm
R112208:112222 Coq.Bool.Bool <> negb_involutive thm
R112208:112222 Coq.Bool.Bool <> negb_involutive thm
prf 112243:112249 Make not_ltu
R112280:112283 Coq.Init.Logic <> :type_scope:x_'='_x not
R112301:112301 Coq.Init.Logic <> :type_scope:x_'='_x not
R112266:112269 Coq.Init.Datatypes <> negb def
R112272:112274 AV.Integers Make ltu def
R112278:112278 AV.Integers <> x var
R112276:112276 AV.Integers <> y var
R112291:112294 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R112284:112286 AV.Integers Make ltu def
R112290:112290 AV.Integers <> y var
R112288:112288 AV.Integers <> x var
R112295:112296 AV.Integers Make eq def
R112300:112300 AV.Integers <> y var
R112298:112298 AV.Integers <> x var
R112328:112330 AV.Integers Make ltu def
R112333:112334 AV.Integers Make eq def
R112349:112351 AV.Coqlib <> zlt def
R112367:112374 AV.Integers Make unsigned def
R112354:112361 AV.Integers Make unsigned def
R112349:112351 AV.Coqlib <> zlt def
R112367:112374 AV.Integers Make unsigned def
R112354:112361 AV.Integers Make unsigned def
R112391:112399 AV.Coqlib <> zlt_false thm
R112391:112399 AV.Coqlib <> zlt_false thm
R112391:112399 AV.Coqlib <> zlt_false thm
R112391:112399 AV.Coqlib <> zlt_false thm
R112410:112418 AV.Coqlib <> zeq_false thm
R112410:112418 AV.Coqlib <> zeq_false thm
R112410:112418 AV.Coqlib <> zeq_false thm
R112410:112418 AV.Coqlib <> zeq_false thm
R112453:112455 AV.Coqlib <> zeq def
R112471:112478 AV.Integers Make unsigned def
R112458:112465 AV.Integers Make unsigned def
R112453:112455 AV.Coqlib <> zeq def
R112471:112478 AV.Integers Make unsigned def
R112458:112465 AV.Integers Make unsigned def
R112495:112503 AV.Coqlib <> zlt_false thm
R112495:112503 AV.Coqlib <> zlt_false thm
R112495:112503 AV.Coqlib <> zlt_false thm
R112495:112503 AV.Coqlib <> zlt_false thm
R112529:112536 AV.Coqlib <> zlt_true thm
R112529:112536 AV.Coqlib <> zlt_true thm
R112529:112536 AV.Coqlib <> zlt_true thm
R112529:112536 AV.Coqlib <> zlt_true thm
prf 112564:112570 Make ltu_not
R112594:112596 Coq.Init.Logic <> :type_scope:x_'='_x not
R112587:112589 AV.Integers Make ltu def
R112593:112593 AV.Integers <> x var
R112591:112591 AV.Integers <> y var
R112611:112614 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R112597:112600 Coq.Init.Datatypes <> negb def
R112603:112605 AV.Integers Make ltu def
R112609:112609 AV.Integers <> y var
R112607:112607 AV.Integers <> x var
R112615:112618 Coq.Init.Datatypes <> negb def
R112621:112622 AV.Integers Make eq def
R112626:112626 AV.Integers <> y var
R112624:112624 AV.Integers <> x var
R112658:112665 Coq.Bool.Bool <> negb_orb thm
R112658:112665 Coq.Bool.Bool <> negb_orb thm
R112658:112665 Coq.Bool.Bool <> negb_orb thm
R112679:112685 AV.Integers Make not_ltu thm
R112679:112685 AV.Integers Make not_ltu thm
R112679:112685 AV.Integers Make not_ltu thm
R112696:112710 Coq.Bool.Bool <> negb_involutive thm
R112696:112710 Coq.Bool.Bool <> negb_involutive thm
R112696:112710 Coq.Bool.Bool <> negb_involutive thm
def 112766:112775 Make no_overlap
R112784:112786 AV.Integers Make int rec
R112795:112795 Coq.Numbers.BinNums <> Z ind
R112805:112807 AV.Integers Make int rec
R112816:112816 Coq.Numbers.BinNums <> Z ind
R112821:112824 Coq.Init.Datatypes <> bool ind
R112841:112848 AV.Integers Make unsigned def
R112850:112853 AV.Integers <> ofs1 var
R112868:112875 AV.Integers Make unsigned def
R112877:112880 AV.Integers <> ofs2 var
R112938:112944 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R112983:112983 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R112912:112915 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R112890:112892 AV.Coqlib <> zlt def
R112905:112911 AV.Integers Make modulus def
R112897:112899 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R112895:112896 AV.Integers <> x1 var
R112900:112902 AV.Integers <> sz1 var
R112916:112918 AV.Coqlib <> zlt def
R112931:112937 AV.Integers Make modulus def
R112923:112925 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R112921:112922 AV.Integers <> x2 var
R112926:112928 AV.Integers <> sz2 var
R112962:112965 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R112945:112947 AV.Coqlib <> zle def
R112960:112961 AV.Integers <> x2 var
R112952:112954 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R112950:112951 AV.Integers <> x1 var
R112955:112957 AV.Integers <> sz1 var
R112966:112968 AV.Coqlib <> zle def
R112981:112982 AV.Integers <> x1 var
R112973:112975 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R112971:112972 AV.Integers <> x2 var
R112976:112978 AV.Integers <> sz2 var
prf 112993:113008 Make no_overlap_sound
R113053:113056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R113064:113067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R113103:113108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R113167:113172 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R113139:113142 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113133:113135 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113109:113116 AV.Integers Make unsigned def
R113119:113121 AV.Integers Make add def
R113128:113131 AV.Integers <> ofs1 var
R113123:113126 AV.Integers <> base var
R113136:113138 AV.Integers <> sz1 var
R113143:113150 AV.Integers Make unsigned def
R113153:113155 AV.Integers Make add def
R113162:113165 AV.Integers <> ofs2 var
R113157:113160 AV.Integers <> base var
R113203:113206 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113197:113199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113173:113180 AV.Integers Make unsigned def
R113183:113185 AV.Integers Make add def
R113192:113195 AV.Integers <> ofs2 var
R113187:113190 AV.Integers <> base var
R113200:113202 AV.Integers <> sz2 var
R113207:113214 AV.Integers Make unsigned def
R113217:113219 AV.Integers Make add def
R113226:113229 AV.Integers <> ofs1 var
R113221:113224 AV.Integers <> base var
R113096:113098 Coq.Init.Logic <> :type_scope:x_'='_x not
R113068:113077 AV.Integers Make no_overlap def
R113093:113095 AV.Integers <> sz2 var
R113088:113091 AV.Integers <> ofs2 var
R113084:113086 AV.Integers <> sz1 var
R113079:113082 AV.Integers <> ofs1 var
R113099:113102 Coq.Init.Datatypes <> true constr
R113060:113062 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R113057:113059 AV.Integers <> sz2 var
R113049:113051 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R113046:113048 AV.Integers <> sz1 var
R113262:113270 Coq.Init.Datatypes <> andb_prop thm
R113262:113270 Coq.Init.Datatypes <> andb_prop thm
R113303:113311 Coq.Init.Datatypes <> andb_prop thm
R113303:113311 Coq.Init.Datatypes <> andb_prop thm
R113340:113356 AV.Coqlib <> proj_sumbool_true thm
R113340:113356 AV.Coqlib <> proj_sumbool_true thm
R113373:113389 AV.Coqlib <> proj_sumbool_true thm
R113373:113389 AV.Coqlib <> proj_sumbool_true thm
R113444:113447 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R113427:113430 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113421:113423 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113408:113415 AV.Integers Make unsigned def
R113431:113438 AV.Integers Make unsigned def
R113467:113470 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113461:113463 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113448:113455 AV.Integers Make unsigned def
R113471:113478 AV.Integers Make unsigned def
R113444:113447 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R113427:113430 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113421:113423 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113408:113415 AV.Integers Make unsigned def
R113431:113438 AV.Integers Make unsigned def
R113467:113470 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113461:113463 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R113448:113455 AV.Integers Make unsigned def
R113471:113478 AV.Integers Make unsigned def
R113499:113506 Coq.Bool.Bool <> orb_prop thm
R113499:113506 Coq.Bool.Bool <> orb_prop thm
R113530:113546 AV.Coqlib <> proj_sumbool_true thm
R113530:113546 AV.Coqlib <> proj_sumbool_true thm
R113570:113586 AV.Coqlib <> proj_sumbool_true thm
R113570:113586 AV.Coqlib <> proj_sumbool_true thm
R113622:113635 AV.Integers Make unsigned_range thm
R113644:113657 AV.Integers Make unsigned_range thm
R113622:113635 AV.Integers Make unsigned_range thm
R113644:113657 AV.Integers Make unsigned_range thm
R113692:113710 AV.Integers Make unsigned_add_either thm
R113724:113742 AV.Integers Make unsigned_add_either thm
R113692:113710 AV.Integers Make unsigned_add_either thm
R113724:113742 AV.Integers Make unsigned_add_either thm
def 113837:113841 Make Zsize
R113847:113847 Coq.Numbers.BinNums <> Z ind
R113852:113852 Coq.Numbers.BinNums <> Z ind
R113865:113865 AV.Integers <> x var
R113876:113879 Coq.Numbers.BinNums <> Zpos constr
R113886:113889 Coq.Numbers.BinNums <> Zpos constr
R113892:113899 Coq.PArith.BinPos Pos size def
def 113934:113937 Make size
R113943:113945 AV.Integers Make int rec
R113950:113950 Coq.Numbers.BinNums <> Z ind
R113955:113959 AV.Integers Make Zsize def
R113962:113969 AV.Integers Make unsigned def
R113971:113971 AV.Integers <> x var
prf 113983:113991 Make Zsize_pos
R114005:114008 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114009:114013 AV.Integers Make Zsize def
R114015:114015 AV.Integers <> x var
prf 114104:114113 Make Zsize_pos'
R114131:114134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R114136:114138 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R114139:114143 AV.Integers Make Zsize def
R114145:114145 AV.Integers <> x var
R114127:114129 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R114130:114130 AV.Integers <> x var
prf 114229:114241 Make Zsize_shiftin
R114263:114266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R114287:114289 Coq.Init.Logic <> :type_scope:x_'='_x not
R114267:114271 AV.Integers Make Zsize def
R114274:114281 AV.Integers Make Zshiftin def
R114285:114285 AV.Integers <> x var
R114283:114283 AV.Integers <> b var
R114290:114295 Coq.ZArith.BinInt Z succ def
R114298:114302 AV.Integers Make Zsize def
R114304:114304 AV.Integers <> x var
R114259:114261 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R114262:114262 AV.Integers <> x var
R114423:114426 Coq.Numbers.BinNums <> Zpos constr
R114430:114431 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R114393:114400 AV.Integers Make Zshiftin def
R114408:114411 Coq.Numbers.BinNums <> Zpos constr
R114402:114405 Coq.Init.Datatypes <> true constr
R114393:114400 AV.Integers Make Zshiftin def
R114408:114411 Coq.Numbers.BinNums <> Zpos constr
R114402:114405 Coq.Init.Datatypes <> true constr
R114423:114426 Coq.Numbers.BinNums <> Zpos constr
R114430:114431 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R114462:114472 Coq.PArith.BinPos Pos add_1_r thm
R114462:114472 Coq.PArith.BinPos Pos add_1_r thm
R114462:114472 Coq.PArith.BinPos Pos add_1_r thm
R114522:114525 Coq.Numbers.BinNums <> Zpos constr
R114529:114530 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R114491:114498 AV.Integers Make Zshiftin def
R114507:114510 Coq.Numbers.BinNums <> Zpos constr
R114500:114504 Coq.Init.Datatypes <> false constr
R114491:114498 AV.Integers Make Zshiftin def
R114507:114510 Coq.Numbers.BinNums <> Zpos constr
R114500:114504 Coq.Init.Datatypes <> false constr
R114522:114525 Coq.Numbers.BinNums <> Zpos constr
R114529:114530 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R114561:114571 Coq.PArith.BinPos Pos add_1_r thm
R114561:114571 Coq.PArith.BinPos Pos add_1_r thm
R114561:114571 Coq.PArith.BinPos Pos add_1_r thm
prf 114592:114606 Make Ztestbit_size_1
R114626:114629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R114660:114662 Coq.Init.Logic <> :type_scope:x_'='_x not
R114630:114638 Coq.ZArith.BinInt Z testbit def
R114643:114648 Coq.ZArith.BinInt Z pred def
R114651:114655 AV.Integers Make Zsize def
R114657:114657 AV.Integers <> x var
R114640:114640 AV.Integers <> x var
R114663:114666 Coq.Init.Datatypes <> true constr
R114622:114624 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R114625:114625 AV.Integers <> x var
R114712:114727 AV.Integers Make Zshiftin_pos_ind thm
R114712:114727 AV.Integers Make Zshiftin_pos_ind thm
R114754:114766 AV.Integers Make Zsize_shiftin thm
R114754:114766 AV.Integers Make Zsize_shiftin thm
R114754:114766 AV.Integers Make Zsize_shiftin thm
R114754:114766 AV.Integers Make Zsize_shiftin thm
R114786:114791 Coq.ZArith.BinInt Z pred def
R114794:114799 Coq.ZArith.BinInt Z succ def
R114802:114806 AV.Integers Make Zsize def
R114819:114824 Coq.ZArith.BinInt Z succ def
R114827:114832 Coq.ZArith.BinInt Z pred def
R114835:114839 AV.Integers Make Zsize def
R114786:114791 Coq.ZArith.BinInt Z pred def
R114794:114799 Coq.ZArith.BinInt Z succ def
R114802:114806 AV.Integers Make Zsize def
R114819:114824 Coq.ZArith.BinInt Z succ def
R114827:114832 Coq.ZArith.BinInt Z pred def
R114835:114839 AV.Integers Make Zsize def
R114866:114886 AV.Integers Make Ztestbit_shiftin_succ thm
R114866:114886 AV.Integers Make Ztestbit_shiftin_succ thm
R114866:114886 AV.Integers Make Ztestbit_shiftin_succ thm
R114866:114886 AV.Integers Make Ztestbit_shiftin_succ thm
R114907:114916 AV.Integers Make Zsize_pos' thm
R114907:114916 AV.Integers Make Zsize_pos' thm
prf 114943:114957 Make Ztestbit_size_2
R114978:114981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115004:115007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115021:115023 Coq.Init.Logic <> :type_scope:x_'='_x not
R115008:115016 Coq.ZArith.BinInt Z testbit def
R115020:115020 AV.Integers <> i var
R115018:115018 AV.Integers <> x var
R115024:115028 Coq.Init.Datatypes <> false constr
R114993:114996 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R114992:114992 AV.Integers <> i var
R114997:115001 AV.Integers Make Zsize def
R115003:115003 AV.Integers <> x var
R114973:114976 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114977:114977 AV.Integers <> x var
R115066:115068 AV.Coqlib <> zeq def
R115066:115068 AV.Coqlib <> zeq def
R115105:115114 AV.Integers Make Ztestbit_0 thm
R115105:115114 AV.Integers Make Ztestbit_0 thm
R115139:115154 AV.Integers Make Zshiftin_pos_ind thm
R115139:115154 AV.Integers Make Zshiftin_pos_ind thm
R115193:115200 AV.Integers Make Zshiftin def
R115202:115205 Coq.Init.Datatypes <> true constr
R115193:115200 AV.Integers Make Zshiftin def
R115202:115205 Coq.Init.Datatypes <> true constr
R115219:115234 AV.Integers Make Ztestbit_shiftin thm
R115219:115234 AV.Integers Make Ztestbit_shiftin thm
R115219:115234 AV.Integers Make Ztestbit_shiftin thm
R115219:115234 AV.Integers Make Ztestbit_shiftin thm
R115251:115259 AV.Coqlib <> zeq_false thm
R115251:115259 AV.Coqlib <> zeq_false thm
R115251:115259 AV.Coqlib <> zeq_false thm
R115251:115259 AV.Coqlib <> zeq_false thm
R115268:115277 AV.Integers Make Ztestbit_0 thm
R115268:115277 AV.Integers Make Ztestbit_0 thm
R115316:115328 AV.Integers Make Zsize_shiftin thm
R115316:115328 AV.Integers Make Zsize_shiftin thm
R115316:115328 AV.Integers Make Zsize_shiftin thm
R115316:115328 AV.Integers Make Zsize_shiftin thm
R115361:115370 AV.Integers Make Zsize_pos' thm
R115361:115370 AV.Integers Make Zsize_pos' thm
R115400:115415 AV.Integers Make Ztestbit_shiftin thm
R115400:115415 AV.Integers Make Ztestbit_shiftin thm
R115400:115415 AV.Integers Make Ztestbit_shiftin thm
R115400:115415 AV.Integers Make Ztestbit_shiftin thm
R115426:115434 AV.Coqlib <> zeq_false thm
R115426:115434 AV.Coqlib <> zeq_false thm
R115426:115434 AV.Coqlib <> zeq_false thm
R115426:115434 AV.Coqlib <> zeq_false thm
prf 115499:115514 Make Zsize_interval_1
R115535:115538 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115540:115543 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115545:115547 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115544:115544 AV.Integers <> x var
R115544:115544 AV.Integers <> x var
R115548:115552 Coq.ZArith.Zpower <> two_p def
R115555:115559 AV.Integers Make Zsize def
R115561:115561 AV.Integers <> x var
R115530:115533 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R115534:115534 AV.Integers <> x var
R115593:115595 Coq.Init.Logic <> :type_scope:x_'='_x not
R115597:115602 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R115618:115618 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R115603:115607 Coq.ZArith.Zpower <> two_p def
R115610:115614 AV.Integers Make Zsize def
R115593:115595 Coq.Init.Logic <> :type_scope:x_'='_x not
R115597:115602 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R115618:115618 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R115603:115607 Coq.ZArith.Zpower <> two_p def
R115610:115614 AV.Integers Make Zsize def
R115632:115646 AV.Integers Make equal_same_bits thm
R115632:115646 AV.Integers Make equal_same_bits thm
R115669:115686 AV.Integers Make Ztestbit_mod_two_p thm
R115669:115686 AV.Integers Make Ztestbit_mod_two_p thm
R115669:115686 AV.Integers Make Ztestbit_mod_two_p thm
R115669:115686 AV.Integers Make Ztestbit_mod_two_p thm
R115669:115686 AV.Integers Make Ztestbit_mod_two_p thm
R115709:115711 AV.Coqlib <> zlt def
R115716:115720 AV.Integers Make Zsize def
R115709:115711 AV.Coqlib <> zlt def
R115716:115720 AV.Integers Make Zsize def
R115739:115753 AV.Integers Make Ztestbit_size_2 thm
R115739:115753 AV.Integers Make Ztestbit_size_2 thm
R115772:115780 AV.Integers Make Zsize_pos thm
R115772:115780 AV.Integers Make Zsize_pos thm
R115831:115838 Coq.ZArith.Zdiv <> Z_mod_lt thm
R115831:115838 Coq.ZArith.Zdiv <> Z_mod_lt thm
R115847:115859 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R115847:115859 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R115868:115876 AV.Integers Make Zsize_pos thm
R115868:115876 AV.Integers Make Zsize_pos thm
prf 115897:115912 Make Zsize_interval_2
R115935:115938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115955:115958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115960:115963 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R115959:115959 AV.Integers <> n var
R115964:115968 AV.Integers Make Zsize def
R115970:115970 AV.Integers <> x var
R115940:115943 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115945:115947 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115944:115944 AV.Integers <> x var
R115944:115944 AV.Integers <> x var
R115948:115952 Coq.ZArith.Zpower <> two_p def
R115954:115954 AV.Integers <> n var
R115930:115933 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R115934:115934 AV.Integers <> n var
R116000:116007 Coq.ZArith.BinInt Z to_nat def
R116000:116007 Coq.ZArith.BinInt Z to_nat def
R116033:116035 Coq.Init.Logic <> :type_scope:x_'='_x not
R116023:116030 Coq.ZArith.BinInt Z of_nat def
R116049:116056 Coq.ZArith.Znat Z2Nat id thm
R116033:116035 Coq.Init.Logic <> :type_scope:x_'='_x not
R116023:116030 Coq.ZArith.BinInt Z of_nat def
R116049:116056 Coq.ZArith.Znat Z2Nat id thm
R116100:116118 AV.Coqlib <> two_power_nat_two_p thm
R116100:116118 AV.Coqlib <> two_power_nat_two_p thm
R116100:116118 AV.Coqlib <> two_power_nat_two_p thm
R116139:116141 AV.Coqlib <> zeq def
R116139:116141 AV.Coqlib <> zeq def
R116186:116188 AV.Coqlib <> zlt def
R116193:116197 AV.Integers Make Zsize def
R116186:116188 AV.Coqlib <> zlt def
R116193:116197 AV.Integers Make Zsize def
R116221:116234 AV.Integers Make Ztestbit_above thm
R116241:116246 Coq.ZArith.BinInt Z pred def
R116249:116253 AV.Integers Make Zsize def
R116221:116234 AV.Integers Make Ztestbit_above thm
R116241:116246 Coq.ZArith.BinInt Z pred def
R116249:116253 AV.Integers Make Zsize def
R116284:116298 AV.Integers Make Ztestbit_size_1 thm
R116284:116298 AV.Integers Make Ztestbit_size_1 thm
R116284:116298 AV.Integers Make Ztestbit_size_1 thm
R116284:116298 AV.Integers Make Ztestbit_size_1 thm
prf 116332:116345 Make Zsize_monotone
R116373:116376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116384:116387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R116377:116381 AV.Integers Make Zsize def
R116383:116383 AV.Integers <> x var
R116388:116392 AV.Integers Make Zsize def
R116394:116394 AV.Integers <> y var
R116363:116366 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R116368:116371 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R116367:116367 AV.Integers <> x var
R116367:116367 AV.Integers <> x var
R116372:116372 AV.Integers <> y var
R116420:116426 Coq.ZArith.BinInt Z ge_le thm
R116420:116426 Coq.ZArith.BinInt Z ge_le thm
R116435:116450 AV.Integers Make Zsize_interval_2 thm
R116435:116450 AV.Integers Make Zsize_interval_2 thm
R116459:116467 AV.Integers Make Zsize_pos thm
R116459:116467 AV.Integers Make Zsize_pos thm
R116481:116496 AV.Integers Make Zsize_interval_1 thm
R116481:116496 AV.Integers Make Zsize_interval_1 thm
prf 116532:116540 Make size_zero
R116552:116554 Coq.Init.Logic <> :type_scope:x_'='_x not
R116543:116546 AV.Integers Make size def
R116548:116551 AV.Integers Make zero def
R116574:116577 AV.Integers Make size def
R116588:116600 AV.Integers Make unsigned_zero thm
R116588:116600 AV.Integers Make unsigned_zero thm
R116588:116600 AV.Integers Make unsigned_zero thm
prf 116623:116633 Make bits_size_1
R116656:116659 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R116649:116651 Coq.Init.Logic <> :type_scope:x_'='_x not
R116648:116648 AV.Integers <> x var
R116652:116655 AV.Integers Make zero def
R116687:116689 Coq.Init.Logic <> :type_scope:x_'='_x not
R116660:116666 AV.Integers Make testbit def
R116671:116676 Coq.ZArith.BinInt Z pred def
R116679:116682 AV.Integers Make size def
R116684:116684 AV.Integers <> x var
R116668:116668 AV.Integers <> x var
R116690:116693 Coq.Init.Datatypes <> true constr
R116723:116725 AV.Coqlib <> zeq def
R116728:116735 AV.Integers Make unsigned def
R116723:116725 AV.Coqlib <> zeq def
R116728:116735 AV.Integers Make unsigned def
R116764:116776 AV.Integers Make repr_unsigned thm
R116764:116776 AV.Integers Make repr_unsigned thm
R116764:116776 AV.Integers Make repr_unsigned thm
R116814:116828 AV.Integers Make Ztestbit_size_1 thm
R116814:116828 AV.Integers Make Ztestbit_size_1 thm
R116843:116856 AV.Integers Make unsigned_range thm
R116843:116856 AV.Integers Make unsigned_range thm
prf 116883:116893 Make bits_size_2
R116921:116924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116936:116938 Coq.Init.Logic <> :type_scope:x_'='_x not
R116925:116931 AV.Integers Make testbit def
R116935:116935 AV.Integers <> i var
R116933:116933 AV.Integers <> x var
R116939:116943 Coq.Init.Datatypes <> false constr
R116916:116919 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R116910:116913 AV.Integers Make size def
R116915:116915 AV.Integers <> x var
R116920:116920 AV.Integers <> i var
R116969:116983 AV.Integers Make Ztestbit_size_2 thm
R116969:116983 AV.Integers Make Ztestbit_size_2 thm
R116998:117011 AV.Integers Make unsigned_range thm
R116998:117011 AV.Integers Make unsigned_range thm
R117032:117035 AV.Integers Make size def
R117032:117035 AV.Integers Make size def
prf 117062:117071 Make size_range
R117087:117090 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R117097:117100 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R117091:117094 AV.Integers Make size def
R117096:117096 AV.Integers <> x var
R117091:117094 AV.Integers Make size def
R117096:117096 AV.Integers <> x var
R117101:117109 AV.Integers Make zwordsize def
R117142:117150 AV.Integers Make Zsize_pos thm
R117142:117150 AV.Integers Make Zsize_pos thm
R117165:117175 AV.Integers Make bits_size_1 thm
R117165:117175 AV.Integers Make bits_size_1 thm
R117199:117202 AV.Integers Make size def
R117213:117225 AV.Integers Make unsigned_zero thm
R117213:117225 AV.Integers Make unsigned_zero thm
R117213:117225 AV.Integers Make unsigned_zero thm
R117246:117257 AV.Integers Make wordsize_pos thm
R117246:117257 AV.Integers Make wordsize_pos thm
R117279:117281 AV.Coqlib <> zle def
R117292:117300 AV.Integers Make zwordsize def
R117284:117287 AV.Integers Make size def
R117279:117281 AV.Coqlib <> zle def
R117292:117300 AV.Integers Make zwordsize def
R117284:117287 AV.Integers Make size def
R117320:117329 AV.Integers Make bits_above thm
R117320:117329 AV.Integers Make bits_above thm
R117320:117329 AV.Integers Make bits_above thm
R117320:117329 AV.Integers Make bits_above thm
prf 117370:117380 Make bits_size_3
R117405:117410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117411:117411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117463:117469 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117476:117479 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R117470:117473 AV.Integers Make size def
R117475:117475 AV.Integers <> x var
R117480:117480 AV.Integers <> n var
R117440:117443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117455:117457 Coq.Init.Logic <> :type_scope:x_'='_x not
R117444:117450 AV.Integers Make testbit def
R117454:117454 AV.Integers <> i var
R117452:117452 AV.Integers <> x var
R117458:117462 Coq.Init.Datatypes <> false constr
R117423:117426 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117428:117430 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117422:117422 AV.Integers <> n var
R117427:117427 AV.Integers <> i var
R117427:117427 AV.Integers <> i var
R117431:117439 AV.Integers Make zwordsize def
R117400:117403 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R117404:117404 AV.Integers <> n var
R117510:117512 AV.Coqlib <> zle def
R117515:117518 AV.Integers Make size def
R117510:117512 AV.Coqlib <> zle def
R117515:117518 AV.Integers Make size def
R117545:117555 AV.Integers Make bits_size_1 thm
R117545:117555 AV.Integers Make bits_size_1 thm
R117579:117582 AV.Integers Make size def
R117593:117605 AV.Integers Make unsigned_zero thm
R117593:117605 AV.Integers Make unsigned_zero thm
R117593:117605 AV.Integers Make unsigned_zero thm
R117635:117640 Coq.ZArith.BinInt Z pred def
R117643:117646 AV.Integers Make size def
R117635:117640 Coq.ZArith.BinInt Z pred def
R117643:117646 AV.Integers Make size def
R117635:117640 Coq.ZArith.BinInt Z pred def
R117643:117646 AV.Integers Make size def
R117635:117640 Coq.ZArith.BinInt Z pred def
R117643:117646 AV.Integers Make size def
R117686:117695 AV.Integers Make size_range thm
R117686:117695 AV.Integers Make size_range thm
prf 117722:117732 Make bits_size_4
R117757:117762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117790:117795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117796:117796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117848:117854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117861:117863 Coq.Init.Logic <> :type_scope:x_'='_x not
R117855:117858 AV.Integers Make size def
R117860:117860 AV.Integers <> x var
R117864:117864 AV.Integers <> n var
R117825:117828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117840:117842 Coq.Init.Logic <> :type_scope:x_'='_x not
R117829:117835 AV.Integers Make testbit def
R117839:117839 AV.Integers <> i var
R117837:117837 AV.Integers <> x var
R117843:117847 Coq.Init.Datatypes <> false constr
R117808:117811 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117813:117815 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117807:117807 AV.Integers <> n var
R117812:117812 AV.Integers <> i var
R117812:117812 AV.Integers <> i var
R117816:117824 AV.Integers Make zwordsize def
R117783:117785 Coq.Init.Logic <> :type_scope:x_'='_x not
R117763:117769 AV.Integers Make testbit def
R117774:117779 Coq.ZArith.BinInt Z pred def
R117781:117781 AV.Integers <> n var
R117771:117771 AV.Integers <> x var
R117786:117789 Coq.Init.Datatypes <> true constr
R117752:117755 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R117756:117756 AV.Integers <> n var
R117900:117903 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R117894:117897 AV.Integers Make size def
R117900:117903 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R117894:117897 AV.Integers Make size def
R117918:117928 AV.Integers Make bits_size_3 thm
R117918:117928 AV.Integers Make bits_size_3 thm
R117949:117951 AV.Coqlib <> zlt def
R117954:117957 AV.Integers Make size def
R117949:117951 AV.Coqlib <> zlt def
R117954:117957 AV.Integers Make size def
R117976:117986 AV.Integers Make bits_size_2 thm
R117976:117986 AV.Integers Make bits_size_2 thm
R117976:117986 AV.Integers Make bits_size_2 thm
R117976:117986 AV.Integers Make bits_size_2 thm
prf 118037:118051 Make size_interval_1
R118067:118070 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118081:118083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118071:118078 AV.Integers Make unsigned def
R118080:118080 AV.Integers <> x var
R118071:118078 AV.Integers Make unsigned def
R118080:118080 AV.Integers <> x var
R118084:118088 Coq.ZArith.Zpower <> two_p def
R118091:118094 AV.Integers Make size def
R118096:118096 AV.Integers <> x var
R118123:118138 AV.Integers Make Zsize_interval_1 thm
R118123:118138 AV.Integers Make Zsize_interval_1 thm
R118153:118166 AV.Integers Make unsigned_range thm
R118153:118166 AV.Integers Make unsigned_range thm
prf 118193:118207 Make size_interval_2
R118230:118233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R118259:118262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R118264:118267 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R118263:118263 AV.Integers <> n var
R118268:118271 AV.Integers Make size def
R118273:118273 AV.Integers <> x var
R118235:118238 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118249:118251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118239:118246 AV.Integers Make unsigned def
R118248:118248 AV.Integers <> x var
R118239:118246 AV.Integers Make unsigned def
R118248:118248 AV.Integers <> x var
R118252:118256 Coq.ZArith.Zpower <> two_p def
R118258:118258 AV.Integers <> n var
R118225:118228 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118229:118229 AV.Integers <> n var
R118299:118314 AV.Integers Make Zsize_interval_2 thm
R118299:118314 AV.Integers Make Zsize_interval_2 thm
prf 118337:118344 Make size_and
R118375:118378 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118361:118364 AV.Integers Make size def
R118367:118369 AV.Integers Make and def
R118373:118373 AV.Integers <> b var
R118371:118371 AV.Integers <> a var
R118379:118383 Coq.ZArith.BinInt Z min def
R118395:118398 AV.Integers Make size def
R118400:118400 AV.Integers <> b var
R118386:118389 AV.Integers Make size def
R118391:118391 AV.Integers <> a var
R118432:118435 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118436:118440 Coq.ZArith.BinInt Z min def
R118452:118455 AV.Integers Make size def
R118443:118446 AV.Integers Make size def
R118432:118435 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118436:118440 Coq.ZArith.BinInt Z min def
R118452:118455 AV.Integers Make size def
R118443:118446 AV.Integers Make size def
R118478:118487 AV.Integers Make size_range thm
R118493:118502 AV.Integers Make size_range thm
R118478:118487 AV.Integers Make size_range thm
R118493:118502 AV.Integers Make size_range thm
R118529:118539 AV.Integers Make bits_size_3 thm
R118529:118539 AV.Integers Make bits_size_3 thm
R118566:118573 AV.Integers Make bits_and thm
R118566:118573 AV.Integers Make bits_and thm
R118566:118573 AV.Integers Make bits_and thm
R118566:118573 AV.Integers Make bits_and thm
R118618:118628 AV.Integers Make bits_size_2 thm
R118618:118628 AV.Integers Make bits_size_2 thm
R118618:118628 AV.Integers Make bits_size_2 thm
R118618:118628 AV.Integers Make bits_size_2 thm
R118658:118668 AV.Integers Make bits_size_2 thm
R118658:118668 AV.Integers Make bits_size_2 thm
R118658:118668 AV.Integers Make bits_size_2 thm
R118658:118668 AV.Integers Make bits_size_2 thm
R118680:118691 Coq.Bool.Bool <> andb_false_r thm
R118680:118691 Coq.Bool.Bool <> andb_false_r thm
prf 118726:118737 Make and_interval
R118755:118758 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118777:118779 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118759:118766 AV.Integers Make unsigned def
R118769:118771 AV.Integers Make and def
R118775:118775 AV.Integers <> b var
R118773:118773 AV.Integers <> a var
R118759:118766 AV.Integers Make unsigned def
R118769:118771 AV.Integers Make and def
R118775:118775 AV.Integers <> b var
R118773:118773 AV.Integers <> a var
R118780:118784 Coq.ZArith.Zpower <> two_p def
R118787:118791 Coq.ZArith.BinInt Z min def
R118803:118806 AV.Integers Make size def
R118808:118808 AV.Integers <> b var
R118794:118797 AV.Integers Make size def
R118799:118799 AV.Integers <> a var
R118844:118858 AV.Integers Make size_interval_1 thm
R118861:118863 AV.Integers Make and def
R118844:118858 AV.Integers Make size_interval_1 thm
R118861:118863 AV.Integers Make and def
R118912:118915 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118890:118894 Coq.ZArith.Zpower <> two_p def
R118897:118900 AV.Integers Make size def
R118903:118905 AV.Integers Make and def
R118916:118920 Coq.ZArith.Zpower <> two_p def
R118923:118927 Coq.ZArith.BinInt Z min def
R118939:118942 AV.Integers Make size def
R118930:118933 AV.Integers Make size def
R118912:118915 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R118890:118894 Coq.ZArith.Zpower <> two_p def
R118897:118900 AV.Integers Make size def
R118903:118905 AV.Integers Make and def
R118916:118920 Coq.ZArith.Zpower <> two_p def
R118923:118927 Coq.ZArith.BinInt Z min def
R118939:118942 AV.Integers Make size def
R118930:118933 AV.Integers Make size def
R118958:118971 AV.Coqlib <> two_p_monotone thm
R118958:118971 AV.Coqlib <> two_p_monotone thm
R118993:119002 AV.Integers Make size_range thm
R119005:119007 AV.Integers Make and def
R118993:119002 AV.Integers Make size_range thm
R119005:119007 AV.Integers Make and def
R119031:119038 AV.Integers Make size_and thm
R119031:119038 AV.Integers Make size_and thm
prf 119064:119070 Make size_or
R119100:119102 Coq.Init.Logic <> :type_scope:x_'='_x not
R119087:119090 AV.Integers Make size def
R119093:119094 AV.Integers Make or def
R119098:119098 AV.Integers <> b var
R119096:119096 AV.Integers <> a var
R119103:119107 Coq.ZArith.BinInt Z max def
R119119:119122 AV.Integers Make size def
R119124:119124 AV.Integers <> b var
R119110:119113 AV.Integers Make size def
R119115:119115 AV.Integers <> a var
R119157:119166 AV.Integers Make size_range thm
R119172:119181 AV.Integers Make size_range thm
R119157:119166 AV.Integers Make size_range thm
R119172:119181 AV.Integers Make size_range thm
R119207:119217 AV.Integers Make bits_size_1 thm
R119207:119217 AV.Integers Make bits_size_1 thm
R119242:119250 AV.Integers Make size_zero thm
R119242:119250 AV.Integers Make size_zero thm
R119242:119250 AV.Integers Make size_zero thm
R119261:119269 AV.Integers Make or_zero_l thm
R119261:119269 AV.Integers Make or_zero_l thm
R119261:119269 AV.Integers Make or_zero_l thm
R119297:119307 AV.Integers Make bits_size_1 thm
R119297:119307 AV.Integers Make bits_size_1 thm
R119332:119340 AV.Integers Make size_zero thm
R119332:119340 AV.Integers Make size_zero thm
R119332:119340 AV.Integers Make size_zero thm
R119351:119357 AV.Integers Make or_zero thm
R119351:119357 AV.Integers Make or_zero thm
R119351:119357 AV.Integers Make or_zero thm
R119428:119438 AV.Integers Make bits_size_4 thm
R119428:119438 AV.Integers Make bits_size_4 thm
R119456:119462 AV.Integers Make bits_or thm
R119456:119462 AV.Integers Make bits_or thm
R119456:119462 AV.Integers Make bits_or thm
R119456:119462 AV.Integers Make bits_or thm
R119483:119492 Coq.Bool.Bool <> orb_true_r thm
R119483:119492 Coq.Bool.Bool <> orb_true_r thm
R119522:119528 AV.Integers Make bits_or thm
R119522:119528 AV.Integers Make bits_or thm
R119522:119528 AV.Integers Make bits_or thm
R119522:119528 AV.Integers Make bits_or thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119540:119550 AV.Integers Make bits_size_2 thm
R119588:119598 AV.Integers Make bits_size_4 thm
R119588:119598 AV.Integers Make bits_size_4 thm
R119616:119622 AV.Integers Make bits_or thm
R119616:119622 AV.Integers Make bits_or thm
R119616:119622 AV.Integers Make bits_or thm
R119616:119622 AV.Integers Make bits_or thm
R119643:119652 Coq.Bool.Bool <> orb_true_l thm
R119643:119652 Coq.Bool.Bool <> orb_true_l thm
R119667:119669 AV.Coqlib <> zeq def
R119672:119675 AV.Integers Make size def
R119667:119669 AV.Coqlib <> zeq def
R119672:119675 AV.Integers Make size def
R119691:119697 AV.Integers Make testbit def
R119714:119728 Coq.ZArith.BinInt Z testbit_neg_r thm
R119714:119728 Coq.ZArith.BinInt Z testbit_neg_r thm
R119714:119728 Coq.ZArith.BinInt Z testbit_neg_r thm
R119714:119728 Coq.ZArith.BinInt Z testbit_neg_r thm
R119783:119789 AV.Integers Make bits_or thm
R119783:119789 AV.Integers Make bits_or thm
R119783:119789 AV.Integers Make bits_or thm
R119783:119789 AV.Integers Make bits_or thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
R119801:119811 AV.Integers Make bits_size_2 thm
prf 119857:119867 Make or_interval
R119885:119888 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R119906:119908 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R119889:119896 AV.Integers Make unsigned def
R119899:119900 AV.Integers Make or def
R119904:119904 AV.Integers <> b var
R119902:119902 AV.Integers <> a var
R119889:119896 AV.Integers Make unsigned def
R119899:119900 AV.Integers Make or def
R119904:119904 AV.Integers <> b var
R119902:119902 AV.Integers <> a var
R119909:119913 Coq.ZArith.Zpower <> two_p def
R119916:119920 Coq.ZArith.BinInt Z max def
R119932:119935 AV.Integers Make size def
R119937:119937 AV.Integers <> b var
R119923:119926 AV.Integers Make size def
R119928:119928 AV.Integers <> a var
R119970:119976 AV.Integers Make size_or thm
R119970:119976 AV.Integers Make size_or thm
R119970:119976 AV.Integers Make size_or thm
R119985:119999 AV.Integers Make size_interval_1 thm
R119985:119999 AV.Integers Make size_interval_1 thm
prf 120016:120023 Make size_xor
R120054:120057 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R120040:120043 AV.Integers Make size def
R120046:120048 AV.Integers Make xor def
R120052:120052 AV.Integers <> b var
R120050:120050 AV.Integers <> a var
R120058:120062 Coq.ZArith.BinInt Z max def
R120074:120077 AV.Integers Make size def
R120079:120079 AV.Integers <> b var
R120065:120068 AV.Integers Make size def
R120070:120070 AV.Integers <> a var
R120111:120114 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R120115:120119 Coq.ZArith.BinInt Z max def
R120131:120134 AV.Integers Make size def
R120122:120125 AV.Integers Make size def
R120111:120114 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R120115:120119 Coq.ZArith.BinInt Z max def
R120131:120134 AV.Integers Make size def
R120122:120125 AV.Integers Make size def
R120157:120166 AV.Integers Make size_range thm
R120172:120181 AV.Integers Make size_range thm
R120157:120166 AV.Integers Make size_range thm
R120172:120181 AV.Integers Make size_range thm
R120208:120218 AV.Integers Make bits_size_3 thm
R120208:120218 AV.Integers Make bits_size_3 thm
R120245:120252 AV.Integers Make bits_xor thm
R120245:120252 AV.Integers Make bits_xor thm
R120245:120252 AV.Integers Make bits_xor thm
R120245:120252 AV.Integers Make bits_xor thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
R120264:120274 AV.Integers Make bits_size_2 thm
prf 120338:120349 Make xor_interval
R120367:120370 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R120389:120391 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R120371:120378 AV.Integers Make unsigned def
R120381:120383 AV.Integers Make xor def
R120387:120387 AV.Integers <> b var
R120385:120385 AV.Integers <> a var
R120371:120378 AV.Integers Make unsigned def
R120381:120383 AV.Integers Make xor def
R120387:120387 AV.Integers <> b var
R120385:120385 AV.Integers <> a var
R120392:120396 Coq.ZArith.Zpower <> two_p def
R120399:120403 Coq.ZArith.BinInt Z max def
R120415:120418 AV.Integers Make size def
R120420:120420 AV.Integers <> b var
R120406:120409 AV.Integers Make size def
R120411:120411 AV.Integers <> a var
R120456:120470 AV.Integers Make size_interval_1 thm
R120473:120475 AV.Integers Make xor def
R120456:120470 AV.Integers Make size_interval_1 thm
R120473:120475 AV.Integers Make xor def
R120524:120527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R120502:120506 Coq.ZArith.Zpower <> two_p def
R120509:120512 AV.Integers Make size def
R120515:120517 AV.Integers Make xor def
R120528:120532 Coq.ZArith.Zpower <> two_p def
R120535:120539 Coq.ZArith.BinInt Z max def
R120551:120554 AV.Integers Make size def
R120542:120545 AV.Integers Make size def
R120524:120527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R120502:120506 Coq.ZArith.Zpower <> two_p def
R120509:120512 AV.Integers Make size def
R120515:120517 AV.Integers Make xor def
R120528:120532 Coq.ZArith.Zpower <> two_p def
R120535:120539 Coq.ZArith.BinInt Z max def
R120551:120554 AV.Integers Make size def
R120542:120545 AV.Integers Make size def
R120570:120583 AV.Coqlib <> two_p_monotone thm
R120570:120583 AV.Coqlib <> two_p_monotone thm
R120605:120614 AV.Integers Make size_range thm
R120617:120619 AV.Integers Make xor def
R120605:120614 AV.Integers Make size_range thm
R120617:120619 AV.Integers Make xor def
R120643:120650 AV.Integers Make size_xor thm
R120643:120650 AV.Integers Make size_xor thm
R120672:120675 AV.Integers Make <> mod
mod 120750:120760 <> Wordsize_32
def 120776:120783 Wordsize_32 wordsize
prf 120805:120821 Wordsize_32 wordsize_not_zero
R120832:120835 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R120824:120831 AV.Integers Wordsize_32 wordsize def
R120859:120866 AV.Integers Wordsize_32 wordsize def
R120890:120900 AV.Integers Wordsize_32 <> mod
R120921:120940 AV.Integers <> wordsize def
R120959:120962 AV.Integers Make <> modtype
R120964:120974 AV.Integers Wordsize_32 <> modtype
mod 120952:120954 <> Int
R120991:121010 AV.Integers <> wordsize def
syndef 121024:121026 <> int
R121031:121037 AV.Integers <> int rec
prf 121048:121075 <> int_wordsize_divides_modulus
R121080:121087 Coq.ZArith.BinInt Z divide def
R121113:121123 AV.Integers <> modulus def
R121090:121097 Coq.ZArith.BinInt Z of_nat def
R121099:121110 AV.Integers <> wordsize def
R121143:121147 Coq.ZArith.Zpower <> two_p def
R121152:121152 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R121143:121147 Coq.ZArith.Zpower <> two_p def
R121152:121152 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
mod 121184:121193 <> Wordsize_8
def 121209:121216 Wordsize_8 wordsize
prf 121237:121253 Wordsize_8 wordsize_not_zero
R121264:121267 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R121256:121263 AV.Integers Wordsize_8 wordsize def
R121291:121298 AV.Integers Wordsize_8 wordsize def
R121322:121331 AV.Integers Wordsize_8 <> mod
R121352:121370 AV.Integers <> wordsize def
R121390:121393 AV.Integers Make <> modtype
R121395:121404 AV.Integers Wordsize_8 <> modtype
mod 121382:121385 <> Byte
R121421:121439 AV.Integers <> wordsize def
syndef 121453:121456 <> byte
R121461:121468 AV.Integers <> int rec
mod 121479:121489 <> Wordsize_64
def 121505:121512 Wordsize_64 wordsize
prf 121534:121550 Wordsize_64 wordsize_not_zero
R121561:121564 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R121553:121560 AV.Integers Wordsize_64 wordsize def
R121588:121595 AV.Integers Wordsize_64 wordsize def
R121619:121629 AV.Integers Wordsize_64 <> mod
R121650:121669 AV.Integers <> wordsize def
mod 121681:121685 <> Int64
R121697:121700 AV.Integers Make <> modtype
R121702:121712 AV.Integers Wordsize_64 <> modtype
def 121781:121790 Int64 iwordsize'
R121793:121799 AV.Integers Int int rec
R121804:121811 AV.Integers Int repr def
R121813:121821 AV.Integers Int64 zwordsize def
def 121836:121839 Int64 shl'
R121845:121847 AV.Integers Int64 int rec
R121854:121860 AV.Integers Int int rec
R121864:121866 AV.Integers Int64 int rec
R121873:121876 AV.Integers Int64 repr def
R121879:121886 Coq.ZArith.BinInt Z shiftl def
R121902:121913 AV.Integers Int unsigned def
R121915:121915 AV.Integers <> y var
R121889:121896 AV.Integers Int64 unsigned def
R121898:121898 AV.Integers <> x var
def 121931:121935 Int64 shru'
R121941:121943 AV.Integers Int64 int rec
R121950:121956 AV.Integers Int int rec
R121960:121962 AV.Integers Int64 int rec
R121969:121972 AV.Integers Int64 repr def
R121975:121982 Coq.ZArith.BinInt Z shiftr def
R121998:122009 AV.Integers Int unsigned def
R122011:122011 AV.Integers <> y var
R121985:121992 AV.Integers Int64 unsigned def
R121994:121994 AV.Integers <> x var
def 122027:122030 Int64 shr'
R122036:122038 AV.Integers Int64 int rec
R122045:122051 AV.Integers Int int rec
R122055:122057 AV.Integers Int64 int rec
R122064:122067 AV.Integers Int64 repr def
R122070:122077 Coq.ZArith.BinInt Z shiftr def
R122091:122102 AV.Integers Int unsigned def
R122104:122104 AV.Integers <> y var
R122080:122085 AV.Integers Int64 signed def
R122087:122087 AV.Integers <> x var
def 122120:122123 Int64 rol'
R122129:122131 AV.Integers Int64 int rec
R122138:122144 AV.Integers Int int rec
R122148:122150 AV.Integers Int64 int rec
R122157:122159 AV.Integers Int64 rol def
R122164:122167 AV.Integers Int64 repr def
R122170:122181 AV.Integers Int unsigned def
R122183:122183 AV.Integers <> y var
R122161:122161 AV.Integers <> x var
def 122199:122203 Int64 shrx'
R122209:122211 AV.Integers Int64 int rec
R122218:122224 AV.Integers Int int rec
R122228:122230 AV.Integers Int64 int rec
R122237:122240 AV.Integers Int64 divs def
R122245:122248 AV.Integers Int64 shl' def
R122254:122254 AV.Integers <> y var
R122250:122252 AV.Integers Int64 one def
R122242:122242 AV.Integers <> x var
def 122269:122278 Int64 shr_carry'
R122284:122286 AV.Integers Int64 int rec
R122293:122299 AV.Integers Int int rec
R122303:122305 AV.Integers Int64 int rec
R122324:122327 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R122315:122316 AV.Integers Int64 lt def
R122320:122323 AV.Integers Int64 zero def
R122318:122318 AV.Integers <> x var
R122328:122331 Coq.Init.Datatypes <> negb def
R122334:122335 AV.Integers Int64 eq def
R122368:122371 AV.Integers Int64 zero def
R122338:122340 AV.Integers Int64 and def
R122345:122347 AV.Integers Int64 sub def
R122362:122364 AV.Integers Int64 one def
R122350:122353 AV.Integers Int64 shl' def
R122359:122359 AV.Integers <> y var
R122355:122357 AV.Integers Int64 one def
R122342:122342 AV.Integers <> x var
R122390:122393 AV.Integers Int64 zero def
R122381:122383 AV.Integers Int64 one def
prf 122403:122411 Int64 bits_shl'
R122450:122455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R122476:122480 Coq.Init.Logic <> :type_scope:x_'='_x not
R122456:122462 AV.Integers Int64 testbit def
R122475:122475 AV.Integers <> i var
R122465:122468 AV.Integers Int64 shl' def
R122472:122472 AV.Integers <> y var
R122470:122470 AV.Integers <> x var
R122484:122486 AV.Coqlib <> zlt def
R122491:122502 AV.Integers Int unsigned def
R122504:122504 AV.Integers <> y var
R122488:122488 AV.Integers <> i var
R122523:122529 AV.Integers Int64 testbit def
R122535:122537 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R122534:122534 AV.Integers <> i var
R122538:122549 AV.Integers Int unsigned def
R122551:122551 AV.Integers <> y var
R122531:122531 AV.Integers <> x var
R122512:122516 Coq.Init.Datatypes <> false constr
R122433:122436 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122438:122440 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122437:122437 AV.Integers <> i var
R122437:122437 AV.Integers <> i var
R122441:122449 AV.Integers Int64 zwordsize def
R122579:122582 AV.Integers Int64 shl' def
R122593:122604 AV.Integers Int64 testbit_repr thm
R122593:122604 AV.Integers Int64 testbit_repr thm
R122593:122604 AV.Integers Int64 testbit_repr thm
R122593:122604 AV.Integers Int64 testbit_repr thm
R122625:122627 AV.Coqlib <> zlt def
R122632:122643 AV.Integers Int unsigned def
R122625:122627 AV.Coqlib <> zlt def
R122632:122643 AV.Integers Int unsigned def
R122658:122674 Coq.ZArith.BinInt Z shiftl_spec_low thm
R122658:122674 Coq.ZArith.BinInt Z shiftl_spec_low thm
R122691:122708 Coq.ZArith.BinInt Z shiftl_spec_high thm
R122691:122708 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 122737:122746 Int64 bits_shru'
R122785:122790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R122812:122816 Coq.Init.Logic <> :type_scope:x_'='_x not
R122791:122797 AV.Integers Int64 testbit def
R122811:122811 AV.Integers <> i var
R122800:122804 AV.Integers Int64 shru' def
R122808:122808 AV.Integers <> y var
R122806:122806 AV.Integers <> x var
R122820:122822 AV.Coqlib <> zlt def
R122845:122853 AV.Integers Int64 zwordsize def
R122826:122828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R122825:122825 AV.Integers <> i var
R122829:122840 AV.Integers Int unsigned def
R122842:122842 AV.Integers <> y var
R122896:122900 Coq.Init.Datatypes <> false constr
R122860:122866 AV.Integers Int64 testbit def
R122872:122874 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R122871:122871 AV.Integers <> i var
R122875:122886 AV.Integers Int unsigned def
R122888:122888 AV.Integers <> y var
R122868:122868 AV.Integers <> x var
R122768:122771 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122773:122775 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122772:122772 AV.Integers <> i var
R122772:122772 AV.Integers <> i var
R122776:122784 AV.Integers Int64 zwordsize def
R122927:122931 AV.Integers Int64 shru' def
R122942:122953 AV.Integers Int64 testbit_repr thm
R122942:122953 AV.Integers Int64 testbit_repr thm
R122942:122953 AV.Integers Int64 testbit_repr thm
R122942:122953 AV.Integers Int64 testbit_repr thm
R122972:122984 Coq.ZArith.BinInt Z shiftr_spec thm
R122972:122984 Coq.ZArith.BinInt Z shiftr_spec thm
R122972:122984 Coq.ZArith.BinInt Z shiftr_spec thm
R122972:122984 Coq.ZArith.BinInt Z shiftr_spec thm
R122993:122999 AV.Integers Int64 testbit def
R123005:123007 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123008:123019 AV.Integers Int unsigned def
R122993:122999 AV.Integers Int64 testbit def
R123005:123007 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123008:123019 AV.Integers Int unsigned def
R123038:123040 AV.Coqlib <> zlt def
R123063:123071 AV.Integers Int64 zwordsize def
R123044:123046 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123047:123058 AV.Integers Int unsigned def
R123038:123040 AV.Coqlib <> zlt def
R123063:123071 AV.Integers Int64 zwordsize def
R123044:123046 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123047:123058 AV.Integers Int unsigned def
R123091:123100 AV.Integers Int64 bits_above thm
R123091:123100 AV.Integers Int64 bits_above thm
prf 123130:123138 Int64 bits_shr'
R123177:123182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R123203:123207 Coq.Init.Logic <> :type_scope:x_'='_x not
R123183:123189 AV.Integers Int64 testbit def
R123202:123202 AV.Integers <> i var
R123192:123195 AV.Integers Int64 shr' def
R123199:123199 AV.Integers <> y var
R123197:123197 AV.Integers <> x var
R123208:123214 AV.Integers Int64 testbit def
R123222:123224 AV.Coqlib <> zlt def
R123247:123255 AV.Integers Int64 zwordsize def
R123228:123230 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123227:123227 AV.Integers <> i var
R123231:123242 AV.Integers Int unsigned def
R123244:123244 AV.Integers <> y var
R123295:123297 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123286:123294 AV.Integers Int64 zwordsize def
R123263:123265 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R123262:123262 AV.Integers <> i var
R123266:123277 AV.Integers Int unsigned def
R123279:123279 AV.Integers <> y var
R123216:123216 AV.Integers <> x var
R123160:123163 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123165:123167 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123164:123164 AV.Integers <> i var
R123164:123164 AV.Integers <> i var
R123168:123176 AV.Integers Int64 zwordsize def
R123326:123329 AV.Integers Int64 shr' def
R123340:123351 AV.Integers Int64 testbit_repr thm
R123340:123351 AV.Integers Int64 testbit_repr thm
R123340:123351 AV.Integers Int64 testbit_repr thm
R123340:123351 AV.Integers Int64 testbit_repr thm
R123370:123382 Coq.ZArith.BinInt Z shiftr_spec thm
R123370:123382 Coq.ZArith.BinInt Z shiftr_spec thm
R123370:123382 Coq.ZArith.BinInt Z shiftr_spec thm
R123370:123382 Coq.ZArith.BinInt Z shiftr_spec thm
R123391:123401 AV.Integers Int64 bits_signed thm
R123391:123401 AV.Integers Int64 bits_signed thm
R123418:123435 AV.Integers Int unsigned_range thm
R123418:123435 AV.Integers Int unsigned_range thm
prf 123469:123482 Int64 shl'_mul_two_p
R123509:123511 Coq.Init.Logic <> :type_scope:x_'='_x not
R123501:123504 AV.Integers Int64 shl' def
R123508:123508 AV.Integers <> y var
R123506:123506 AV.Integers <> x var
R123512:123514 AV.Integers Int64 mul def
R123519:123522 AV.Integers Int64 repr def
R123525:123529 Coq.ZArith.Zpower <> two_p def
R123532:123543 AV.Integers Int unsigned def
R123545:123545 AV.Integers <> y var
R123516:123516 AV.Integers <> x var
R123575:123578 AV.Integers Int64 shl' def
R123581:123583 AV.Integers Int64 mul def
R123592:123603 AV.Integers Int64 eqm_samerepr thm
R123592:123603 AV.Integers Int64 eqm_samerepr thm
R123616:123632 AV.Integers Int64 Zshiftl_mul_two_p thm
R123616:123632 AV.Integers Int64 Zshiftl_mul_two_p thm
R123616:123632 AV.Integers Int64 Zshiftl_mul_two_p thm
R123616:123632 AV.Integers Int64 Zshiftl_mul_two_p thm
R123641:123648 AV.Integers Int64 eqm_mult thm
R123641:123648 AV.Integers Int64 eqm_mult thm
R123657:123664 AV.Integers Int64 eqm_refl thm
R123657:123664 AV.Integers Int64 eqm_refl thm
R123673:123689 AV.Integers Int64 eqm_unsigned_repr thm
R123673:123689 AV.Integers Int64 eqm_unsigned_repr thm
R123706:123723 AV.Integers Int unsigned_range thm
R123706:123723 AV.Integers Int unsigned_range thm
prf 123748:123761 Int64 shl'_one_two_p
R123786:123788 Coq.Init.Logic <> :type_scope:x_'='_x not
R123776:123779 AV.Integers Int64 shl' def
R123785:123785 AV.Integers <> y var
R123781:123783 AV.Integers Int64 one def
R123789:123792 AV.Integers Int64 repr def
R123795:123799 Coq.ZArith.Zpower <> two_p def
R123802:123813 AV.Integers Int unsigned def
R123815:123815 AV.Integers <> y var
R123845:123858 AV.Integers Int64 shl'_mul_two_p thm
R123845:123858 AV.Integers Int64 shl'_mul_two_p thm
R123845:123858 AV.Integers Int64 shl'_mul_two_p thm
R123869:123878 AV.Integers Int64 mul_commut thm
R123869:123878 AV.Integers Int64 mul_commut thm
R123869:123878 AV.Integers Int64 mul_commut thm
R123889:123895 AV.Integers Int64 mul_one thm
R123889:123895 AV.Integers Int64 mul_one thm
R123889:123895 AV.Integers Int64 mul_one thm
prf 123918:123925 Int64 shl'_mul
R123952:123954 Coq.Init.Logic <> :type_scope:x_'='_x not
R123944:123947 AV.Integers Int64 shl' def
R123951:123951 AV.Integers <> y var
R123949:123949 AV.Integers <> x var
R123955:123957 AV.Integers Int64 mul def
R123962:123965 AV.Integers Int64 shl' def
R123971:123971 AV.Integers <> y var
R123967:123969 AV.Integers Int64 one def
R123959:123959 AV.Integers <> x var
R124000:124013 AV.Integers Int64 shl'_one_two_p thm
R124000:124013 AV.Integers Int64 shl'_one_two_p thm
R124000:124013 AV.Integers Int64 shl'_one_two_p thm
R124022:124035 AV.Integers Int64 shl'_mul_two_p thm
R124022:124035 AV.Integers Int64 shl'_mul_two_p thm
prf 124052:124060 Int64 shl'_zero
R124090:124092 Coq.Init.Logic <> :type_scope:x_'='_x not
R124075:124078 AV.Integers Int64 shl' def
R124082:124089 AV.Integers Int zero def
R124080:124080 AV.Integers <> x var
R124093:124093 AV.Integers <> x var
R124120:124123 AV.Integers Int64 shl' def
R124134:124150 AV.Integers Int unsigned_zero thm
R124134:124150 AV.Integers Int unsigned_zero thm
R124134:124150 AV.Integers Int unsigned_zero thm
R124160:124167 Coq.ZArith.BinInt Z shiftl def
R124178:124190 AV.Integers Int64 repr_unsigned thm
R124178:124190 AV.Integers Int64 repr_unsigned thm
prf 124207:124216 Int64 shru'_zero
R124248:124250 Coq.Init.Logic <> :type_scope:x_'='_x not
R124232:124236 AV.Integers Int64 shru' def
R124240:124247 AV.Integers Int zero def
R124238:124238 AV.Integers <> x var
R124251:124251 AV.Integers <> x var
R124278:124282 AV.Integers Int64 shru' def
R124293:124309 AV.Integers Int unsigned_zero thm
R124293:124309 AV.Integers Int unsigned_zero thm
R124293:124309 AV.Integers Int unsigned_zero thm
R124319:124326 Coq.ZArith.BinInt Z shiftr def
R124337:124349 AV.Integers Int64 repr_unsigned thm
R124337:124349 AV.Integers Int64 repr_unsigned thm
prf 124366:124374 Int64 shr'_zero
R124405:124407 Coq.Init.Logic <> :type_scope:x_'='_x not
R124390:124393 AV.Integers Int64 shr' def
R124397:124404 AV.Integers Int zero def
R124395:124395 AV.Integers <> x var
R124408:124408 AV.Integers <> x var
R124435:124438 AV.Integers Int64 shr' def
R124449:124465 AV.Integers Int unsigned_zero thm
R124449:124465 AV.Integers Int unsigned_zero thm
R124449:124465 AV.Integers Int unsigned_zero thm
R124475:124482 Coq.ZArith.BinInt Z shiftr def
R124493:124503 AV.Integers Int64 repr_signed thm
R124493:124503 AV.Integers Int64 repr_signed thm
prf 124520:124529 Int64 shrx'_zero
R124560:124562 Coq.Init.Logic <> :type_scope:x_'='_x not
R124544:124548 AV.Integers Int64 shrx' def
R124552:124559 AV.Integers Int zero def
R124550:124550 AV.Integers <> x var
R124563:124563 AV.Integers <> x var
R124615:124618 AV.Integers Int64 shrx def
R124622:124625 AV.Integers Int64 zero def
R124591:124595 AV.Integers Int64 shrx' def
R124599:124606 AV.Integers Int zero def
R124591:124595 AV.Integers Int64 shrx' def
R124599:124606 AV.Integers Int zero def
R124615:124618 AV.Integers Int64 shrx def
R124622:124625 AV.Integers Int64 zero def
R124635:124643 AV.Integers Int64 shrx_zero thm
R124635:124643 AV.Integers Int64 shrx_zero thm
prf 124675:124685 Int64 shrx'_carry
R124734:124739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124749:124751 Coq.Init.Logic <> :type_scope:x_'='_x not
R124740:124744 AV.Integers Int64 shrx' def
R124748:124748 AV.Integers <> y var
R124746:124746 AV.Integers <> x var
R124752:124754 AV.Integers Int64 add def
R124768:124777 AV.Integers Int64 shr_carry' def
R124781:124781 AV.Integers <> y var
R124779:124779 AV.Integers <> x var
R124757:124760 AV.Integers Int64 shr' def
R124764:124764 AV.Integers <> y var
R124762:124762 AV.Integers <> x var
R124727:124729 Coq.Init.Logic <> :type_scope:x_'='_x not
R124704:124710 AV.Integers Int ltu def
R124715:124722 AV.Integers Int repr def
R124712:124712 AV.Integers <> y var
R124730:124733 Coq.Init.Datatypes <> true constr
R124808:124818 AV.Integers Int ltu_inv thm
R124808:124818 AV.Integers Int ltu_inv thm
R124834:124845 AV.Integers Int unsigned def
R124848:124855 AV.Integers Int repr def
R124834:124845 AV.Integers Int unsigned def
R124848:124855 AV.Integers Int repr def
R124889:124898 AV.Integers Int64 repr def
R124901:124912 AV.Integers Int unsigned def
R124889:124898 AV.Integers Int64 repr def
R124901:124912 AV.Integers Int unsigned def
R124943:124945 Coq.Init.Logic <> :type_scope:x_'='_x not
R124932:124939 AV.Integers Int64 unsigned def
R124946:124957 AV.Integers Int unsigned def
R124943:124945 Coq.Init.Logic <> :type_scope:x_'='_x not
R124932:124939 AV.Integers Int64 unsigned def
R124946:124957 AV.Integers Int unsigned def
R124973:124985 AV.Integers Int64 unsigned_repr thm
R124973:124985 AV.Integers Int64 unsigned_repr thm
R124998:125000 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125001:125012 AV.Integers Int64 max_unsigned def
R124998:125000 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125001:125012 AV.Integers Int64 max_unsigned def
R125056:125059 AV.Integers Int64 shrx def
R125056:125059 AV.Integers Int64 shrx def
R125077:125081 AV.Integers Int64 shrx' def
R125084:125087 AV.Integers Int64 shrx def
R125090:125093 AV.Integers Int64 shl' def
R125096:125098 AV.Integers Int64 shl def
R125128:125137 AV.Integers Int64 shrx_carry thm
R125128:125137 AV.Integers Int64 shrx_carry thm
R125128:125137 AV.Integers Int64 shrx_carry thm
R125128:125137 AV.Integers Int64 shrx_carry thm
R125162:125164 AV.Integers Int64 shr def
R125167:125170 AV.Integers Int64 shr' def
R125199:125207 AV.Integers Int64 shr_carry def
R125210:125219 AV.Integers Int64 shr_carry' def
R125222:125224 AV.Integers Int64 shl def
R125227:125230 AV.Integers Int64 shl' def
R125259:125261 AV.Integers Int64 ltu def
R125270:125277 AV.Coqlib <> zlt_true thm
R125270:125277 AV.Coqlib <> zlt_true thm
prf 125313:125323 Int64 shrx'_shr_2
R125372:125377 Coq.Init.Logic <> :type_scope:x_'->'_x not
R125387:125389 Coq.Init.Logic <> :type_scope:x_'='_x not
R125378:125382 AV.Integers Int64 shrx' def
R125386:125386 AV.Integers <> y var
R125384:125384 AV.Integers <> x var
R125390:125393 AV.Integers Int64 shr' def
R125460:125460 AV.Integers <> y var
R125396:125398 AV.Integers Int64 add def
R125403:125407 AV.Integers Int64 shru' def
R125433:125439 AV.Integers Int sub def
R125455:125455 AV.Integers <> y var
R125442:125449 AV.Integers Int repr def
R125410:125413 AV.Integers Int64 shr' def
R125418:125425 AV.Integers Int repr def
R125415:125415 AV.Integers <> x var
R125400:125400 AV.Integers <> x var
R125365:125367 Coq.Init.Logic <> :type_scope:x_'='_x not
R125342:125348 AV.Integers Int ltu def
R125353:125360 AV.Integers Int repr def
R125350:125350 AV.Integers <> y var
R125368:125371 Coq.Init.Datatypes <> true constr
R125492:125495 AV.Integers Int64 repr def
R125498:125509 AV.Integers Int unsigned def
R125492:125495 AV.Integers Int64 repr def
R125498:125509 AV.Integers Int unsigned def
R125524:125534 AV.Integers Int ltu_inv thm
R125524:125534 AV.Integers Int ltu_inv thm
R125550:125561 AV.Integers Int unsigned def
R125564:125571 AV.Integers Int repr def
R125550:125561 AV.Integers Int unsigned def
R125564:125571 AV.Integers Int repr def
R125608:125610 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125611:125622 AV.Integers Int64 max_unsigned def
R125608:125610 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125611:125622 AV.Integers Int64 max_unsigned def
R125657:125659 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125660:125675 AV.Integers Int max_unsigned def
R125657:125659 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R125660:125675 AV.Integers Int max_unsigned def
R125717:125719 Coq.Init.Logic <> :type_scope:x_'='_x not
R125707:125714 AV.Integers Int64 unsigned def
R125720:125731 AV.Integers Int unsigned def
R125717:125719 Coq.Init.Logic <> :type_scope:x_'='_x not
R125707:125714 AV.Integers Int64 unsigned def
R125720:125731 AV.Integers Int unsigned def
R125757:125769 AV.Integers Int64 unsigned_repr thm
R125757:125769 AV.Integers Int64 unsigned_repr thm
R125820:125822 Coq.Init.Logic <> :type_scope:x_'='_x not
R125794:125801 AV.Integers Int64 unsigned def
R125804:125806 AV.Integers Int64 sub def
R125809:125812 AV.Integers Int64 repr def
R125823:125834 AV.Integers Int unsigned def
R125837:125843 AV.Integers Int sub def
R125846:125853 AV.Integers Int repr def
R125820:125822 Coq.Init.Logic <> :type_scope:x_'='_x not
R125794:125801 AV.Integers Int64 unsigned def
R125804:125806 AV.Integers Int64 sub def
R125809:125812 AV.Integers Int64 repr def
R125823:125834 AV.Integers Int unsigned def
R125837:125843 AV.Integers Int sub def
R125846:125853 AV.Integers Int repr def
R125885:125887 AV.Integers Int64 sub def
R125890:125896 AV.Integers Int sub def
R125911:125918 AV.Integers Int64 unsigned def
R125921:125924 AV.Integers Int64 repr def
R125911:125918 AV.Integers Int64 unsigned def
R125921:125924 AV.Integers Int64 repr def
R125952:125963 AV.Integers Int unsigned def
R125966:125973 AV.Integers Int repr def
R125952:125963 AV.Integers Int unsigned def
R125966:125973 AV.Integers Int repr def
R126002:126014 AV.Integers Int64 unsigned_repr thm
R126017:126028 AV.Integers Int unsigned def
R126002:126014 AV.Integers Int64 unsigned_repr thm
R126017:126028 AV.Integers Int unsigned def
R126002:126014 AV.Integers Int64 unsigned_repr thm
R126017:126028 AV.Integers Int unsigned def
R126056:126068 AV.Integers Int64 unsigned_repr thm
R126071:126087 AV.Integers Int unsigned_repr thm
R126056:126068 AV.Integers Int64 unsigned_repr thm
R126056:126068 AV.Integers Int64 unsigned_repr thm
R126071:126087 AV.Integers Int unsigned_repr thm
R126071:126087 AV.Integers Int unsigned_repr thm
R126120:126124 AV.Integers Int64 shrx' def
R126127:126130 AV.Integers Int64 shr' def
R126133:126137 AV.Integers Int64 shru' def
R126140:126143 AV.Integers Int64 shl' def
R126206:126213 AV.Integers Int64 unsigned def
R126216:126219 AV.Integers Int64 repr def
R126172:126183 AV.Integers Int unsigned def
R126186:126193 AV.Integers Int repr def
R126172:126183 AV.Integers Int unsigned def
R126186:126193 AV.Integers Int repr def
R126206:126213 AV.Integers Int64 unsigned def
R126216:126219 AV.Integers Int64 repr def
R126251:126260 AV.Integers Int64 shrx_shr_2 thm
R126251:126260 AV.Integers Int64 shrx_shr_2 thm
R126272:126274 AV.Integers Int64 ltu def
R126283:126290 AV.Coqlib <> zlt_true thm
R126283:126290 AV.Coqlib <> zlt_true thm
R126311:126313 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126301:126308 AV.Integers Int64 unsigned def
R126311:126313 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126301:126308 AV.Integers Int64 unsigned def
prf 126350:126362 Int64 int_ltu_2_inv
R126408:126413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126441:126446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126500:126505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126516:126519 AV.Integers Int64 repr def
R126522:126533 AV.Integers Int unsigned def
R126535:126535 AV.Integers <> y var
R126553:126556 AV.Integers Int64 repr def
R126559:126570 AV.Integers Int unsigned def
R126572:126572 AV.Integers <> z var
R126611:126616 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R126597:126599 Coq.Init.Logic <> :type_scope:x_'='_x not
R126583:126594 AV.Integers Int unsigned def
R126596:126596 AV.Integers <> y var
R126600:126607 AV.Integers Int64 unsigned def
R126609:126610 AV.Integers <> y' var
R126645:126650 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R126631:126633 Coq.Init.Logic <> :type_scope:x_'='_x not
R126617:126628 AV.Integers Int unsigned def
R126630:126630 AV.Integers <> z var
R126634:126641 AV.Integers Int64 unsigned def
R126643:126644 AV.Integers <> z' var
R126674:126679 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R126667:126669 Coq.Init.Logic <> :type_scope:x_'='_x not
R126651:126653 AV.Integers Int64 ltu def
R126658:126666 AV.Integers Int64 iwordsize def
R126655:126656 AV.Integers <> y' var
R126670:126673 Coq.Init.Datatypes <> true constr
R126703:126708 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R126696:126698 Coq.Init.Logic <> :type_scope:x_'='_x not
R126680:126682 AV.Integers Int64 ltu def
R126687:126695 AV.Integers Int64 iwordsize def
R126684:126685 AV.Integers <> z' var
R126699:126702 Coq.Init.Datatypes <> true constr
R126758:126763 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R126735:126737 Coq.Init.Logic <> :type_scope:x_'='_x not
R126709:126720 AV.Integers Int unsigned def
R126723:126729 AV.Integers Int add def
R126733:126733 AV.Integers <> z var
R126731:126731 AV.Integers <> y var
R126738:126745 AV.Integers Int64 unsigned def
R126748:126750 AV.Integers Int64 add def
R126755:126756 AV.Integers <> z' var
R126752:126753 AV.Integers <> y' var
R126773:126775 Coq.Init.Logic <> :type_scope:x_'='_x not
R126764:126766 AV.Integers Int64 add def
R126771:126772 AV.Integers <> z' var
R126768:126769 AV.Integers <> y' var
R126776:126779 AV.Integers Int64 repr def
R126782:126793 AV.Integers Int unsigned def
R126796:126802 AV.Integers Int add def
R126806:126806 AV.Integers <> z var
R126804:126804 AV.Integers <> y var
R126473:126476 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R126447:126458 AV.Integers Int unsigned def
R126461:126467 AV.Integers Int add def
R126471:126471 AV.Integers <> z var
R126469:126469 AV.Integers <> y var
R126477:126488 AV.Integers Int unsigned def
R126490:126499 AV.Integers Int64 iwordsize' def
R126434:126436 Coq.Init.Logic <> :type_scope:x_'='_x not
R126414:126420 AV.Integers Int ltu def
R126424:126433 AV.Integers Int64 iwordsize' def
R126422:126422 AV.Integers <> z var
R126437:126440 Coq.Init.Datatypes <> true constr
R126401:126403 Coq.Init.Logic <> :type_scope:x_'='_x not
R126381:126387 AV.Integers Int ltu def
R126391:126400 AV.Integers Int64 iwordsize' def
R126389:126389 AV.Integers <> y var
R126404:126407 Coq.Init.Datatypes <> true constr
R126834:126844 AV.Integers Int ltu_inv thm
R126834:126844 AV.Integers Int ltu_inv thm
R126858:126868 AV.Integers Int ltu_inv thm
R126858:126868 AV.Integers Int ltu_inv thm
R126887:126898 AV.Integers Int unsigned def
R126900:126909 AV.Integers Int64 iwordsize' def
R126887:126898 AV.Integers Int unsigned def
R126900:126909 AV.Integers Int64 iwordsize' def
R126939:126941 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126942:126953 AV.Integers Int64 max_unsigned def
R126939:126941 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126942:126953 AV.Integers Int64 max_unsigned def
R126985:126987 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126988:127003 AV.Integers Int max_unsigned def
R126985:126987 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R126988:127003 AV.Integers Int max_unsigned def
R127046:127048 Coq.Init.Logic <> :type_scope:x_'='_x not
R127035:127042 AV.Integers Int64 unsigned def
R127049:127060 AV.Integers Int unsigned def
R127075:127087 AV.Integers Int64 unsigned_repr thm
R127046:127048 Coq.Init.Logic <> :type_scope:x_'='_x not
R127035:127042 AV.Integers Int64 unsigned def
R127049:127060 AV.Integers Int unsigned def
R127075:127087 AV.Integers Int64 unsigned_repr thm
R127122:127124 Coq.Init.Logic <> :type_scope:x_'='_x not
R127111:127118 AV.Integers Int64 unsigned def
R127125:127136 AV.Integers Int unsigned def
R127151:127163 AV.Integers Int64 unsigned_repr thm
R127122:127124 Coq.Init.Logic <> :type_scope:x_'='_x not
R127111:127118 AV.Integers Int64 unsigned def
R127125:127136 AV.Integers Int unsigned def
R127151:127163 AV.Integers Int64 unsigned_repr thm
R127213:127215 Coq.Init.Logic <> :type_scope:x_'='_x not
R127187:127198 AV.Integers Int unsigned def
R127201:127207 AV.Integers Int add def
R127216:127223 AV.Integers Int64 unsigned def
R127226:127228 AV.Integers Int64 add def
R127213:127215 Coq.Init.Logic <> :type_scope:x_'='_x not
R127187:127198 AV.Integers Int unsigned def
R127201:127207 AV.Integers Int add def
R127216:127223 AV.Integers Int64 unsigned def
R127226:127228 AV.Integers Int64 add def
R127250:127256 AV.Integers Int add def
R127267:127283 AV.Integers Int unsigned_repr thm
R127267:127283 AV.Integers Int unsigned_repr thm
R127267:127283 AV.Integers Int unsigned_repr thm
R127306:127308 AV.Integers Int64 add def
R127319:127331 AV.Integers Int64 unsigned_repr thm
R127319:127331 AV.Integers Int64 unsigned_repr thm
R127319:127331 AV.Integers Int64 unsigned_repr thm
R127383:127390 AV.Coqlib <> zlt_true thm
R127383:127390 AV.Coqlib <> zlt_true thm
R127418:127425 AV.Coqlib <> zlt_true thm
R127418:127425 AV.Coqlib <> zlt_true thm
R127466:127478 AV.Integers Int64 repr_unsigned thm
R127466:127478 AV.Integers Int64 repr_unsigned thm
R127466:127478 AV.Integers Int64 repr_unsigned thm
prf 127501:127507 Int64 or_ror'
R127555:127560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127588:127593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127618:127623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127653:127655 Coq.Init.Logic <> :type_scope:x_'='_x not
R127624:127626 AV.Integers Int64 ror def
R127631:127634 AV.Integers Int64 repr def
R127637:127648 AV.Integers Int unsigned def
R127650:127650 AV.Integers <> z var
R127628:127628 AV.Integers <> x var
R127656:127657 AV.Integers Int64 or def
R127671:127675 AV.Integers Int64 shru' def
R127679:127679 AV.Integers <> z var
R127677:127677 AV.Integers <> x var
R127660:127663 AV.Integers Int64 shl' def
R127667:127667 AV.Integers <> y var
R127665:127665 AV.Integers <> x var
R127605:127607 Coq.Init.Logic <> :type_scope:x_'='_x not
R127594:127600 AV.Integers Int add def
R127604:127604 AV.Integers <> z var
R127602:127602 AV.Integers <> y var
R127608:127617 AV.Integers Int64 iwordsize' def
R127581:127583 Coq.Init.Logic <> :type_scope:x_'='_x not
R127561:127567 AV.Integers Int ltu def
R127571:127580 AV.Integers Int64 iwordsize' def
R127569:127569 AV.Integers <> z var
R127584:127587 Coq.Init.Datatypes <> true constr
R127548:127550 Coq.Init.Logic <> :type_scope:x_'='_x not
R127528:127534 AV.Integers Int ltu def
R127538:127547 AV.Integers Int64 iwordsize' def
R127536:127536 AV.Integers <> y var
R127551:127554 Coq.Init.Datatypes <> true constr
R127710:127722 AV.Integers Int64 int_ltu_2_inv thm
R127710:127722 AV.Integers Int64 int_ltu_2_inv thm
R127793:127796 AV.Integers Int64 shl' def
R127809:127811 AV.Integers Int64 shl def
R127816:127819 AV.Integers Int64 repr def
R127822:127833 AV.Integers Int unsigned def
R127793:127796 AV.Integers Int64 shl' def
R127809:127811 AV.Integers Int64 shl def
R127816:127819 AV.Integers Int64 repr def
R127822:127833 AV.Integers Int unsigned def
R127852:127856 AV.Integers Int64 shru' def
R127869:127872 AV.Integers Int64 shru def
R127877:127880 AV.Integers Int64 repr def
R127883:127894 AV.Integers Int unsigned def
R127852:127856 AV.Integers Int64 shru' def
R127869:127872 AV.Integers Int64 shru def
R127877:127880 AV.Integers Int64 repr def
R127883:127894 AV.Integers Int unsigned def
R127910:127915 AV.Integers Int64 or_ror thm
R127910:127915 AV.Integers Int64 or_ror thm
R127961:127964 AV.Integers Int64 shru def
R127967:127971 AV.Integers Int64 shru' def
R128003:128005 AV.Integers Int64 shl def
R128008:128011 AV.Integers Int64 shl' def
prf 128048:128056 Int64 shl'_shl'
R128104:128109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128137:128142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128182:128187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128205:128207 Coq.Init.Logic <> :type_scope:x_'='_x not
R128188:128191 AV.Integers Int64 shl' def
R128204:128204 AV.Integers <> z var
R128194:128197 AV.Integers Int64 shl' def
R128201:128201 AV.Integers <> y var
R128199:128199 AV.Integers <> x var
R128208:128211 AV.Integers Int64 shl' def
R128216:128222 AV.Integers Int add def
R128226:128226 AV.Integers <> z var
R128224:128224 AV.Integers <> y var
R128213:128213 AV.Integers <> x var
R128175:128177 Coq.Init.Logic <> :type_scope:x_'='_x not
R128143:128149 AV.Integers Int ltu def
R128165:128174 AV.Integers Int64 iwordsize' def
R128152:128158 AV.Integers Int add def
R128162:128162 AV.Integers <> z var
R128160:128160 AV.Integers <> y var
R128178:128181 Coq.Init.Datatypes <> true constr
R128130:128132 Coq.Init.Logic <> :type_scope:x_'='_x not
R128110:128116 AV.Integers Int ltu def
R128120:128129 AV.Integers Int64 iwordsize' def
R128118:128118 AV.Integers <> z var
R128133:128136 Coq.Init.Datatypes <> true constr
R128097:128099 Coq.Init.Logic <> :type_scope:x_'='_x not
R128077:128083 AV.Integers Int ltu def
R128087:128096 AV.Integers Int64 iwordsize' def
R128085:128085 AV.Integers <> y var
R128100:128103 Coq.Init.Datatypes <> true constr
R128253:128263 AV.Integers Int ltu_inv thm
R128253:128263 AV.Integers Int ltu_inv thm
R128284:128296 AV.Integers Int64 int_ltu_2_inv thm
R128284:128296 AV.Integers Int64 int_ltu_2_inv thm
R128357:128360 AV.Integers Int64 repr def
R128363:128374 AV.Integers Int unsigned def
R128357:128360 AV.Integers Int64 repr def
R128363:128374 AV.Integers Int unsigned def
R128399:128402 AV.Integers Int64 repr def
R128405:128416 AV.Integers Int unsigned def
R128399:128402 AV.Integers Int64 repr def
R128405:128416 AV.Integers Int unsigned def
R128439:128442 AV.Integers Int64 shl' def
R128455:128457 AV.Integers Int64 shl def
R128439:128442 AV.Integers Int64 shl' def
R128455:128457 AV.Integers Int64 shl def
R128477:128480 AV.Integers Int64 shl' def
R128483:128485 AV.Integers Int64 shl def
R128502:128504 AV.Integers Int64 shl def
R128507:128509 AV.Integers Int64 shl def
R128477:128480 AV.Integers Int64 shl' def
R128483:128485 AV.Integers Int64 shl def
R128502:128504 AV.Integers Int64 shl def
R128507:128509 AV.Integers Int64 shl def
R128533:128536 AV.Integers Int64 shl' def
R128541:128547 AV.Integers Int add def
R128561:128563 AV.Integers Int64 shl def
R128568:128570 AV.Integers Int64 add def
R128533:128536 AV.Integers Int64 shl' def
R128541:128547 AV.Integers Int add def
R128561:128563 AV.Integers Int64 shl def
R128568:128570 AV.Integers Int64 add def
R128589:128595 AV.Integers Int64 shl_shl thm
R128589:128595 AV.Integers Int64 shl_shl thm
R128610:128617 AV.Coqlib <> zlt_true thm
R128610:128617 AV.Coqlib <> zlt_true thm
R128669:128677 AV.Integers Int64 zwordsize def
R128644:128651 AV.Integers Int64 unsigned def
R128653:128661 AV.Integers Int64 iwordsize def
R128644:128651 AV.Integers Int64 unsigned def
R128653:128661 AV.Integers Int64 iwordsize def
R128669:128677 AV.Integers Int64 zwordsize def
R128696:128698 AV.Integers Int64 shl def
R128701:128704 AV.Integers Int64 shl' def
R128733:128735 AV.Integers Int64 shl def
R128743:128746 AV.Integers Int64 shl' def
R128778:128780 AV.Integers Int64 shl def
R128783:128786 AV.Integers Int64 shl' def
prf 128823:128833 Int64 shru'_shru'
R128881:128886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128914:128919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128959:128964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128984:128986 Coq.Init.Logic <> :type_scope:x_'='_x not
R128965:128969 AV.Integers Int64 shru' def
R128983:128983 AV.Integers <> z var
R128972:128976 AV.Integers Int64 shru' def
R128980:128980 AV.Integers <> y var
R128978:128978 AV.Integers <> x var
R128987:128991 AV.Integers Int64 shru' def
R128996:129002 AV.Integers Int add def
R129006:129006 AV.Integers <> z var
R129004:129004 AV.Integers <> y var
R128993:128993 AV.Integers <> x var
R128952:128954 Coq.Init.Logic <> :type_scope:x_'='_x not
R128920:128926 AV.Integers Int ltu def
R128942:128951 AV.Integers Int64 iwordsize' def
R128929:128935 AV.Integers Int add def
R128939:128939 AV.Integers <> z var
R128937:128937 AV.Integers <> y var
R128955:128958 Coq.Init.Datatypes <> true constr
R128907:128909 Coq.Init.Logic <> :type_scope:x_'='_x not
R128887:128893 AV.Integers Int ltu def
R128897:128906 AV.Integers Int64 iwordsize' def
R128895:128895 AV.Integers <> z var
R128910:128913 Coq.Init.Datatypes <> true constr
R128874:128876 Coq.Init.Logic <> :type_scope:x_'='_x not
R128854:128860 AV.Integers Int ltu def
R128864:128873 AV.Integers Int64 iwordsize' def
R128862:128862 AV.Integers <> y var
R128877:128880 Coq.Init.Datatypes <> true constr
R129033:129043 AV.Integers Int ltu_inv thm
R129033:129043 AV.Integers Int ltu_inv thm
R129064:129076 AV.Integers Int64 int_ltu_2_inv thm
R129064:129076 AV.Integers Int64 int_ltu_2_inv thm
R129137:129140 AV.Integers Int64 repr def
R129143:129154 AV.Integers Int unsigned def
R129137:129140 AV.Integers Int64 repr def
R129143:129154 AV.Integers Int unsigned def
R129179:129182 AV.Integers Int64 repr def
R129185:129196 AV.Integers Int unsigned def
R129179:129182 AV.Integers Int64 repr def
R129185:129196 AV.Integers Int unsigned def
R129219:129223 AV.Integers Int64 shru' def
R129236:129239 AV.Integers Int64 shru def
R129219:129223 AV.Integers Int64 shru' def
R129236:129239 AV.Integers Int64 shru def
R129259:129263 AV.Integers Int64 shru' def
R129266:129269 AV.Integers Int64 shru def
R129286:129289 AV.Integers Int64 shru def
R129292:129295 AV.Integers Int64 shru def
R129259:129263 AV.Integers Int64 shru' def
R129266:129269 AV.Integers Int64 shru def
R129286:129289 AV.Integers Int64 shru def
R129292:129295 AV.Integers Int64 shru def
R129319:129323 AV.Integers Int64 shru' def
R129328:129334 AV.Integers Int add def
R129348:129351 AV.Integers Int64 shru def
R129356:129358 AV.Integers Int64 add def
R129319:129323 AV.Integers Int64 shru' def
R129328:129334 AV.Integers Int add def
R129348:129351 AV.Integers Int64 shru def
R129356:129358 AV.Integers Int64 add def
R129377:129385 AV.Integers Int64 shru_shru thm
R129377:129385 AV.Integers Int64 shru_shru thm
R129400:129407 AV.Coqlib <> zlt_true thm
R129400:129407 AV.Coqlib <> zlt_true thm
R129459:129467 AV.Integers Int64 zwordsize def
R129434:129441 AV.Integers Int64 unsigned def
R129443:129451 AV.Integers Int64 iwordsize def
R129434:129441 AV.Integers Int64 unsigned def
R129443:129451 AV.Integers Int64 iwordsize def
R129459:129467 AV.Integers Int64 zwordsize def
R129486:129489 AV.Integers Int64 shru def
R129492:129496 AV.Integers Int64 shru' def
R129525:129528 AV.Integers Int64 shru def
R129536:129540 AV.Integers Int64 shru' def
R129572:129575 AV.Integers Int64 shru def
R129578:129582 AV.Integers Int64 shru' def
prf 129619:129627 Int64 shr'_shr'
R129675:129680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129708:129713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129753:129758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129776:129778 Coq.Init.Logic <> :type_scope:x_'='_x not
R129759:129762 AV.Integers Int64 shr' def
R129775:129775 AV.Integers <> z var
R129765:129768 AV.Integers Int64 shr' def
R129772:129772 AV.Integers <> y var
R129770:129770 AV.Integers <> x var
R129779:129782 AV.Integers Int64 shr' def
R129787:129793 AV.Integers Int add def
R129797:129797 AV.Integers <> z var
R129795:129795 AV.Integers <> y var
R129784:129784 AV.Integers <> x var
R129746:129748 Coq.Init.Logic <> :type_scope:x_'='_x not
R129714:129720 AV.Integers Int ltu def
R129736:129745 AV.Integers Int64 iwordsize' def
R129723:129729 AV.Integers Int add def
R129733:129733 AV.Integers <> z var
R129731:129731 AV.Integers <> y var
R129749:129752 Coq.Init.Datatypes <> true constr
R129701:129703 Coq.Init.Logic <> :type_scope:x_'='_x not
R129681:129687 AV.Integers Int ltu def
R129691:129700 AV.Integers Int64 iwordsize' def
R129689:129689 AV.Integers <> z var
R129704:129707 Coq.Init.Datatypes <> true constr
R129668:129670 Coq.Init.Logic <> :type_scope:x_'='_x not
R129648:129654 AV.Integers Int ltu def
R129658:129667 AV.Integers Int64 iwordsize' def
R129656:129656 AV.Integers <> y var
R129671:129674 Coq.Init.Datatypes <> true constr
R129824:129834 AV.Integers Int ltu_inv thm
R129824:129834 AV.Integers Int ltu_inv thm
R129855:129867 AV.Integers Int64 int_ltu_2_inv thm
R129855:129867 AV.Integers Int64 int_ltu_2_inv thm
R129928:129931 AV.Integers Int64 repr def
R129934:129945 AV.Integers Int unsigned def
R129928:129931 AV.Integers Int64 repr def
R129934:129945 AV.Integers Int unsigned def
R129970:129973 AV.Integers Int64 repr def
R129976:129987 AV.Integers Int unsigned def
R129970:129973 AV.Integers Int64 repr def
R129976:129987 AV.Integers Int unsigned def
R130010:130013 AV.Integers Int64 shr' def
R130026:130028 AV.Integers Int64 shr def
R130010:130013 AV.Integers Int64 shr' def
R130026:130028 AV.Integers Int64 shr def
R130048:130051 AV.Integers Int64 shr' def
R130054:130056 AV.Integers Int64 shr def
R130073:130075 AV.Integers Int64 shr def
R130078:130080 AV.Integers Int64 shr def
R130048:130051 AV.Integers Int64 shr' def
R130054:130056 AV.Integers Int64 shr def
R130073:130075 AV.Integers Int64 shr def
R130078:130080 AV.Integers Int64 shr def
R130104:130107 AV.Integers Int64 shr' def
R130112:130118 AV.Integers Int add def
R130132:130134 AV.Integers Int64 shr def
R130139:130141 AV.Integers Int64 add def
R130104:130107 AV.Integers Int64 shr' def
R130112:130118 AV.Integers Int add def
R130132:130134 AV.Integers Int64 shr def
R130139:130141 AV.Integers Int64 add def
R130160:130166 AV.Integers Int64 shr_shr thm
R130160:130166 AV.Integers Int64 shr_shr thm
R130181:130188 AV.Coqlib <> zlt_true thm
R130181:130188 AV.Coqlib <> zlt_true thm
R130240:130248 AV.Integers Int64 zwordsize def
R130215:130222 AV.Integers Int64 unsigned def
R130224:130232 AV.Integers Int64 iwordsize def
R130215:130222 AV.Integers Int64 unsigned def
R130224:130232 AV.Integers Int64 iwordsize def
R130240:130248 AV.Integers Int64 zwordsize def
R130267:130269 AV.Integers Int64 shr def
R130272:130275 AV.Integers Int64 shr' def
R130304:130306 AV.Integers Int64 shr def
R130314:130317 AV.Integers Int64 shr' def
R130349:130351 AV.Integers Int64 shr def
R130354:130357 AV.Integers Int64 shr' def
def 130455:130463 Int64 one_bits'
R130469:130471 AV.Integers Int64 int rec
R130476:130479 Coq.Init.Datatypes <> list ind
R130481:130487 AV.Integers Int int rec
R130494:130501 Coq.Lists.List <> map def
R130513:130522 AV.Integers Int64 Z_one_bits def
R130534:130541 AV.Integers Int64 unsigned def
R130543:130543 AV.Integers <> x var
R130524:130531 AV.Integers Int64 wordsize def
R130503:130510 AV.Integers Int repr def
def 130562:130571 Int64 is_power2'
R130577:130579 AV.Integers Int64 int rec
R130584:130589 Coq.Init.Datatypes <> option ind
R130591:130597 AV.Integers Int int rec
R130610:130619 AV.Integers Int64 Z_one_bits def
R130631:130638 AV.Integers Int64 unsigned def
R130640:130640 AV.Integers <> x var
R130621:130628 AV.Integers Int64 wordsize def
R130655:130658 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R130659:130661 Coq.Init.Datatypes <> nil constr
R130666:130669 Coq.Init.Datatypes <> Some constr
R130672:130679 AV.Integers Int repr def
R130693:130696 Coq.Init.Datatypes <> None constr
prf 130714:130728 Int64 one_bits'_range
R130763:130766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R130787:130789 Coq.Init.Logic <> :type_scope:x_'='_x not
R130767:130773 AV.Integers Int ltu def
R130777:130786 AV.Integers Int64 iwordsize' def
R130775:130775 AV.Integers <> i var
R130790:130793 Coq.Init.Datatypes <> true constr
R130745:130746 Coq.Lists.List <> In def
R130751:130759 AV.Integers Int64 one_bits' def
R130761:130761 AV.Integers <> x var
R130748:130748 AV.Integers <> i var
R130825:130839 AV.Coqlib <> list_in_map_inv thm
R130825:130839 AV.Coqlib <> list_in_map_inv thm
R130877:130892 AV.Integers Int64 Z_one_bits_range thm
R130921:130927 AV.Integers Int ltu def
R130950:130966 AV.Integers Int unsigned_repr thm
R130950:130966 AV.Integers Int unsigned_repr thm
R130950:130966 AV.Integers Int unsigned_repr thm
R130950:130966 AV.Integers Int unsigned_repr thm
R131009:131017 AV.Integers Int64 zwordsize def
R130979:130990 AV.Integers Int unsigned def
R130992:131001 AV.Integers Int64 iwordsize' def
R130979:130990 AV.Integers Int unsigned def
R130992:131001 AV.Integers Int64 iwordsize' def
R131009:131017 AV.Integers Int64 zwordsize def
R131009:131017 AV.Integers Int64 zwordsize def
R131009:131017 AV.Integers Int64 zwordsize def
R131009:131017 AV.Integers Int64 zwordsize def
R131009:131017 AV.Integers Int64 zwordsize def
R131026:131033 AV.Coqlib <> zlt_true thm
R131026:131033 AV.Coqlib <> zlt_true thm
R131062:131064 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R131053:131061 AV.Integers Int64 zwordsize def
R131065:131080 AV.Integers Int max_unsigned def
R131062:131064 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R131053:131061 AV.Integers Int64 zwordsize def
R131065:131080 AV.Integers Int max_unsigned def
def 131121:131136 Int64 int_of_one_bits'
R131142:131145 Coq.Init.Datatypes <> list ind
R131147:131153 AV.Integers Int int rec
R131158:131160 AV.Integers Int64 int rec
R131173:131173 AV.Integers <> l var
R131184:131186 Coq.Init.Datatypes <> nil constr
R131191:131194 AV.Integers Int64 zero def
R131201:131204 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R131210:131212 AV.Integers Int64 add def
R131228:131243 AV.Integers <> int_of_one_bits' def
R131215:131218 AV.Integers Int64 shl' def
R131220:131222 AV.Integers Int64 one def
prf 131264:131279 Int64 one_bits'_decomp
R131295:131297 Coq.Init.Logic <> :type_scope:x_'='_x not
R131294:131294 AV.Integers <> x var
R131298:131313 AV.Integers Int64 int_of_one_bits' def
R131316:131324 AV.Integers Int64 one_bits' def
R131326:131326 AV.Integers <> x var
R131373:131373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131412:131427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131466:131468 Coq.Init.Logic <> :type_scope:x_'='_x not
R131428:131443 AV.Integers Int64 int_of_one_bits' def
R131446:131453 Coq.Lists.List <> map def
R131464:131464 AV.Integers <> l var
R131455:131462 AV.Integers Int repr def
R131469:131472 AV.Integers Int64 repr def
R131475:131484 AV.Integers Int64 powerserie def
R131486:131486 AV.Integers <> l var
R131390:131393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131395:131398 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R131400:131402 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R131399:131399 AV.Integers <> i var
R131399:131399 AV.Integers <> i var
R131403:131411 AV.Integers Int64 zwordsize def
R131384:131385 Coq.Lists.List <> In def
R131389:131389 AV.Integers <> l var
R131387:131387 AV.Integers <> i var
R131373:131373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131412:131427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131466:131468 Coq.Init.Logic <> :type_scope:x_'='_x not
R131428:131443 AV.Integers Int64 int_of_one_bits' def
R131446:131453 Coq.Lists.List <> map def
R131464:131464 AV.Integers <> l var
R131455:131462 AV.Integers Int repr def
R131469:131472 AV.Integers Int64 repr def
R131475:131484 AV.Integers Int64 powerserie def
R131486:131486 AV.Integers <> l var
R131390:131393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R131395:131398 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R131400:131402 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R131399:131399 AV.Integers <> i var
R131399:131399 AV.Integers <> i var
R131403:131411 AV.Integers Int64 zwordsize def
R131384:131385 Coq.Lists.List <> In def
R131389:131389 AV.Integers <> l var
R131387:131387 AV.Integers <> i var
R131565:131576 AV.Integers Int64 eqm_samerepr thm
R131585:131591 AV.Integers Int64 eqm_add thm
R131565:131576 AV.Integers Int64 eqm_samerepr thm
R131585:131591 AV.Integers Int64 eqm_add thm
R131606:131619 AV.Integers Int64 shl'_one_two_p thm
R131606:131619 AV.Integers Int64 shl'_one_two_p thm
R131606:131619 AV.Integers Int64 shl'_one_two_p thm
R131630:131646 AV.Integers Int unsigned_repr thm
R131630:131646 AV.Integers Int unsigned_repr thm
R131630:131646 AV.Integers Int unsigned_repr thm
R131630:131646 AV.Integers Int unsigned_repr thm
R131655:131661 AV.Integers Int64 eqm_sym thm
R131670:131686 AV.Integers Int64 eqm_unsigned_repr thm
R131655:131661 AV.Integers Int64 eqm_sym thm
R131670:131686 AV.Integers Int64 eqm_unsigned_repr thm
R131731:131733 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R131722:131730 AV.Integers Int64 zwordsize def
R131734:131749 AV.Integers Int max_unsigned def
R131731:131733 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R131722:131730 AV.Integers Int64 zwordsize def
R131734:131749 AV.Integers Int max_unsigned def
R131785:131791 AV.Integers Int64 eqm_sym thm
R131800:131816 AV.Integers Int64 eqm_unsigned_repr thm
R131785:131791 AV.Integers Int64 eqm_sym thm
R131800:131816 AV.Integers Int64 eqm_unsigned_repr thm
R131845:131857 AV.Integers Int64 repr_unsigned thm
R131845:131857 AV.Integers Int64 repr_unsigned thm
R131845:131857 AV.Integers Int64 repr_unsigned thm
R131875:131883 AV.Integers Int64 one_bits' def
R131912:131932 AV.Integers Int64 Z_one_bits_powerserie thm
R131912:131932 AV.Integers Int64 Z_one_bits_powerserie thm
R131912:131932 AV.Integers Int64 Z_one_bits_powerserie thm
R131912:131932 AV.Integers Int64 Z_one_bits_powerserie thm
R131947:131960 AV.Integers Int64 unsigned_range thm
R131947:131960 AV.Integers Int64 unsigned_range thm
R131971:131986 AV.Integers Int64 Z_one_bits_range thm
R131971:131986 AV.Integers Int64 Z_one_bits_range thm
prf 132001:132014 Int64 is_power2'_rng
R132060:132065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R132067:132070 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132088:132090 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132071:132082 AV.Integers Int unsigned def
R132084:132087 AV.Integers <> logn var
R132071:132082 AV.Integers Int unsigned def
R132084:132087 AV.Integers <> logn var
R132091:132099 AV.Integers Int64 zwordsize def
R132048:132050 Coq.Init.Logic <> :type_scope:x_'='_x not
R132036:132045 AV.Integers Int64 is_power2' def
R132047:132047 AV.Integers <> n var
R132051:132054 Coq.Init.Datatypes <> Some constr
R132056:132059 AV.Integers <> logn var
R132118:132127 AV.Integers Int64 is_power2' def
R132160:132169 AV.Integers Int64 Z_one_bits def
R132181:132188 AV.Integers Int64 unsigned def
R132171:132178 AV.Integers Int64 wordsize def
R132160:132169 AV.Integers Int64 Z_one_bits def
R132181:132188 AV.Integers Int64 unsigned def
R132171:132178 AV.Integers Int64 wordsize def
R132241:132244 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132246:132248 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132249:132257 AV.Integers Int64 zwordsize def
R132241:132244 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132246:132248 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R132249:132257 AV.Integers Int64 zwordsize def
R132294:132301 AV.Integers Int64 unsigned def
R132271:132286 AV.Integers Int64 Z_one_bits_range thm
R132294:132301 AV.Integers Int64 unsigned def
R132271:132286 AV.Integers Int64 Z_one_bits_range thm
R132348:132364 AV.Integers Int unsigned_repr thm
R132348:132364 AV.Integers Int unsigned_repr thm
R132348:132364 AV.Integers Int unsigned_repr thm
R132348:132364 AV.Integers Int unsigned_repr thm
R132392:132394 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R132383:132391 AV.Integers Int64 zwordsize def
R132395:132410 AV.Integers Int max_unsigned def
R132392:132394 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R132383:132391 AV.Integers Int64 zwordsize def
R132395:132410 AV.Integers Int max_unsigned def
prf 132452:132467 Int64 is_power2'_range
R132513:132516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R132540:132542 Coq.Init.Logic <> :type_scope:x_'='_x not
R132517:132523 AV.Integers Int ltu def
R132530:132539 AV.Integers Int64 iwordsize' def
R132525:132528 AV.Integers <> logn var
R132543:132546 Coq.Init.Datatypes <> true constr
R132501:132503 Coq.Init.Logic <> :type_scope:x_'='_x not
R132489:132498 AV.Integers Int64 is_power2' def
R132500:132500 AV.Integers <> n var
R132504:132507 Coq.Init.Datatypes <> Some constr
R132509:132512 AV.Integers <> logn var
R132573:132579 AV.Integers Int ltu def
R132620:132628 AV.Integers Int64 zwordsize def
R132590:132601 AV.Integers Int unsigned def
R132603:132612 AV.Integers Int64 iwordsize' def
R132590:132601 AV.Integers Int unsigned def
R132603:132612 AV.Integers Int64 iwordsize' def
R132620:132628 AV.Integers Int64 zwordsize def
R132620:132628 AV.Integers Int64 zwordsize def
R132620:132628 AV.Integers Int64 zwordsize def
R132620:132628 AV.Integers Int64 zwordsize def
R132620:132628 AV.Integers Int64 zwordsize def
R132639:132646 AV.Coqlib <> zlt_true thm
R132639:132646 AV.Coqlib <> zlt_true thm
R132661:132674 AV.Integers Int64 is_power2'_rng thm
R132661:132674 AV.Integers Int64 is_power2'_rng thm
prf 132703:132720 Int64 is_power2'_correct
R132766:132771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R132782:132784 Coq.Init.Logic <> :type_scope:x_'='_x not
R132772:132779 AV.Integers Int64 unsigned def
R132781:132781 AV.Integers <> n var
R132785:132789 Coq.ZArith.Zpower <> two_p def
R132792:132803 AV.Integers Int unsigned def
R132805:132808 AV.Integers <> logn var
R132754:132756 Coq.Init.Logic <> :type_scope:x_'='_x not
R132742:132751 AV.Integers Int64 is_power2' def
R132753:132753 AV.Integers <> n var
R132757:132760 Coq.Init.Datatypes <> Some constr
R132762:132765 AV.Integers <> logn var
R132828:132837 AV.Integers Int64 is_power2' def
R132860:132869 AV.Integers Int64 Z_one_bits def
R132881:132888 AV.Integers Int64 unsigned def
R132871:132878 AV.Integers Int64 wordsize def
R132860:132869 AV.Integers Int64 Z_one_bits def
R132881:132888 AV.Integers Int64 unsigned def
R132871:132878 AV.Integers Int64 wordsize def
R132986:132999 AV.Integers Int64 unsigned_range thm
R132940:132960 AV.Integers Int64 Z_one_bits_powerserie thm
R132963:132970 AV.Integers Int64 unsigned def
R132940:132960 AV.Integers Int64 Z_one_bits_powerserie thm
R132963:132970 AV.Integers Int64 unsigned def
R132986:132999 AV.Integers Int64 unsigned_range thm
R132940:132960 AV.Integers Int64 Z_one_bits_powerserie thm
R132963:132970 AV.Integers Int64 unsigned def
R133013:133029 AV.Integers Int unsigned_repr thm
R133013:133029 AV.Integers Int unsigned_repr thm
R133013:133029 AV.Integers Int unsigned_repr thm
R133013:133029 AV.Integers Int unsigned_repr thm
R133068:133071 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R133073:133075 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R133076:133084 AV.Integers Int64 zwordsize def
R133068:133071 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R133073:133075 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R133076:133084 AV.Integers Int64 zwordsize def
R133121:133128 AV.Integers Int64 unsigned def
R133098:133113 AV.Integers Int64 Z_one_bits_range thm
R133121:133128 AV.Integers Int64 unsigned def
R133098:133113 AV.Integers Int64 Z_one_bits_range thm
R133184:133186 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R133175:133183 AV.Integers Int64 zwordsize def
R133187:133202 AV.Integers Int max_unsigned def
R133184:133186 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R133175:133183 AV.Integers Int64 zwordsize def
R133187:133202 AV.Integers Int max_unsigned def
prf 133244:133252 Int64 mul_pow2'
R133300:133305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133313:133315 Coq.Init.Logic <> :type_scope:x_'='_x not
R133306:133308 AV.Integers Int64 mul def
R133312:133312 AV.Integers <> n var
R133310:133310 AV.Integers <> x var
R133316:133319 AV.Integers Int64 shl' def
R133323:133326 AV.Integers <> logn var
R133321:133321 AV.Integers <> x var
R133288:133290 Coq.Init.Logic <> :type_scope:x_'='_x not
R133276:133285 AV.Integers Int64 is_power2' def
R133287:133287 AV.Integers <> n var
R133291:133294 Coq.Init.Datatypes <> Some constr
R133296:133299 AV.Integers <> logn var
R133354:133361 AV.Integers Int64 shl'_mul thm
R133354:133361 AV.Integers Int64 shl'_mul thm
R133354:133361 AV.Integers Int64 shl'_mul thm
R133381:133394 AV.Integers Int64 shl'_one_two_p thm
R133381:133394 AV.Integers Int64 shl'_one_two_p thm
R133381:133394 AV.Integers Int64 shl'_one_two_p thm
R133411:133423 AV.Integers Int64 repr_unsigned thm
R133411:133423 AV.Integers Int64 repr_unsigned thm
R133411:133423 AV.Integers Int64 repr_unsigned thm
R133444:133461 AV.Integers Int64 is_power2'_correct thm
R133444:133461 AV.Integers Int64 is_power2'_correct thm
prf 133484:133493 Int64 divu_pow2'
R133541:133546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133555:133557 Coq.Init.Logic <> :type_scope:x_'='_x not
R133547:133550 AV.Integers Int64 divu def
R133554:133554 AV.Integers <> n var
R133552:133552 AV.Integers <> x var
R133558:133562 AV.Integers Int64 shru' def
R133566:133569 AV.Integers <> logn var
R133564:133564 AV.Integers <> x var
R133529:133531 Coq.Init.Logic <> :type_scope:x_'='_x not
R133517:133526 AV.Integers Int64 is_power2' def
R133528:133528 AV.Integers <> n var
R133532:133535 Coq.Init.Datatypes <> Some constr
R133537:133540 AV.Integers <> logn var
R133601:133618 AV.Integers Int64 is_power2'_correct thm
R133601:133618 AV.Integers Int64 is_power2'_correct thm
R133657:133660 AV.Integers Int64 divu def
R133682:133686 AV.Integers Int64 shru' def
R133697:133713 AV.Integers Int64 Zshiftr_div_two_p thm
R133697:133713 AV.Integers Int64 Zshiftr_div_two_p thm
R133697:133713 AV.Integers Int64 Zshiftr_div_two_p thm
R133697:133713 AV.Integers Int64 Zshiftr_div_two_p thm
R133731:133744 AV.Integers Int64 is_power2'_rng thm
R133731:133744 AV.Integers Int64 is_power2'_rng thm
def 133827:133832 Int64 loword
R133838:133840 AV.Integers Int64 int rec
R133845:133851 AV.Integers Int int rec
R133856:133863 AV.Integers Int repr def
R133866:133873 AV.Integers Int64 unsigned def
R133875:133875 AV.Integers <> n var
def 133891:133896 Int64 hiword
R133902:133904 AV.Integers Int64 int rec
R133909:133915 AV.Integers Int int rec
R133920:133927 AV.Integers Int repr def
R133930:133937 AV.Integers Int64 unsigned def
R133940:133943 AV.Integers Int64 shru def
R133948:133951 AV.Integers Int64 repr def
R133953:133965 AV.Integers Int zwordsize def
R133945:133945 AV.Integers <> n var
def 133983:133989 Int64 ofwords
R133999:134005 AV.Integers Int int rec
R134010:134012 AV.Integers Int64 int rec
R134019:134020 AV.Integers Int64 or def
R134075:134078 AV.Integers Int64 repr def
R134081:134092 AV.Integers Int unsigned def
R134094:134095 AV.Integers <> lo var
R134023:134025 AV.Integers Int64 shl def
R134053:134056 AV.Integers Int64 repr def
R134058:134070 AV.Integers Int zwordsize def
R134028:134031 AV.Integers Int64 repr def
R134034:134045 AV.Integers Int unsigned def
R134047:134048 AV.Integers <> hi var
prf 134107:134117 Int64 bits_loword
R134156:134159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134184:134186 Coq.Init.Logic <> :type_scope:x_'='_x not
R134160:134170 AV.Integers Int testbit def
R134183:134183 AV.Integers <> i var
R134173:134178 AV.Integers Int64 loword def
R134180:134180 AV.Integers <> n var
R134187:134193 AV.Integers Int64 testbit def
R134197:134197 AV.Integers <> i var
R134195:134195 AV.Integers <> n var
R134135:134138 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134140:134142 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134139:134139 AV.Integers <> i var
R134139:134139 AV.Integers <> i var
R134143:134155 AV.Integers Int zwordsize def
R134224:134229 AV.Integers Int64 loword def
R134240:134255 AV.Integers Int testbit_repr thm
R134240:134255 AV.Integers Int testbit_repr thm
R134240:134255 AV.Integers Int testbit_repr thm
R134240:134255 AV.Integers Int testbit_repr thm
prf 134276:134286 Int64 bits_hiword
R134325:134328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134353:134355 Coq.Init.Logic <> :type_scope:x_'='_x not
R134329:134339 AV.Integers Int testbit def
R134352:134352 AV.Integers <> i var
R134342:134347 AV.Integers Int64 hiword def
R134349:134349 AV.Integers <> n var
R134356:134362 AV.Integers Int64 testbit def
R134368:134370 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134367:134367 AV.Integers <> i var
R134371:134383 AV.Integers Int zwordsize def
R134364:134364 AV.Integers <> n var
R134304:134307 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134309:134311 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134308:134308 AV.Integers <> i var
R134308:134308 AV.Integers <> i var
R134312:134324 AV.Integers Int zwordsize def
R134411:134416 AV.Integers Int64 hiword def
R134427:134442 AV.Integers Int testbit_repr thm
R134427:134442 AV.Integers Int testbit_repr thm
R134427:134442 AV.Integers Int testbit_repr thm
R134427:134442 AV.Integers Int testbit_repr thm
R134470:134472 Coq.Init.Logic <> :type_scope:x_'='_x not
R134461:134469 AV.Integers Int64 zwordsize def
R134474:134476 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134477:134489 AV.Integers Int zwordsize def
R134470:134472 Coq.Init.Logic <> :type_scope:x_'='_x not
R134461:134469 AV.Integers Int64 zwordsize def
R134474:134476 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134477:134489 AV.Integers Int zwordsize def
R134516:134522 AV.Integers Int64 testbit def
R134525:134528 AV.Integers Int64 shru def
R134533:134536 AV.Integers Int64 repr def
R134538:134550 AV.Integers Int zwordsize def
R134516:134522 AV.Integers Int64 testbit def
R134525:134528 AV.Integers Int64 shru def
R134533:134536 AV.Integers Int64 repr def
R134538:134550 AV.Integers Int zwordsize def
R134566:134574 AV.Integers Int64 bits_shru thm
R134566:134574 AV.Integers Int64 bits_shru thm
R134566:134574 AV.Integers Int64 bits_shru thm
R134566:134574 AV.Integers Int64 bits_shru thm
R134623:134635 AV.Integers Int zwordsize def
R134587:134594 AV.Integers Int64 unsigned def
R134597:134600 AV.Integers Int64 repr def
R134602:134614 AV.Integers Int zwordsize def
R134587:134594 AV.Integers Int64 unsigned def
R134597:134600 AV.Integers Int64 repr def
R134602:134614 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134623:134635 AV.Integers Int zwordsize def
R134646:134653 AV.Coqlib <> zlt_true thm
R134646:134653 AV.Coqlib <> zlt_true thm
prf 134682:134693 Int64 bits_ofwords
R134732:134737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134763:134767 Coq.Init.Logic <> :type_scope:x_'='_x not
R134738:134744 AV.Integers Int64 testbit def
R134762:134762 AV.Integers <> i var
R134747:134753 AV.Integers Int64 ofwords def
R134758:134759 AV.Integers <> lo var
R134755:134756 AV.Integers <> hi var
R134771:134773 AV.Coqlib <> zlt def
R134777:134789 AV.Integers Int zwordsize def
R134775:134775 AV.Integers <> i var
R134818:134828 AV.Integers Int testbit def
R134835:134837 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R134834:134834 AV.Integers <> i var
R134838:134850 AV.Integers Int zwordsize def
R134830:134831 AV.Integers <> hi var
R134796:134806 AV.Integers Int testbit def
R134811:134811 AV.Integers <> i var
R134808:134809 AV.Integers <> lo var
R134715:134718 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134720:134722 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R134719:134719 AV.Integers <> i var
R134719:134719 AV.Integers <> i var
R134723:134731 AV.Integers Int64 zwordsize def
R134878:134884 AV.Integers Int64 ofwords def
R134895:134901 AV.Integers Int64 bits_or thm
R134895:134901 AV.Integers Int64 bits_or thm
R134895:134901 AV.Integers Int64 bits_or thm
R134895:134901 AV.Integers Int64 bits_or thm
R134918:134925 AV.Integers Int64 bits_shl thm
R134918:134925 AV.Integers Int64 bits_shl thm
R134918:134925 AV.Integers Int64 bits_shl thm
R134918:134925 AV.Integers Int64 bits_shl thm
R134980:134992 AV.Integers Int zwordsize def
R134944:134951 AV.Integers Int64 unsigned def
R134954:134957 AV.Integers Int64 repr def
R134959:134971 AV.Integers Int zwordsize def
R134944:134951 AV.Integers Int64 unsigned def
R134954:134957 AV.Integers Int64 repr def
R134959:134971 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R134980:134992 AV.Integers Int zwordsize def
R135014:135016 Coq.Init.Logic <> :type_scope:x_'='_x not
R135005:135013 AV.Integers Int64 zwordsize def
R135018:135020 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135021:135033 AV.Integers Int zwordsize def
R135014:135016 Coq.Init.Logic <> :type_scope:x_'='_x not
R135005:135013 AV.Integers Int64 zwordsize def
R135018:135020 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135021:135033 AV.Integers Int zwordsize def
R135064:135066 AV.Coqlib <> zlt def
R135070:135082 AV.Integers Int zwordsize def
R135064:135066 AV.Coqlib <> zlt def
R135070:135082 AV.Integers Int zwordsize def
R135096:135107 AV.Integers Int64 testbit_repr thm
R135096:135107 AV.Integers Int64 testbit_repr thm
R135096:135107 AV.Integers Int64 testbit_repr thm
R135096:135107 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135127:135138 AV.Integers Int64 testbit_repr thm
R135155:135165 AV.Integers Int testbit def
R135155:135165 AV.Integers Int testbit def
R135182:135195 AV.Integers Int bits_above thm
R135182:135195 AV.Integers Int bits_above thm
R135182:135195 AV.Integers Int bits_above thm
R135182:135195 AV.Integers Int bits_above thm
R135204:135214 Coq.Bool.Bool <> orb_false_r thm
R135204:135214 Coq.Bool.Bool <> orb_false_r thm
prf 135244:135253 Int64 lo_ofwords
R135294:135296 Coq.Init.Logic <> :type_scope:x_'='_x not
R135272:135277 AV.Integers Int64 loword def
R135280:135286 AV.Integers Int64 ofwords def
R135291:135292 AV.Integers <> lo var
R135288:135289 AV.Integers <> hi var
R135297:135298 AV.Integers <> lo var
R135324:135339 AV.Integers Int same_bits_eq thm
R135324:135339 AV.Integers Int same_bits_eq thm
R135360:135370 AV.Integers Int64 bits_loword thm
R135360:135370 AV.Integers Int64 bits_loword thm
R135360:135370 AV.Integers Int64 bits_loword thm
R135360:135370 AV.Integers Int64 bits_loword thm
R135387:135398 AV.Integers Int64 bits_ofwords thm
R135387:135398 AV.Integers Int64 bits_ofwords thm
R135387:135398 AV.Integers Int64 bits_ofwords thm
R135387:135398 AV.Integers Int64 bits_ofwords thm
R135407:135414 AV.Coqlib <> zlt_true thm
R135407:135414 AV.Coqlib <> zlt_true thm
R135443:135445 Coq.Init.Logic <> :type_scope:x_'='_x not
R135434:135442 AV.Integers Int64 zwordsize def
R135447:135449 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135450:135462 AV.Integers Int zwordsize def
R135443:135445 Coq.Init.Logic <> :type_scope:x_'='_x not
R135434:135442 AV.Integers Int64 zwordsize def
R135447:135449 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135450:135462 AV.Integers Int zwordsize def
prf 135500:135509 Int64 hi_ofwords
R135550:135552 Coq.Init.Logic <> :type_scope:x_'='_x not
R135528:135533 AV.Integers Int64 hiword def
R135536:135542 AV.Integers Int64 ofwords def
R135547:135548 AV.Integers <> lo var
R135544:135545 AV.Integers <> hi var
R135553:135554 AV.Integers <> hi var
R135580:135595 AV.Integers Int same_bits_eq thm
R135580:135595 AV.Integers Int same_bits_eq thm
R135616:135626 AV.Integers Int64 bits_hiword thm
R135616:135626 AV.Integers Int64 bits_hiword thm
R135616:135626 AV.Integers Int64 bits_hiword thm
R135616:135626 AV.Integers Int64 bits_hiword thm
R135643:135654 AV.Integers Int64 bits_ofwords thm
R135643:135654 AV.Integers Int64 bits_ofwords thm
R135643:135654 AV.Integers Int64 bits_ofwords thm
R135643:135654 AV.Integers Int64 bits_ofwords thm
R135667:135675 AV.Coqlib <> zlt_false thm
R135667:135675 AV.Coqlib <> zlt_false thm
R135667:135675 AV.Coqlib <> zlt_false thm
R135667:135675 AV.Coqlib <> zlt_false thm
R135720:135722 Coq.Init.Logic <> :type_scope:x_'='_x not
R135711:135719 AV.Integers Int64 zwordsize def
R135724:135726 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135727:135739 AV.Integers Int zwordsize def
R135720:135722 Coq.Init.Logic <> :type_scope:x_'='_x not
R135711:135719 AV.Integers Int64 zwordsize def
R135724:135726 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135727:135739 AV.Integers Int zwordsize def
prf 135777:135793 Int64 ofwords_recompose
R135837:135839 Coq.Init.Logic <> :type_scope:x_'='_x not
R135808:135814 AV.Integers Int64 ofwords def
R135828:135833 AV.Integers Int64 loword def
R135835:135835 AV.Integers <> n var
R135817:135822 AV.Integers Int64 hiword def
R135824:135824 AV.Integers <> n var
R135840:135840 AV.Integers <> n var
R135866:135877 AV.Integers Int64 same_bits_eq thm
R135866:135877 AV.Integers Int64 same_bits_eq thm
R135896:135907 AV.Integers Int64 bits_ofwords thm
R135896:135907 AV.Integers Int64 bits_ofwords thm
R135896:135907 AV.Integers Int64 bits_ofwords thm
R135896:135907 AV.Integers Int64 bits_ofwords thm
R135928:135930 AV.Coqlib <> zlt def
R135934:135946 AV.Integers Int zwordsize def
R135928:135930 AV.Coqlib <> zlt def
R135934:135946 AV.Integers Int zwordsize def
R135958:135968 AV.Integers Int64 bits_loword thm
R135958:135968 AV.Integers Int64 bits_loword thm
R135988:135998 AV.Integers Int64 bits_hiword thm
R135988:135998 AV.Integers Int64 bits_hiword thm
R135988:135998 AV.Integers Int64 bits_hiword thm
R135988:135998 AV.Integers Int64 bits_hiword thm
R136036:136038 Coq.Init.Logic <> :type_scope:x_'='_x not
R136027:136035 AV.Integers Int64 zwordsize def
R136040:136042 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R136043:136055 AV.Integers Int zwordsize def
R136036:136038 Coq.Init.Logic <> :type_scope:x_'='_x not
R136027:136035 AV.Integers Int64 zwordsize def
R136040:136042 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R136043:136055 AV.Integers Int zwordsize def
prf 136093:136103 Int64 ofwords_add
R136135:136137 Coq.Init.Logic <> :type_scope:x_'='_x not
R136122:136128 AV.Integers Int64 ofwords def
R136133:136134 AV.Integers <> lo var
R136130:136131 AV.Integers <> hi var
R136138:136141 AV.Integers Int64 repr def
R136170:136172 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R136159:136161 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R136144:136155 AV.Integers Int unsigned def
R136157:136158 AV.Integers <> hi var
R136162:136166 Coq.ZArith.Zpower <> two_p def
R136173:136184 AV.Integers Int unsigned def
R136186:136187 AV.Integers <> lo var
R136215:136221 AV.Integers Int64 ofwords def
R136232:136248 AV.Integers Int64 shifted_or_is_add thm
R136232:136248 AV.Integers Int64 shifted_or_is_add thm
R136232:136248 AV.Integers Int64 shifted_or_is_add thm
R136232:136248 AV.Integers Int64 shifted_or_is_add thm
R136232:136248 AV.Integers Int64 shifted_or_is_add thm
R136259:136270 AV.Integers Int64 eqm_samerepr thm
R136259:136270 AV.Integers Int64 eqm_samerepr thm
R136279:136285 AV.Integers Int64 eqm_add thm
R136279:136285 AV.Integers Int64 eqm_add thm
R136294:136301 AV.Integers Int64 eqm_mult thm
R136294:136301 AV.Integers Int64 eqm_mult thm
R136312:136318 AV.Integers Int64 eqm_sym thm
R136327:136343 AV.Integers Int64 eqm_unsigned_repr thm
R136312:136318 AV.Integers Int64 eqm_sym thm
R136327:136343 AV.Integers Int64 eqm_unsigned_repr thm
R136354:136361 AV.Integers Int64 eqm_refl thm
R136354:136361 AV.Integers Int64 eqm_refl thm
R136372:136378 AV.Integers Int64 eqm_sym thm
R136387:136403 AV.Integers Int64 eqm_unsigned_repr thm
R136372:136378 AV.Integers Int64 eqm_sym thm
R136387:136403 AV.Integers Int64 eqm_unsigned_repr thm
R136415:136427 AV.Integers Int zwordsize def
R136445:136453 AV.Integers Int64 zwordsize def
R136415:136427 AV.Integers Int zwordsize def
R136445:136453 AV.Integers Int64 zwordsize def
R136481:136493 AV.Integers Int64 unsigned_repr thm
R136481:136493 AV.Integers Int64 unsigned_repr thm
R136481:136493 AV.Integers Int64 unsigned_repr thm
R136481:136493 AV.Integers Int64 unsigned_repr thm
R136508:136525 AV.Integers Int unsigned_range thm
R136508:136525 AV.Integers Int unsigned_range thm
R136581:136583 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R136565:136580 AV.Integers Int max_unsigned def
R136584:136595 AV.Integers Int64 max_unsigned def
R136581:136583 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R136565:136580 AV.Integers Int max_unsigned def
R136584:136595 AV.Integers Int64 max_unsigned def
R136632:136651 AV.Integers Int unsigned_range_2 thm
R136632:136651 AV.Integers Int unsigned_range_2 thm
prf 136677:136688 Int64 ofwords_add'
R136731:136733 Coq.Init.Logic <> :type_scope:x_'='_x not
R136707:136714 AV.Integers Int64 unsigned def
R136717:136723 AV.Integers Int64 ofwords def
R136728:136729 AV.Integers <> lo var
R136725:136726 AV.Integers <> hi var
R136760:136762 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R136749:136751 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R136734:136745 AV.Integers Int unsigned def
R136747:136748 AV.Integers <> hi var
R136752:136756 Coq.ZArith.Zpower <> two_p def
R136763:136774 AV.Integers Int unsigned def
R136776:136777 AV.Integers <> lo var
R136805:136815 AV.Integers Int64 ofwords_add thm
R136805:136815 AV.Integers Int64 ofwords_add thm
R136805:136815 AV.Integers Int64 ofwords_add thm
R136824:136836 AV.Integers Int64 unsigned_repr thm
R136824:136836 AV.Integers Int64 unsigned_repr thm
R136853:136870 AV.Integers Int unsigned_range thm
R136877:136894 AV.Integers Int unsigned_range thm
R136853:136870 AV.Integers Int unsigned_range thm
R136877:136894 AV.Integers Int unsigned_range thm
R136926:136936 AV.Integers Int modulus def
R136911:136915 Coq.ZArith.Zpower <> two_p def
R136911:136915 Coq.ZArith.Zpower <> two_p def
R136926:136936 AV.Integers Int modulus def
R136926:136936 AV.Integers Int modulus def
R136948:136958 AV.Integers Int modulus def
R136948:136958 AV.Integers Int modulus def
R136986:136997 AV.Integers Int64 max_unsigned def
R136986:136997 AV.Integers Int64 max_unsigned def
prf 137048:137059 Int64 eqm_mul_2p32
R137087:137090 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137091:137093 AV.Integers Int64 eqm def
R137112:137114 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137111:137111 AV.Integers <> y var
R137115:137119 Coq.ZArith.Zpower <> two_p def
R137097:137099 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137096:137096 AV.Integers <> x var
R137100:137104 Coq.ZArith.Zpower <> two_p def
R137076:137082 AV.Integers Int eqm def
R137086:137086 AV.Integers <> y var
R137084:137084 AV.Integers <> x var
R137214:137218 Coq.ZArith.Zpower <> two_p def
R137196:137206 AV.Integers Int modulus def
R137196:137206 AV.Integers Int modulus def
R137214:137218 Coq.ZArith.Zpower <> two_p def
R137256:137258 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137248:137252 Coq.ZArith.Zpower <> two_p def
R137259:137263 Coq.ZArith.Zpower <> two_p def
R137234:137240 AV.Integers Int64 modulus def
R137234:137240 AV.Integers Int64 modulus def
R137256:137258 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137248:137252 Coq.ZArith.Zpower <> two_p def
R137259:137263 Coq.ZArith.Zpower <> two_p def
prf 137290:137302 Int64 ofwords_add''
R137343:137345 Coq.Init.Logic <> :type_scope:x_'='_x not
R137321:137326 AV.Integers Int64 signed def
R137329:137335 AV.Integers Int64 ofwords def
R137340:137341 AV.Integers <> lo var
R137337:137338 AV.Integers <> hi var
R137370:137372 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137359:137361 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137346:137355 AV.Integers Int signed def
R137357:137358 AV.Integers <> hi var
R137362:137366 Coq.ZArith.Zpower <> two_p def
R137373:137384 AV.Integers Int unsigned def
R137386:137387 AV.Integers <> lo var
R137415:137425 AV.Integers Int64 ofwords_add thm
R137415:137425 AV.Integers Int64 ofwords_add thm
R137415:137425 AV.Integers Int64 ofwords_add thm
R137439:137442 AV.Integers Int64 repr def
R137471:137473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137460:137462 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137445:137456 AV.Integers Int unsigned def
R137463:137467 Coq.ZArith.Zpower <> two_p def
R137474:137485 AV.Integers Int unsigned def
R137503:137506 AV.Integers Int64 repr def
R137533:137535 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137522:137524 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137509:137518 AV.Integers Int signed def
R137525:137529 Coq.ZArith.Zpower <> two_p def
R137536:137547 AV.Integers Int unsigned def
R137439:137442 AV.Integers Int64 repr def
R137471:137473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137460:137462 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137445:137456 AV.Integers Int unsigned def
R137463:137467 Coq.ZArith.Zpower <> two_p def
R137474:137485 AV.Integers Int unsigned def
R137503:137506 AV.Integers Int64 repr def
R137533:137535 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137522:137524 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137509:137518 AV.Integers Int signed def
R137525:137529 Coq.ZArith.Zpower <> two_p def
R137536:137547 AV.Integers Int unsigned def
R137563:137573 AV.Integers Int64 signed_repr thm
R137563:137573 AV.Integers Int64 signed_repr thm
R137590:137605 AV.Integers Int signed_range thm
R137612:137629 AV.Integers Int unsigned_range thm
R137590:137605 AV.Integers Int signed_range thm
R137612:137629 AV.Integers Int unsigned_range thm
R137661:137671 AV.Integers Int modulus def
R137646:137650 Coq.ZArith.Zpower <> two_p def
R137646:137650 Coq.ZArith.Zpower <> two_p def
R137661:137671 AV.Integers Int modulus def
R137661:137671 AV.Integers Int modulus def
R137714:137716 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137700:137713 AV.Integers Int min_signed def
R137717:137727 AV.Integers Int modulus def
R137683:137692 AV.Integers Int64 min_signed def
R137683:137692 AV.Integers Int64 min_signed def
R137714:137716 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137700:137713 AV.Integers Int min_signed def
R137717:137727 AV.Integers Int modulus def
R137799:137801 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R137785:137787 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137771:137773 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137757:137770 AV.Integers Int max_signed def
R137774:137784 AV.Integers Int modulus def
R137788:137798 AV.Integers Int modulus def
R137740:137749 AV.Integers Int64 max_signed def
R137740:137749 AV.Integers Int64 max_signed def
R137799:137801 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R137785:137787 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R137771:137773 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R137757:137770 AV.Integers Int max_signed def
R137774:137784 AV.Integers Int modulus def
R137788:137798 AV.Integers Int modulus def
R137815:137825 AV.Integers Int modulus def
R137815:137825 AV.Integers Int modulus def
R137861:137872 AV.Integers Int64 eqm_samerepr thm
R137861:137872 AV.Integers Int64 eqm_samerepr thm
R137881:137887 AV.Integers Int64 eqm_add thm
R137881:137887 AV.Integers Int64 eqm_add thm
R137896:137907 AV.Integers Int64 eqm_mul_2p32 thm
R137896:137907 AV.Integers Int64 eqm_mul_2p32 thm
R137916:137938 AV.Integers Int eqm_signed_unsigned thm
R137916:137938 AV.Integers Int eqm_signed_unsigned thm
R137947:137954 AV.Integers Int64 eqm_refl thm
R137947:137954 AV.Integers Int64 eqm_refl thm
prf 138036:138058 Int64 decompose_bitwise_binop
R138095:138095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138183:138189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138190:138190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138294:138300 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138336:138338 Coq.Init.Logic <> :type_scope:x_'='_x not
R138301:138303 AV.Integers <> f64 var
R138322:138328 AV.Integers Int64 ofwords def
R138333:138334 AV.Integers <> yl var
R138330:138331 AV.Integers <> yh var
R138306:138312 AV.Integers Int64 ofwords def
R138317:138318 AV.Integers <> xl var
R138314:138315 AV.Integers <> xh var
R138339:138345 AV.Integers Int64 ofwords def
R138360:138362 AV.Integers <> f32 var
R138367:138368 AV.Integers <> yl var
R138364:138365 AV.Integers <> xl var
R138348:138350 AV.Integers <> f32 var
R138355:138356 AV.Integers <> yh var
R138352:138353 AV.Integers <> xh var
R138227:138230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138254:138256 Coq.Init.Logic <> :type_scope:x_'='_x not
R138231:138241 AV.Integers Int testbit def
R138253:138253 AV.Integers <> i var
R138244:138246 AV.Integers <> f32 var
R138250:138250 AV.Integers <> y var
R138248:138248 AV.Integers <> x var
R138257:138257 AV.Integers <> f var
R138278:138288 AV.Integers Int testbit def
R138292:138292 AV.Integers <> i var
R138290:138290 AV.Integers <> y var
R138260:138270 AV.Integers Int testbit def
R138274:138274 AV.Integers <> i var
R138272:138272 AV.Integers <> x var
R138206:138209 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R138211:138213 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R138210:138210 AV.Integers <> i var
R138210:138210 AV.Integers <> i var
R138214:138226 AV.Integers Int zwordsize def
R138128:138131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R138151:138153 Coq.Init.Logic <> :type_scope:x_'='_x not
R138132:138138 AV.Integers Int64 testbit def
R138150:138150 AV.Integers <> i var
R138141:138143 AV.Integers <> f64 var
R138147:138147 AV.Integers <> y var
R138145:138145 AV.Integers <> x var
R138154:138154 AV.Integers <> f var
R138171:138177 AV.Integers Int64 testbit def
R138181:138181 AV.Integers <> i var
R138179:138179 AV.Integers <> y var
R138157:138163 AV.Integers Int64 testbit def
R138167:138167 AV.Integers <> i var
R138165:138165 AV.Integers <> x var
R138111:138114 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R138116:138118 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R138115:138115 AV.Integers <> i var
R138115:138115 AV.Integers <> i var
R138119:138127 AV.Integers Int64 zwordsize def
R138395:138412 AV.Integers Int64 same_bits_eq thm
R138395:138412 AV.Integers Int64 same_bits_eq thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138454:138465 AV.Integers Int64 bits_ofwords thm
R138495:138497 Coq.Init.Logic <> :type_scope:x_'='_x not
R138486:138494 AV.Integers Int64 zwordsize def
R138499:138501 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R138502:138514 AV.Integers Int zwordsize def
R138495:138497 Coq.Init.Logic <> :type_scope:x_'='_x not
R138486:138494 AV.Integers Int64 zwordsize def
R138499:138501 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R138502:138514 AV.Integers Int zwordsize def
R138545:138547 AV.Coqlib <> zlt def
R138551:138563 AV.Integers Int zwordsize def
R138545:138547 AV.Coqlib <> zlt def
R138551:138563 AV.Integers Int zwordsize def
prf 138606:138618 Int64 decompose_and
R138680:138682 Coq.Init.Logic <> :type_scope:x_'='_x not
R138645:138647 AV.Integers Int64 and def
R138666:138672 AV.Integers Int64 ofwords def
R138677:138678 AV.Integers <> yl var
R138674:138675 AV.Integers <> yh var
R138650:138656 AV.Integers Int64 ofwords def
R138661:138662 AV.Integers <> xl var
R138658:138659 AV.Integers <> xh var
R138683:138689 AV.Integers Int64 ofwords def
R138708:138714 AV.Integers Int and def
R138719:138720 AV.Integers <> yl var
R138716:138717 AV.Integers <> xl var
R138692:138698 AV.Integers Int and def
R138703:138704 AV.Integers <> yh var
R138700:138701 AV.Integers <> xh var
R138776:138779 Coq.Init.Datatypes <> andb def
R138747:138769 AV.Integers Int64 decompose_bitwise_binop thm
R138776:138779 Coq.Init.Datatypes <> andb def
R138747:138769 AV.Integers Int64 decompose_bitwise_binop thm
R138790:138797 AV.Integers Int64 bits_and thm
R138790:138797 AV.Integers Int64 bits_and thm
R138806:138817 AV.Integers Int bits_and thm
R138806:138817 AV.Integers Int bits_and thm
prf 138832:138843 Int64 decompose_or
R138904:138906 Coq.Init.Logic <> :type_scope:x_'='_x not
R138870:138871 AV.Integers Int64 or def
R138890:138896 AV.Integers Int64 ofwords def
R138901:138902 AV.Integers <> yl var
R138898:138899 AV.Integers <> yh var
R138874:138880 AV.Integers Int64 ofwords def
R138885:138886 AV.Integers <> xl var
R138882:138883 AV.Integers <> xh var
R138907:138913 AV.Integers Int64 ofwords def
R138931:138936 AV.Integers Int or def
R138941:138942 AV.Integers <> yl var
R138938:138939 AV.Integers <> xl var
R138916:138921 AV.Integers Int or def
R138926:138927 AV.Integers <> yh var
R138923:138924 AV.Integers <> xh var
R138998:139000 Coq.Init.Datatypes <> orb def
R138969:138991 AV.Integers Int64 decompose_bitwise_binop thm
R138998:139000 Coq.Init.Datatypes <> orb def
R138969:138991 AV.Integers Int64 decompose_bitwise_binop thm
R139011:139017 AV.Integers Int64 bits_or thm
R139011:139017 AV.Integers Int64 bits_or thm
R139026:139036 AV.Integers Int bits_or thm
R139026:139036 AV.Integers Int bits_or thm
prf 139051:139063 Int64 decompose_xor
R139125:139127 Coq.Init.Logic <> :type_scope:x_'='_x not
R139090:139092 AV.Integers Int64 xor def
R139111:139117 AV.Integers Int64 ofwords def
R139122:139123 AV.Integers <> yl var
R139119:139120 AV.Integers <> yh var
R139095:139101 AV.Integers Int64 ofwords def
R139106:139107 AV.Integers <> xl var
R139103:139104 AV.Integers <> xh var
R139128:139134 AV.Integers Int64 ofwords def
R139153:139159 AV.Integers Int xor def
R139164:139165 AV.Integers <> yl var
R139161:139162 AV.Integers <> xl var
R139137:139143 AV.Integers Int xor def
R139148:139149 AV.Integers <> yh var
R139145:139146 AV.Integers <> xh var
R139221:139224 Coq.Init.Datatypes <> xorb def
R139192:139214 AV.Integers Int64 decompose_bitwise_binop thm
R139221:139224 Coq.Init.Datatypes <> xorb def
R139192:139214 AV.Integers Int64 decompose_bitwise_binop thm
R139235:139242 AV.Integers Int64 bits_xor thm
R139235:139242 AV.Integers Int64 bits_xor thm
R139251:139262 AV.Integers Int bits_xor thm
R139251:139262 AV.Integers Int bits_xor thm
prf 139277:139289 Int64 decompose_not
R139329:139331 Coq.Init.Logic <> :type_scope:x_'='_x not
R139310:139312 AV.Integers Int64 not def
R139315:139321 AV.Integers Int64 ofwords def
R139326:139327 AV.Integers <> xl var
R139323:139324 AV.Integers <> xh var
R139332:139338 AV.Integers Int64 ofwords def
R139354:139360 AV.Integers Int not def
R139362:139363 AV.Integers <> xl var
R139341:139347 AV.Integers Int not def
R139349:139350 AV.Integers <> xh var
R139391:139393 AV.Integers Int64 not def
R139396:139402 AV.Integers Int not def
R139416:139428 AV.Integers Int64 decompose_xor thm
R139416:139428 AV.Integers Int64 decompose_xor thm
R139416:139428 AV.Integers Int64 decompose_xor thm
R139449:139461 AV.Integers Int64 eq_spec thm
R139469:139475 AV.Integers Int64 ofwords def
R139486:139493 AV.Integers Int mone def
R139477:139484 AV.Integers Int mone def
R139463:139466 AV.Integers Int64 mone def
R139449:139461 AV.Integers Int64 eq_spec thm
R139469:139475 AV.Integers Int64 ofwords def
R139486:139493 AV.Integers Int mone def
R139477:139484 AV.Integers Int mone def
R139463:139466 AV.Integers Int64 mone def
prf 139510:139524 Int64 decompose_shl_1
R139582:139587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R139610:139614 Coq.Init.Logic <> :type_scope:x_'='_x not
R139588:139591 AV.Integers Int64 shl' def
R139609:139609 AV.Integers <> y var
R139594:139600 AV.Integers Int64 ofwords def
R139605:139606 AV.Integers <> xl var
R139602:139603 AV.Integers <> xh var
R139615:139621 AV.Integers Int64 ofwords def
R139698:139704 AV.Integers Int shl def
R139709:139709 AV.Integers <> y var
R139706:139707 AV.Integers <> xl var
R139624:139629 AV.Integers Int or def
R139647:139654 AV.Integers Int shru def
R139660:139666 AV.Integers Int sub def
R139682:139682 AV.Integers <> y var
R139668:139680 AV.Integers Int iwordsize def
R139656:139657 AV.Integers <> xl var
R139632:139638 AV.Integers Int shl def
R139643:139643 AV.Integers <> y var
R139640:139641 AV.Integers <> xh var
R139548:139551 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R139566:139568 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R139552:139563 AV.Integers Int unsigned def
R139565:139565 AV.Integers <> y var
R139552:139563 AV.Integers Int unsigned def
R139565:139565 AV.Integers <> y var
R139569:139581 AV.Integers Int zwordsize def
R139778:139780 Coq.Init.Logic <> :type_scope:x_'='_x not
R139740:139751 AV.Integers Int unsigned def
R139754:139760 AV.Integers Int sub def
R139762:139774 AV.Integers Int iwordsize def
R139794:139796 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R139781:139793 AV.Integers Int zwordsize def
R139797:139808 AV.Integers Int unsigned def
R139778:139780 Coq.Init.Logic <> :type_scope:x_'='_x not
R139740:139751 AV.Integers Int unsigned def
R139754:139760 AV.Integers Int sub def
R139762:139774 AV.Integers Int iwordsize def
R139794:139796 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R139781:139793 AV.Integers Int zwordsize def
R139797:139808 AV.Integers Int unsigned def
R139825:139831 AV.Integers Int sub def
R139842:139858 AV.Integers Int unsigned_repr thm
R139842:139858 AV.Integers Int unsigned_repr thm
R139842:139858 AV.Integers Int unsigned_repr thm
R139842:139858 AV.Integers Int unsigned_repr thm
R139879:139904 AV.Integers Int unsigned_repr_wordsize thm
R139879:139904 AV.Integers Int unsigned_repr_wordsize thm
R139879:139904 AV.Integers Int unsigned_repr_wordsize thm
R139918:139942 AV.Integers Int wordsize_max_unsigned thm
R139918:139942 AV.Integers Int wordsize_max_unsigned thm
R139973:139975 Coq.Init.Logic <> :type_scope:x_'='_x not
R139964:139972 AV.Integers Int64 zwordsize def
R139977:139979 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R139980:139992 AV.Integers Int zwordsize def
R139973:139975 Coq.Init.Logic <> :type_scope:x_'='_x not
R139964:139972 AV.Integers Int64 zwordsize def
R139977:139979 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R139980:139992 AV.Integers Int zwordsize def
R140019:140036 AV.Integers Int64 same_bits_eq thm
R140019:140036 AV.Integers Int64 same_bits_eq thm
R140057:140065 AV.Integers Int64 bits_shl' thm
R140057:140065 AV.Integers Int64 bits_shl' thm
R140057:140065 AV.Integers Int64 bits_shl' thm
R140094:140105 AV.Integers Int64 bits_ofwords thm
R140094:140105 AV.Integers Int64 bits_ofwords thm
R140094:140105 AV.Integers Int64 bits_ofwords thm
R140128:140130 AV.Coqlib <> zlt def
R140134:140146 AV.Integers Int zwordsize def
R140128:140130 AV.Coqlib <> zlt def
R140134:140146 AV.Integers Int zwordsize def
R140158:140169 AV.Integers Int bits_shl thm
R140158:140169 AV.Integers Int bits_shl thm
R140158:140169 AV.Integers Int bits_shl thm
R140193:140195 AV.Coqlib <> zlt def
R140200:140211 AV.Integers Int unsigned def
R140193:140195 AV.Coqlib <> zlt def
R140200:140211 AV.Integers Int unsigned def
R140234:140245 AV.Integers Int64 bits_ofwords thm
R140234:140245 AV.Integers Int64 bits_ofwords thm
R140234:140245 AV.Integers Int64 bits_ofwords thm
R140265:140272 AV.Coqlib <> zlt_true thm
R140265:140272 AV.Coqlib <> zlt_true thm
R140265:140272 AV.Coqlib <> zlt_true thm
R140300:140308 AV.Coqlib <> zlt_false thm
R140300:140308 AV.Coqlib <> zlt_false thm
R140300:140308 AV.Coqlib <> zlt_false thm
R140328:140339 AV.Integers Int64 bits_ofwords thm
R140328:140339 AV.Integers Int64 bits_ofwords thm
R140328:140339 AV.Integers Int64 bits_ofwords thm
R140361:140371 AV.Integers Int bits_or thm
R140361:140371 AV.Integers Int bits_or thm
R140361:140371 AV.Integers Int bits_or thm
R140391:140402 AV.Integers Int bits_shl thm
R140391:140402 AV.Integers Int bits_shl thm
R140391:140402 AV.Integers Int bits_shl thm
R140424:140436 AV.Integers Int bits_shru thm
R140424:140436 AV.Integers Int bits_shru thm
R140424:140436 AV.Integers Int bits_shru thm
R140472:140474 AV.Coqlib <> zlt def
R140498:140510 AV.Integers Int zwordsize def
R140478:140480 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R140481:140492 AV.Integers Int unsigned def
R140472:140474 AV.Coqlib <> zlt def
R140498:140510 AV.Integers Int zwordsize def
R140478:140480 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R140481:140492 AV.Integers Int unsigned def
R140525:140532 AV.Coqlib <> zlt_true thm
R140525:140532 AV.Coqlib <> zlt_true thm
R140525:140532 AV.Coqlib <> zlt_true thm
R140552:140559 AV.Coqlib <> zlt_true thm
R140552:140559 AV.Coqlib <> zlt_true thm
R140552:140559 AV.Coqlib <> zlt_true thm
R140581:140591 Coq.Bool.Bool <> orb_false_l thm
R140581:140591 Coq.Bool.Bool <> orb_false_l thm
R140581:140591 Coq.Bool.Bool <> orb_false_l thm
R140620:140628 AV.Coqlib <> zlt_false thm
R140620:140628 AV.Coqlib <> zlt_false thm
R140620:140628 AV.Coqlib <> zlt_false thm
R140648:140656 AV.Coqlib <> zlt_false thm
R140648:140656 AV.Coqlib <> zlt_false thm
R140648:140656 AV.Coqlib <> zlt_false thm
R140678:140688 Coq.Bool.Bool <> orb_false_r thm
R140678:140688 Coq.Bool.Bool <> orb_false_r thm
R140678:140688 Coq.Bool.Bool <> orb_false_r thm
prf 140719:140733 Int64 decompose_shl_2
R140799:140804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R140827:140831 Coq.Init.Logic <> :type_scope:x_'='_x not
R140805:140808 AV.Integers Int64 shl' def
R140826:140826 AV.Integers <> y var
R140811:140817 AV.Integers Int64 ofwords def
R140822:140823 AV.Integers <> xl var
R140819:140820 AV.Integers <> xh var
R140832:140838 AV.Integers Int64 ofwords def
R140879:140886 AV.Integers Int zero def
R140841:140847 AV.Integers Int shl def
R140853:140859 AV.Integers Int sub def
R140863:140875 AV.Integers Int iwordsize def
R140861:140861 AV.Integers <> y var
R140849:140850 AV.Integers <> xl var
R140769:140772 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R140787:140789 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R140756:140768 AV.Integers Int zwordsize def
R140773:140784 AV.Integers Int unsigned def
R140786:140786 AV.Integers <> y var
R140773:140784 AV.Integers Int unsigned def
R140786:140786 AV.Integers <> y var
R140790:140798 AV.Integers Int64 zwordsize def
R140925:140927 Coq.Init.Logic <> :type_scope:x_'='_x not
R140916:140924 AV.Integers Int64 zwordsize def
R140929:140931 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R140932:140944 AV.Integers Int zwordsize def
R140925:140927 Coq.Init.Logic <> :type_scope:x_'='_x not
R140916:140924 AV.Integers Int64 zwordsize def
R140929:140931 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R140932:140944 AV.Integers Int zwordsize def
R141011:141013 Coq.Init.Logic <> :type_scope:x_'='_x not
R140973:140984 AV.Integers Int unsigned def
R140987:140993 AV.Integers Int sub def
R140997:141009 AV.Integers Int iwordsize def
R141028:141030 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R141014:141025 AV.Integers Int unsigned def
R141031:141043 AV.Integers Int zwordsize def
R141011:141013 Coq.Init.Logic <> :type_scope:x_'='_x not
R140973:140984 AV.Integers Int unsigned def
R140987:140993 AV.Integers Int sub def
R140997:141009 AV.Integers Int iwordsize def
R141028:141030 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R141014:141025 AV.Integers Int unsigned def
R141031:141043 AV.Integers Int zwordsize def
R141058:141064 AV.Integers Int sub def
R141075:141091 AV.Integers Int unsigned_repr thm
R141075:141091 AV.Integers Int unsigned_repr thm
R141075:141091 AV.Integers Int unsigned_repr thm
R141075:141091 AV.Integers Int unsigned_repr thm
R141112:141137 AV.Integers Int unsigned_repr_wordsize thm
R141112:141137 AV.Integers Int unsigned_repr_wordsize thm
R141112:141137 AV.Integers Int unsigned_repr_wordsize thm
R141152:141171 AV.Integers Int unsigned_range_2 thm
R141152:141171 AV.Integers Int unsigned_range_2 thm
R141194:141211 AV.Integers Int64 same_bits_eq thm
R141194:141211 AV.Integers Int64 same_bits_eq thm
R141232:141240 AV.Integers Int64 bits_shl' thm
R141232:141240 AV.Integers Int64 bits_shl' thm
R141232:141240 AV.Integers Int64 bits_shl' thm
R141269:141280 AV.Integers Int64 bits_ofwords thm
R141269:141280 AV.Integers Int64 bits_ofwords thm
R141269:141280 AV.Integers Int64 bits_ofwords thm
R141303:141305 AV.Coqlib <> zlt def
R141309:141321 AV.Integers Int zwordsize def
R141303:141305 AV.Coqlib <> zlt def
R141309:141321 AV.Integers Int zwordsize def
R141333:141340 AV.Coqlib <> zlt_true thm
R141333:141340 AV.Coqlib <> zlt_true thm
R141333:141340 AV.Coqlib <> zlt_true thm
R141358:141370 AV.Integers Int bits_zero thm
R141358:141370 AV.Integers Int bits_zero thm
R141383:141394 AV.Integers Int bits_shl thm
R141383:141394 AV.Integers Int bits_shl thm
R141383:141394 AV.Integers Int bits_shl thm
R141418:141420 AV.Coqlib <> zlt def
R141425:141436 AV.Integers Int unsigned def
R141418:141420 AV.Coqlib <> zlt def
R141425:141436 AV.Integers Int unsigned def
R141453:141460 AV.Coqlib <> zlt_true thm
R141453:141460 AV.Coqlib <> zlt_true thm
R141453:141460 AV.Coqlib <> zlt_true thm
R141488:141496 AV.Coqlib <> zlt_false thm
R141488:141496 AV.Coqlib <> zlt_false thm
R141488:141496 AV.Coqlib <> zlt_false thm
R141518:141529 AV.Integers Int64 bits_ofwords thm
R141518:141529 AV.Integers Int64 bits_ofwords thm
R141518:141529 AV.Integers Int64 bits_ofwords thm
R141549:141556 AV.Coqlib <> zlt_true thm
R141549:141556 AV.Coqlib <> zlt_true thm
R141549:141556 AV.Coqlib <> zlt_true thm
prf 141596:141611 Int64 decompose_shru_1
R141669:141674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R141698:141702 Coq.Init.Logic <> :type_scope:x_'='_x not
R141675:141679 AV.Integers Int64 shru' def
R141697:141697 AV.Integers <> y var
R141682:141688 AV.Integers Int64 ofwords def
R141693:141694 AV.Integers <> xl var
R141690:141691 AV.Integers <> xh var
R141703:141709 AV.Integers Int64 ofwords def
R141738:141743 AV.Integers Int or def
R141762:141768 AV.Integers Int shl def
R141774:141780 AV.Integers Int sub def
R141796:141796 AV.Integers <> y var
R141782:141794 AV.Integers Int iwordsize def
R141770:141771 AV.Integers <> xh var
R141746:141753 AV.Integers Int shru def
R141758:141758 AV.Integers <> y var
R141755:141756 AV.Integers <> xl var
R141712:141719 AV.Integers Int shru def
R141724:141724 AV.Integers <> y var
R141721:141722 AV.Integers <> xh var
R141635:141638 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R141653:141655 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R141639:141650 AV.Integers Int unsigned def
R141652:141652 AV.Integers <> y var
R141639:141650 AV.Integers Int unsigned def
R141652:141652 AV.Integers <> y var
R141656:141668 AV.Integers Int zwordsize def
R141867:141869 Coq.Init.Logic <> :type_scope:x_'='_x not
R141829:141840 AV.Integers Int unsigned def
R141843:141849 AV.Integers Int sub def
R141851:141863 AV.Integers Int iwordsize def
R141883:141885 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R141870:141882 AV.Integers Int zwordsize def
R141886:141897 AV.Integers Int unsigned def
R141867:141869 Coq.Init.Logic <> :type_scope:x_'='_x not
R141829:141840 AV.Integers Int unsigned def
R141843:141849 AV.Integers Int sub def
R141851:141863 AV.Integers Int iwordsize def
R141883:141885 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R141870:141882 AV.Integers Int zwordsize def
R141886:141897 AV.Integers Int unsigned def
R141914:141920 AV.Integers Int sub def
R141931:141947 AV.Integers Int unsigned_repr thm
R141931:141947 AV.Integers Int unsigned_repr thm
R141931:141947 AV.Integers Int unsigned_repr thm
R141931:141947 AV.Integers Int unsigned_repr thm
R141968:141993 AV.Integers Int unsigned_repr_wordsize thm
R141968:141993 AV.Integers Int unsigned_repr_wordsize thm
R141968:141993 AV.Integers Int unsigned_repr_wordsize thm
R142007:142031 AV.Integers Int wordsize_max_unsigned thm
R142007:142031 AV.Integers Int wordsize_max_unsigned thm
R142062:142064 Coq.Init.Logic <> :type_scope:x_'='_x not
R142053:142061 AV.Integers Int64 zwordsize def
R142066:142068 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R142069:142081 AV.Integers Int zwordsize def
R142062:142064 Coq.Init.Logic <> :type_scope:x_'='_x not
R142053:142061 AV.Integers Int64 zwordsize def
R142066:142068 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R142069:142081 AV.Integers Int zwordsize def
R142108:142125 AV.Integers Int64 same_bits_eq thm
R142108:142125 AV.Integers Int64 same_bits_eq thm
R142146:142155 AV.Integers Int64 bits_shru' thm
R142146:142155 AV.Integers Int64 bits_shru' thm
R142146:142155 AV.Integers Int64 bits_shru' thm
R142184:142195 AV.Integers Int64 bits_ofwords thm
R142184:142195 AV.Integers Int64 bits_ofwords thm
R142184:142195 AV.Integers Int64 bits_ofwords thm
R142218:142220 AV.Coqlib <> zlt def
R142224:142236 AV.Integers Int zwordsize def
R142218:142220 AV.Coqlib <> zlt def
R142224:142236 AV.Integers Int zwordsize def
R142250:142257 AV.Coqlib <> zlt_true thm
R142250:142257 AV.Coqlib <> zlt_true thm
R142250:142257 AV.Coqlib <> zlt_true thm
R142279:142290 AV.Integers Int64 bits_ofwords thm
R142279:142290 AV.Integers Int64 bits_ofwords thm
R142279:142290 AV.Integers Int64 bits_ofwords thm
R142312:142322 AV.Integers Int bits_or thm
R142312:142322 AV.Integers Int bits_or thm
R142312:142322 AV.Integers Int bits_or thm
R142342:142353 AV.Integers Int bits_shl thm
R142342:142353 AV.Integers Int bits_shl thm
R142342:142353 AV.Integers Int bits_shl thm
R142375:142387 AV.Integers Int bits_shru thm
R142375:142387 AV.Integers Int bits_shru thm
R142375:142387 AV.Integers Int bits_shru thm
R142423:142425 AV.Coqlib <> zlt def
R142449:142461 AV.Integers Int zwordsize def
R142429:142431 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R142432:142443 AV.Integers Int unsigned def
R142423:142425 AV.Coqlib <> zlt def
R142449:142461 AV.Integers Int zwordsize def
R142429:142431 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R142432:142443 AV.Integers Int unsigned def
R142476:142483 AV.Coqlib <> zlt_true thm
R142476:142483 AV.Coqlib <> zlt_true thm
R142476:142483 AV.Coqlib <> zlt_true thm
R142505:142515 Coq.Bool.Bool <> orb_false_r thm
R142505:142515 Coq.Bool.Bool <> orb_false_r thm
R142505:142515 Coq.Bool.Bool <> orb_false_r thm
R142534:142542 AV.Coqlib <> zlt_false thm
R142534:142542 AV.Coqlib <> zlt_false thm
R142534:142542 AV.Coqlib <> zlt_false thm
R142564:142574 Coq.Bool.Bool <> orb_false_l thm
R142564:142574 Coq.Bool.Bool <> orb_false_l thm
R142564:142574 Coq.Bool.Bool <> orb_false_l thm
R142603:142615 AV.Integers Int bits_shru thm
R142603:142615 AV.Integers Int bits_shru thm
R142603:142615 AV.Integers Int bits_shru thm
R142639:142641 AV.Coqlib <> zlt def
R142664:142672 AV.Integers Int64 zwordsize def
R142645:142647 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R142648:142659 AV.Integers Int unsigned def
R142639:142641 AV.Coqlib <> zlt def
R142664:142672 AV.Integers Int64 zwordsize def
R142645:142647 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R142648:142659 AV.Integers Int unsigned def
R142686:142697 AV.Integers Int64 bits_ofwords thm
R142686:142697 AV.Integers Int64 bits_ofwords thm
R142686:142697 AV.Integers Int64 bits_ofwords thm
R142719:142726 AV.Coqlib <> zlt_true thm
R142719:142726 AV.Coqlib <> zlt_true thm
R142719:142726 AV.Coqlib <> zlt_true thm
R142746:142754 AV.Coqlib <> zlt_false thm
R142746:142754 AV.Coqlib <> zlt_false thm
R142746:142754 AV.Coqlib <> zlt_false thm
R142792:142800 AV.Coqlib <> zlt_false thm
R142792:142800 AV.Coqlib <> zlt_false thm
R142792:142800 AV.Coqlib <> zlt_false thm
prf 142830:142845 Int64 decompose_shru_2
R142911:142916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142940:142944 Coq.Init.Logic <> :type_scope:x_'='_x not
R142917:142921 AV.Integers Int64 shru' def
R142939:142939 AV.Integers <> y var
R142924:142930 AV.Integers Int64 ofwords def
R142935:142936 AV.Integers <> xl var
R142932:142933 AV.Integers <> xh var
R142945:142951 AV.Integers Int64 ofwords def
R142963:142970 AV.Integers Int shru def
R142976:142982 AV.Integers Int sub def
R142986:142998 AV.Integers Int iwordsize def
R142984:142984 AV.Integers <> y var
R142972:142973 AV.Integers <> xh var
R142953:142960 AV.Integers Int zero def
R142881:142884 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R142899:142901 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R142868:142880 AV.Integers Int zwordsize def
R142885:142896 AV.Integers Int unsigned def
R142898:142898 AV.Integers <> y var
R142885:142896 AV.Integers Int unsigned def
R142898:142898 AV.Integers <> y var
R142902:142910 AV.Integers Int64 zwordsize def
R143039:143041 Coq.Init.Logic <> :type_scope:x_'='_x not
R143030:143038 AV.Integers Int64 zwordsize def
R143043:143045 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R143046:143058 AV.Integers Int zwordsize def
R143039:143041 Coq.Init.Logic <> :type_scope:x_'='_x not
R143030:143038 AV.Integers Int64 zwordsize def
R143043:143045 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R143046:143058 AV.Integers Int zwordsize def
R143125:143127 Coq.Init.Logic <> :type_scope:x_'='_x not
R143087:143098 AV.Integers Int unsigned def
R143101:143107 AV.Integers Int sub def
R143111:143123 AV.Integers Int iwordsize def
R143142:143144 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R143128:143139 AV.Integers Int unsigned def
R143145:143157 AV.Integers Int zwordsize def
R143125:143127 Coq.Init.Logic <> :type_scope:x_'='_x not
R143087:143098 AV.Integers Int unsigned def
R143101:143107 AV.Integers Int sub def
R143111:143123 AV.Integers Int iwordsize def
R143142:143144 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R143128:143139 AV.Integers Int unsigned def
R143145:143157 AV.Integers Int zwordsize def
R143172:143178 AV.Integers Int sub def
R143189:143205 AV.Integers Int unsigned_repr thm
R143189:143205 AV.Integers Int unsigned_repr thm
R143189:143205 AV.Integers Int unsigned_repr thm
R143189:143205 AV.Integers Int unsigned_repr thm
R143226:143251 AV.Integers Int unsigned_repr_wordsize thm
R143226:143251 AV.Integers Int unsigned_repr_wordsize thm
R143226:143251 AV.Integers Int unsigned_repr_wordsize thm
R143266:143285 AV.Integers Int unsigned_range_2 thm
R143266:143285 AV.Integers Int unsigned_range_2 thm
R143308:143325 AV.Integers Int64 same_bits_eq thm
R143308:143325 AV.Integers Int64 same_bits_eq thm
R143346:143355 AV.Integers Int64 bits_shru' thm
R143346:143355 AV.Integers Int64 bits_shru' thm
R143346:143355 AV.Integers Int64 bits_shru' thm
R143384:143395 AV.Integers Int64 bits_ofwords thm
R143384:143395 AV.Integers Int64 bits_ofwords thm
R143384:143395 AV.Integers Int64 bits_ofwords thm
R143418:143420 AV.Coqlib <> zlt def
R143424:143436 AV.Integers Int zwordsize def
R143418:143420 AV.Coqlib <> zlt def
R143424:143436 AV.Integers Int zwordsize def
R143450:143462 AV.Integers Int bits_shru thm
R143450:143462 AV.Integers Int bits_shru thm
R143450:143462 AV.Integers Int bits_shru thm
R143498:143500 AV.Coqlib <> zlt def
R143523:143531 AV.Integers Int64 zwordsize def
R143504:143506 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R143507:143518 AV.Integers Int unsigned def
R143498:143500 AV.Coqlib <> zlt def
R143523:143531 AV.Integers Int64 zwordsize def
R143504:143506 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R143507:143518 AV.Integers Int unsigned def
R143545:143552 AV.Coqlib <> zlt_true thm
R143545:143552 AV.Coqlib <> zlt_true thm
R143545:143552 AV.Coqlib <> zlt_true thm
R143572:143583 AV.Integers Int64 bits_ofwords thm
R143572:143583 AV.Integers Int64 bits_ofwords thm
R143572:143583 AV.Integers Int64 bits_ofwords thm
R143605:143613 AV.Coqlib <> zlt_false thm
R143605:143613 AV.Coqlib <> zlt_false thm
R143605:143613 AV.Coqlib <> zlt_false thm
R143651:143659 AV.Coqlib <> zlt_false thm
R143651:143659 AV.Coqlib <> zlt_false thm
R143651:143659 AV.Coqlib <> zlt_false thm
R143687:143695 AV.Coqlib <> zlt_false thm
R143687:143695 AV.Coqlib <> zlt_false thm
R143687:143695 AV.Coqlib <> zlt_false thm
R143713:143725 AV.Integers Int bits_zero thm
R143713:143725 AV.Integers Int bits_zero thm
prf 143740:143754 Int64 decompose_shr_1
R143812:143817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143840:143844 Coq.Init.Logic <> :type_scope:x_'='_x not
R143818:143821 AV.Integers Int64 shr' def
R143839:143839 AV.Integers <> y var
R143824:143830 AV.Integers Int64 ofwords def
R143835:143836 AV.Integers <> xl var
R143832:143833 AV.Integers <> xh var
R143845:143851 AV.Integers Int64 ofwords def
R143879:143884 AV.Integers Int or def
R143903:143909 AV.Integers Int shl def
R143915:143921 AV.Integers Int sub def
R143937:143937 AV.Integers <> y var
R143923:143935 AV.Integers Int iwordsize def
R143911:143912 AV.Integers <> xh var
R143887:143894 AV.Integers Int shru def
R143899:143899 AV.Integers <> y var
R143896:143897 AV.Integers <> xl var
R143854:143860 AV.Integers Int shr def
R143865:143865 AV.Integers <> y var
R143862:143863 AV.Integers <> xh var
R143778:143781 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R143796:143798 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R143782:143793 AV.Integers Int unsigned def
R143795:143795 AV.Integers <> y var
R143782:143793 AV.Integers Int unsigned def
R143795:143795 AV.Integers <> y var
R143799:143811 AV.Integers Int zwordsize def
R144008:144010 Coq.Init.Logic <> :type_scope:x_'='_x not
R143970:143981 AV.Integers Int unsigned def
R143984:143990 AV.Integers Int sub def
R143992:144004 AV.Integers Int iwordsize def
R144024:144026 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R144011:144023 AV.Integers Int zwordsize def
R144027:144038 AV.Integers Int unsigned def
R144008:144010 Coq.Init.Logic <> :type_scope:x_'='_x not
R143970:143981 AV.Integers Int unsigned def
R143984:143990 AV.Integers Int sub def
R143992:144004 AV.Integers Int iwordsize def
R144024:144026 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R144011:144023 AV.Integers Int zwordsize def
R144027:144038 AV.Integers Int unsigned def
R144055:144061 AV.Integers Int sub def
R144072:144088 AV.Integers Int unsigned_repr thm
R144072:144088 AV.Integers Int unsigned_repr thm
R144072:144088 AV.Integers Int unsigned_repr thm
R144072:144088 AV.Integers Int unsigned_repr thm
R144109:144134 AV.Integers Int unsigned_repr_wordsize thm
R144109:144134 AV.Integers Int unsigned_repr_wordsize thm
R144109:144134 AV.Integers Int unsigned_repr_wordsize thm
R144148:144172 AV.Integers Int wordsize_max_unsigned thm
R144148:144172 AV.Integers Int wordsize_max_unsigned thm
R144203:144205 Coq.Init.Logic <> :type_scope:x_'='_x not
R144194:144202 AV.Integers Int64 zwordsize def
R144207:144209 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R144210:144222 AV.Integers Int zwordsize def
R144203:144205 Coq.Init.Logic <> :type_scope:x_'='_x not
R144194:144202 AV.Integers Int64 zwordsize def
R144207:144209 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R144210:144222 AV.Integers Int zwordsize def
R144249:144266 AV.Integers Int64 same_bits_eq thm
R144249:144266 AV.Integers Int64 same_bits_eq thm
R144287:144295 AV.Integers Int64 bits_shr' thm
R144287:144295 AV.Integers Int64 bits_shr' thm
R144287:144295 AV.Integers Int64 bits_shr' thm
R144324:144335 AV.Integers Int64 bits_ofwords thm
R144324:144335 AV.Integers Int64 bits_ofwords thm
R144324:144335 AV.Integers Int64 bits_ofwords thm
R144358:144360 AV.Coqlib <> zlt def
R144364:144376 AV.Integers Int zwordsize def
R144358:144360 AV.Coqlib <> zlt def
R144364:144376 AV.Integers Int zwordsize def
R144390:144397 AV.Coqlib <> zlt_true thm
R144390:144397 AV.Coqlib <> zlt_true thm
R144390:144397 AV.Coqlib <> zlt_true thm
R144419:144430 AV.Integers Int64 bits_ofwords thm
R144419:144430 AV.Integers Int64 bits_ofwords thm
R144419:144430 AV.Integers Int64 bits_ofwords thm
R144452:144462 AV.Integers Int bits_or thm
R144452:144462 AV.Integers Int bits_or thm
R144452:144462 AV.Integers Int bits_or thm
R144482:144493 AV.Integers Int bits_shl thm
R144482:144493 AV.Integers Int bits_shl thm
R144482:144493 AV.Integers Int bits_shl thm
R144515:144527 AV.Integers Int bits_shru thm
R144515:144527 AV.Integers Int bits_shru thm
R144515:144527 AV.Integers Int bits_shru thm
R144563:144565 AV.Coqlib <> zlt def
R144589:144601 AV.Integers Int zwordsize def
R144569:144571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R144572:144583 AV.Integers Int unsigned def
R144563:144565 AV.Coqlib <> zlt def
R144589:144601 AV.Integers Int zwordsize def
R144569:144571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R144572:144583 AV.Integers Int unsigned def
R144616:144623 AV.Coqlib <> zlt_true thm
R144616:144623 AV.Coqlib <> zlt_true thm
R144616:144623 AV.Coqlib <> zlt_true thm
R144645:144655 Coq.Bool.Bool <> orb_false_r thm
R144645:144655 Coq.Bool.Bool <> orb_false_r thm
R144645:144655 Coq.Bool.Bool <> orb_false_r thm
R144674:144682 AV.Coqlib <> zlt_false thm
R144674:144682 AV.Coqlib <> zlt_false thm
R144674:144682 AV.Coqlib <> zlt_false thm
R144704:144714 Coq.Bool.Bool <> orb_false_l thm
R144704:144714 Coq.Bool.Bool <> orb_false_l thm
R144704:144714 Coq.Bool.Bool <> orb_false_l thm
R144743:144754 AV.Integers Int bits_shr thm
R144743:144754 AV.Integers Int bits_shr thm
R144743:144754 AV.Integers Int bits_shr thm
R144778:144780 AV.Coqlib <> zlt def
R144803:144811 AV.Integers Int64 zwordsize def
R144784:144786 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R144787:144798 AV.Integers Int unsigned def
R144778:144780 AV.Coqlib <> zlt def
R144803:144811 AV.Integers Int64 zwordsize def
R144784:144786 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R144787:144798 AV.Integers Int unsigned def
R144825:144836 AV.Integers Int64 bits_ofwords thm
R144825:144836 AV.Integers Int64 bits_ofwords thm
R144825:144836 AV.Integers Int64 bits_ofwords thm
R144858:144865 AV.Coqlib <> zlt_true thm
R144858:144865 AV.Coqlib <> zlt_true thm
R144858:144865 AV.Coqlib <> zlt_true thm
R144885:144893 AV.Coqlib <> zlt_false thm
R144885:144893 AV.Coqlib <> zlt_false thm
R144885:144893 AV.Coqlib <> zlt_false thm
R144931:144939 AV.Coqlib <> zlt_false thm
R144931:144939 AV.Coqlib <> zlt_false thm
R144931:144939 AV.Coqlib <> zlt_false thm
R144959:144970 AV.Integers Int64 bits_ofwords thm
R144959:144970 AV.Integers Int64 bits_ofwords thm
R144959:144970 AV.Integers Int64 bits_ofwords thm
R144992:145000 AV.Coqlib <> zlt_false thm
R144992:145000 AV.Coqlib <> zlt_false thm
R144992:145000 AV.Coqlib <> zlt_false thm
prf 145033:145047 Int64 decompose_shr_2
R145113:145118 Coq.Init.Logic <> :type_scope:x_'->'_x not
R145141:145145 Coq.Init.Logic <> :type_scope:x_'='_x not
R145119:145122 AV.Integers Int64 shr' def
R145140:145140 AV.Integers <> y var
R145125:145131 AV.Integers Int64 ofwords def
R145136:145137 AV.Integers <> xl var
R145133:145134 AV.Integers <> xh var
R145146:145152 AV.Integers Int64 ofwords def
R145210:145216 AV.Integers Int shr def
R145222:145228 AV.Integers Int sub def
R145232:145244 AV.Integers Int iwordsize def
R145230:145230 AV.Integers <> y var
R145218:145219 AV.Integers <> xh var
R145155:145161 AV.Integers Int shr def
R145167:145173 AV.Integers Int sub def
R145189:145195 AV.Integers Int one def
R145175:145187 AV.Integers Int iwordsize def
R145163:145164 AV.Integers <> xh var
R145083:145086 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R145101:145103 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R145070:145082 AV.Integers Int zwordsize def
R145087:145098 AV.Integers Int unsigned def
R145100:145100 AV.Integers <> y var
R145087:145098 AV.Integers Int unsigned def
R145100:145100 AV.Integers <> y var
R145104:145112 AV.Integers Int64 zwordsize def
R145285:145287 Coq.Init.Logic <> :type_scope:x_'='_x not
R145276:145284 AV.Integers Int64 zwordsize def
R145289:145291 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R145292:145304 AV.Integers Int zwordsize def
R145285:145287 Coq.Init.Logic <> :type_scope:x_'='_x not
R145276:145284 AV.Integers Int64 zwordsize def
R145289:145291 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R145292:145304 AV.Integers Int zwordsize def
R145371:145373 Coq.Init.Logic <> :type_scope:x_'='_x not
R145333:145344 AV.Integers Int unsigned def
R145347:145353 AV.Integers Int sub def
R145357:145369 AV.Integers Int iwordsize def
R145388:145390 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R145374:145385 AV.Integers Int unsigned def
R145391:145403 AV.Integers Int zwordsize def
R145371:145373 Coq.Init.Logic <> :type_scope:x_'='_x not
R145333:145344 AV.Integers Int unsigned def
R145347:145353 AV.Integers Int sub def
R145357:145369 AV.Integers Int iwordsize def
R145388:145390 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R145374:145385 AV.Integers Int unsigned def
R145391:145403 AV.Integers Int zwordsize def
R145418:145424 AV.Integers Int sub def
R145435:145451 AV.Integers Int unsigned_repr thm
R145435:145451 AV.Integers Int unsigned_repr thm
R145435:145451 AV.Integers Int unsigned_repr thm
R145435:145451 AV.Integers Int unsigned_repr thm
R145472:145497 AV.Integers Int unsigned_repr_wordsize thm
R145472:145497 AV.Integers Int unsigned_repr_wordsize thm
R145472:145497 AV.Integers Int unsigned_repr_wordsize thm
R145512:145531 AV.Integers Int unsigned_range_2 thm
R145512:145531 AV.Integers Int unsigned_range_2 thm
R145554:145571 AV.Integers Int64 same_bits_eq thm
R145554:145571 AV.Integers Int64 same_bits_eq thm
R145592:145600 AV.Integers Int64 bits_shr' thm
R145592:145600 AV.Integers Int64 bits_shr' thm
R145592:145600 AV.Integers Int64 bits_shr' thm
R145629:145640 AV.Integers Int64 bits_ofwords thm
R145629:145640 AV.Integers Int64 bits_ofwords thm
R145629:145640 AV.Integers Int64 bits_ofwords thm
R145663:145665 AV.Coqlib <> zlt def
R145669:145681 AV.Integers Int zwordsize def
R145663:145665 AV.Coqlib <> zlt def
R145669:145681 AV.Integers Int zwordsize def
R145695:145706 AV.Integers Int bits_shr thm
R145695:145706 AV.Integers Int bits_shr thm
R145695:145706 AV.Integers Int bits_shr thm
R145742:145744 AV.Coqlib <> zlt def
R145767:145775 AV.Integers Int64 zwordsize def
R145748:145750 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R145751:145762 AV.Integers Int unsigned def
R145742:145744 AV.Coqlib <> zlt def
R145767:145775 AV.Integers Int64 zwordsize def
R145748:145750 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R145751:145762 AV.Integers Int unsigned def
R145789:145796 AV.Coqlib <> zlt_true thm
R145789:145796 AV.Coqlib <> zlt_true thm
R145789:145796 AV.Coqlib <> zlt_true thm
R145816:145827 AV.Integers Int64 bits_ofwords thm
R145816:145827 AV.Integers Int64 bits_ofwords thm
R145816:145827 AV.Integers Int64 bits_ofwords thm
R145849:145857 AV.Coqlib <> zlt_false thm
R145849:145857 AV.Coqlib <> zlt_false thm
R145849:145857 AV.Coqlib <> zlt_false thm
R145895:145903 AV.Coqlib <> zlt_false thm
R145895:145903 AV.Coqlib <> zlt_false thm
R145895:145903 AV.Coqlib <> zlt_false thm
R145923:145934 AV.Integers Int64 bits_ofwords thm
R145923:145934 AV.Integers Int64 bits_ofwords thm
R145923:145934 AV.Integers Int64 bits_ofwords thm
R145956:145964 AV.Coqlib <> zlt_false thm
R145956:145964 AV.Coqlib <> zlt_false thm
R145956:145964 AV.Coqlib <> zlt_false thm
R145992:146003 AV.Integers Int bits_shr thm
R145992:146003 AV.Integers Int bits_shr thm
R145992:146003 AV.Integers Int bits_shr thm
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146025:146036 AV.Integers Int unsigned def
R146039:146045 AV.Integers Int sub def
R146061:146067 AV.Integers Int one def
R146047:146059 AV.Integers Int iwordsize def
R146025:146036 AV.Integers Int unsigned def
R146039:146045 AV.Integers Int sub def
R146061:146067 AV.Integers Int one def
R146047:146059 AV.Integers Int iwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146090:146092 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146077:146089 AV.Integers Int zwordsize def
R146109:146111 AV.Coqlib <> zlt def
R146134:146142 AV.Integers Int64 zwordsize def
R146115:146117 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146118:146129 AV.Integers Int unsigned def
R146156:146167 AV.Integers Int64 bits_ofwords thm
R146109:146111 AV.Coqlib <> zlt def
R146134:146142 AV.Integers Int64 zwordsize def
R146115:146117 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146118:146129 AV.Integers Int unsigned def
R146156:146167 AV.Integers Int64 bits_ofwords thm
R146156:146167 AV.Integers Int64 bits_ofwords thm
R146156:146167 AV.Integers Int64 bits_ofwords thm
R146156:146167 AV.Integers Int64 bits_ofwords thm
R146199:146207 AV.Coqlib <> zlt_false thm
R146199:146207 AV.Coqlib <> zlt_false thm
R146199:146207 AV.Coqlib <> zlt_false thm
R146240:146242 AV.Coqlib <> zlt def
R146286:146298 AV.Integers Int zwordsize def
R146262:146265 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146283:146283 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146246:146248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146249:146261 AV.Integers Int zwordsize def
R146279:146281 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146266:146278 AV.Integers Int zwordsize def
R146240:146242 AV.Coqlib <> zlt def
R146286:146298 AV.Integers Int zwordsize def
R146262:146265 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146283:146283 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146246:146248 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146249:146261 AV.Integers Int zwordsize def
R146279:146281 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146266:146278 AV.Integers Int zwordsize def
R146329:146337 AV.Coqlib <> zlt_false thm
R146329:146337 AV.Coqlib <> zlt_false thm
R146329:146337 AV.Coqlib <> zlt_false thm
R146370:146372 AV.Coqlib <> zlt def
R146416:146428 AV.Integers Int zwordsize def
R146392:146395 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146413:146413 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146376:146378 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146379:146391 AV.Integers Int zwordsize def
R146409:146411 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146396:146408 AV.Integers Int zwordsize def
R146370:146372 AV.Coqlib <> zlt def
R146416:146428 AV.Integers Int zwordsize def
R146392:146395 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146413:146413 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146376:146378 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146379:146391 AV.Integers Int zwordsize def
R146409:146411 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R146396:146408 AV.Integers Int zwordsize def
prf 146451:146463 Int64 decompose_add
R146525:146529 Coq.Init.Logic <> :type_scope:x_'='_x not
R146490:146492 AV.Integers Int64 add def
R146511:146517 AV.Integers Int64 ofwords def
R146522:146523 AV.Integers <> yl var
R146519:146520 AV.Integers <> yh var
R146495:146501 AV.Integers Int64 ofwords def
R146506:146507 AV.Integers <> xl var
R146503:146504 AV.Integers <> xh var
R146530:146536 AV.Integers Int64 ofwords def
R146606:146612 AV.Integers Int add def
R146617:146618 AV.Integers <> yl var
R146614:146615 AV.Integers <> xl var
R146539:146545 AV.Integers Int add def
R146564:146576 AV.Integers Int add_carry def
R146584:146591 AV.Integers Int zero def
R146581:146582 AV.Integers <> yl var
R146578:146579 AV.Integers <> xl var
R146548:146554 AV.Integers Int add def
R146559:146560 AV.Integers <> yh var
R146556:146557 AV.Integers <> xh var
R146657:146667 AV.Integers Int64 ofwords_add thm
R146657:146667 AV.Integers Int64 ofwords_add thm
R146657:146667 AV.Integers Int64 ofwords_add thm
R146678:146689 AV.Integers Int64 add_unsigned thm
R146678:146689 AV.Integers Int64 add_unsigned thm
R146678:146689 AV.Integers Int64 add_unsigned thm
R146700:146711 AV.Integers Int64 eqm_samerepr thm
R146700:146711 AV.Integers Int64 eqm_samerepr thm
R146726:146737 AV.Integers Int64 ofwords_add' thm
R146726:146737 AV.Integers Int64 ofwords_add' thm
R146726:146737 AV.Integers Int64 ofwords_add' thm
R146726:146737 AV.Integers Int64 ofwords_add' thm
R146726:146737 AV.Integers Int64 ofwords_add' thm
R146749:146770 AV.Integers Int unsigned_add_carry thm
R146749:146770 AV.Integers Int unsigned_add_carry thm
R146749:146770 AV.Integers Int unsigned_add_carry thm
R146793:146805 AV.Integers Int add_carry def
R146813:146820 AV.Integers Int zero def
R146793:146805 AV.Integers Int add_carry def
R146813:146820 AV.Integers Int zero def
R146837:146848 AV.Integers Int unsigned def
R146866:146877 AV.Integers Int unsigned def
R146897:146908 AV.Integers Int unsigned def
R146926:146937 AV.Integers Int unsigned def
R146837:146848 AV.Integers Int unsigned def
R146866:146877 AV.Integers Int unsigned def
R146897:146908 AV.Integers Int unsigned def
R146926:146937 AV.Integers Int unsigned def
R146971:146975 Coq.ZArith.Zpower <> two_p def
R146953:146963 AV.Integers Int modulus def
R146953:146963 AV.Integers Int modulus def
R146971:146975 Coq.ZArith.Zpower <> two_p def
R147011:147014 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147033:147033 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147006:147008 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146995:146997 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R146998:147002 Coq.ZArith.Zpower <> two_p def
R147028:147030 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147017:147019 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147020:147024 Coq.ZArith.Zpower <> two_p def
R147067:147070 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147078:147078 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147047:147047 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147055:147058 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147050:147052 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147059:147063 Coq.ZArith.Zpower <> two_p def
R147073:147075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147011:147014 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147033:147033 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147006:147008 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R146995:146997 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R146998:147002 Coq.ZArith.Zpower <> two_p def
R147028:147030 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147017:147019 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147020:147024 Coq.ZArith.Zpower <> two_p def
R147067:147070 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147078:147078 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147047:147047 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147055:147058 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147050:147052 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147059:147063 Coq.ZArith.Zpower <> two_p def
R147073:147075 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147153:147170 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147207:147207 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147142:147144 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147101:147112 AV.Integers Int unsigned def
R147115:147121 AV.Integers Int add def
R147124:147130 AV.Integers Int add def
R147145:147149 Coq.ZArith.Zpower <> two_p def
R147178:147180 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147173:147175 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147196:147198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147181:147192 AV.Integers Int unsigned def
R147199:147203 Coq.ZArith.Zpower <> two_p def
R147293:147307 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147315:147315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147221:147221 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147281:147284 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147263:147265 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147222:147233 AV.Integers Int unsigned def
R147236:147242 AV.Integers Int add def
R147245:147251 AV.Integers Int add def
R147266:147277 AV.Integers Int unsigned def
R147285:147289 Coq.ZArith.Zpower <> two_p def
R147310:147312 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147153:147170 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147207:147207 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147142:147144 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147101:147112 AV.Integers Int unsigned def
R147115:147121 AV.Integers Int add def
R147124:147130 AV.Integers Int add def
R147145:147149 Coq.ZArith.Zpower <> two_p def
R147178:147180 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147173:147175 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147196:147198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147181:147192 AV.Integers Int unsigned def
R147199:147203 Coq.ZArith.Zpower <> two_p def
R147293:147307 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147315:147315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147221:147221 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147281:147284 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R147263:147265 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147222:147233 AV.Integers Int unsigned def
R147236:147242 AV.Integers Int add def
R147245:147251 AV.Integers Int add def
R147266:147277 AV.Integers Int unsigned def
R147285:147289 Coq.ZArith.Zpower <> two_p def
R147310:147312 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147335:147341 AV.Integers Int64 eqm_add thm
R147335:147341 AV.Integers Int64 eqm_add thm
R147353:147360 AV.Integers Int64 eqm_refl thm
R147353:147360 AV.Integers Int64 eqm_refl thm
R147369:147380 AV.Integers Int64 eqm_mul_2p32 thm
R147369:147380 AV.Integers Int64 eqm_mul_2p32 thm
R147396:147398 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147409:147409 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147435:147438 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147417:147419 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147412:147414 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147420:147431 AV.Integers Int unsigned def
R147439:147450 AV.Integers Int unsigned def
R147396:147398 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147409:147409 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147435:147438 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R147417:147419 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147412:147414 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R147420:147431 AV.Integers Int unsigned def
R147439:147450 AV.Integers Int unsigned def
R147473:147483 AV.Integers Int eqm_sub thm
R147473:147483 AV.Integers Int eqm_sub thm
R147495:147506 AV.Integers Int eqm_refl thm
R147495:147506 AV.Integers Int eqm_refl thm
R147517:147539 AV.Integers Int eqm_unsigned_repr_l thm
R147517:147539 AV.Integers Int eqm_unsigned_repr_l thm
R147548:147558 AV.Integers Int eqm_add thm
R147548:147558 AV.Integers Int eqm_add thm
R147570:147581 AV.Integers Int eqm_refl thm
R147570:147581 AV.Integers Int eqm_refl thm
R147592:147614 AV.Integers Int eqm_unsigned_repr_l thm
R147592:147614 AV.Integers Int eqm_unsigned_repr_l thm
R147623:147634 AV.Integers Int eqm_refl thm
R147623:147634 AV.Integers Int eqm_refl thm
prf 147649:147661 Int64 decompose_sub
R147723:147727 Coq.Init.Logic <> :type_scope:x_'='_x not
R147688:147690 AV.Integers Int64 sub def
R147709:147715 AV.Integers Int64 ofwords def
R147720:147721 AV.Integers <> yl var
R147717:147718 AV.Integers <> yh var
R147693:147699 AV.Integers Int64 ofwords def
R147704:147705 AV.Integers <> xl var
R147701:147702 AV.Integers <> xh var
R147728:147734 AV.Integers Int64 ofwords def
R147805:147811 AV.Integers Int sub def
R147816:147817 AV.Integers <> yl var
R147813:147814 AV.Integers <> xl var
R147737:147743 AV.Integers Int sub def
R147762:147775 AV.Integers Int sub_borrow def
R147783:147790 AV.Integers Int zero def
R147780:147781 AV.Integers <> yl var
R147777:147778 AV.Integers <> xl var
R147746:147752 AV.Integers Int sub def
R147757:147758 AV.Integers <> yh var
R147754:147755 AV.Integers <> xh var
R147856:147866 AV.Integers Int64 ofwords_add thm
R147856:147866 AV.Integers Int64 ofwords_add thm
R147856:147866 AV.Integers Int64 ofwords_add thm
R147877:147888 AV.Integers Int64 eqm_samerepr thm
R147877:147888 AV.Integers Int64 eqm_samerepr thm
R147903:147914 AV.Integers Int64 ofwords_add' thm
R147903:147914 AV.Integers Int64 ofwords_add' thm
R147903:147914 AV.Integers Int64 ofwords_add' thm
R147903:147914 AV.Integers Int64 ofwords_add' thm
R147903:147914 AV.Integers Int64 ofwords_add' thm
R147926:147948 AV.Integers Int unsigned_sub_borrow thm
R147926:147948 AV.Integers Int unsigned_sub_borrow thm
R147926:147948 AV.Integers Int unsigned_sub_borrow thm
R147971:147984 AV.Integers Int sub_borrow def
R147992:147999 AV.Integers Int zero def
R147971:147984 AV.Integers Int sub_borrow def
R147992:147999 AV.Integers Int zero def
R148016:148027 AV.Integers Int unsigned def
R148045:148056 AV.Integers Int unsigned def
R148076:148087 AV.Integers Int unsigned def
R148105:148116 AV.Integers Int unsigned def
R148016:148027 AV.Integers Int unsigned def
R148045:148056 AV.Integers Int unsigned def
R148076:148087 AV.Integers Int unsigned def
R148105:148116 AV.Integers Int unsigned def
R148150:148154 Coq.ZArith.Zpower <> two_p def
R148132:148142 AV.Integers Int modulus def
R148132:148142 AV.Integers Int modulus def
R148150:148154 Coq.ZArith.Zpower <> two_p def
R148190:148193 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148212:148212 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148185:148187 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148174:148176 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148177:148181 Coq.ZArith.Zpower <> two_p def
R148207:148209 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148196:148198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148199:148203 Coq.ZArith.Zpower <> two_p def
R148246:148249 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148257:148257 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148226:148226 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148234:148237 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148229:148231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148238:148242 Coq.ZArith.Zpower <> two_p def
R148252:148254 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148190:148193 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148212:148212 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148185:148187 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148174:148176 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148177:148181 Coq.ZArith.Zpower <> two_p def
R148207:148209 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148196:148198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148199:148203 Coq.ZArith.Zpower <> two_p def
R148246:148249 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148257:148257 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148226:148226 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148234:148237 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148229:148231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148238:148242 Coq.ZArith.Zpower <> two_p def
R148252:148254 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148332:148349 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148386:148386 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148321:148323 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148280:148291 AV.Integers Int unsigned def
R148294:148300 AV.Integers Int sub def
R148303:148309 AV.Integers Int sub def
R148324:148328 Coq.ZArith.Zpower <> two_p def
R148357:148359 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148352:148354 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148375:148377 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148360:148371 AV.Integers Int unsigned def
R148378:148382 Coq.ZArith.Zpower <> two_p def
R148472:148486 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148494:148494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148400:148400 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148460:148463 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148442:148444 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148401:148412 AV.Integers Int unsigned def
R148415:148421 AV.Integers Int sub def
R148424:148430 AV.Integers Int sub def
R148445:148456 AV.Integers Int unsigned def
R148464:148468 Coq.ZArith.Zpower <> two_p def
R148489:148491 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148332:148349 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148386:148386 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148321:148323 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148280:148291 AV.Integers Int unsigned def
R148294:148300 AV.Integers Int sub def
R148303:148309 AV.Integers Int sub def
R148324:148328 Coq.ZArith.Zpower <> two_p def
R148357:148359 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148352:148354 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148375:148377 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148360:148371 AV.Integers Int unsigned def
R148378:148382 Coq.ZArith.Zpower <> two_p def
R148472:148486 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148494:148494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148400:148400 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148460:148463 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R148442:148444 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148401:148412 AV.Integers Int unsigned def
R148415:148421 AV.Integers Int sub def
R148424:148430 AV.Integers Int sub def
R148445:148456 AV.Integers Int unsigned def
R148464:148468 Coq.ZArith.Zpower <> two_p def
R148489:148491 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148514:148520 AV.Integers Int64 eqm_add thm
R148514:148520 AV.Integers Int64 eqm_add thm
R148532:148539 AV.Integers Int64 eqm_refl thm
R148532:148539 AV.Integers Int64 eqm_refl thm
R148548:148559 AV.Integers Int64 eqm_mul_2p32 thm
R148548:148559 AV.Integers Int64 eqm_mul_2p32 thm
R148575:148577 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148588:148588 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148614:148617 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148596:148598 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148591:148593 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148599:148610 AV.Integers Int unsigned def
R148618:148629 AV.Integers Int unsigned def
R148575:148577 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148588:148588 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148614:148617 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R148596:148598 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148591:148593 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R148599:148610 AV.Integers Int unsigned def
R148618:148629 AV.Integers Int unsigned def
R148652:148662 AV.Integers Int eqm_add thm
R148652:148662 AV.Integers Int eqm_add thm
R148674:148685 AV.Integers Int eqm_refl thm
R148674:148685 AV.Integers Int eqm_refl thm
R148696:148718 AV.Integers Int eqm_unsigned_repr_l thm
R148696:148718 AV.Integers Int eqm_unsigned_repr_l thm
R148727:148737 AV.Integers Int eqm_add thm
R148727:148737 AV.Integers Int eqm_add thm
R148749:148760 AV.Integers Int eqm_refl thm
R148749:148760 AV.Integers Int eqm_refl thm
R148771:148793 AV.Integers Int eqm_unsigned_repr_l thm
R148771:148793 AV.Integers Int eqm_unsigned_repr_l thm
R148802:148813 AV.Integers Int eqm_refl thm
R148802:148813 AV.Integers Int eqm_refl thm
prf 148828:148841 Int64 decompose_sub'
R148903:148907 Coq.Init.Logic <> :type_scope:x_'='_x not
R148868:148870 AV.Integers Int64 sub def
R148889:148895 AV.Integers Int64 ofwords def
R148900:148901 AV.Integers <> yl var
R148897:148898 AV.Integers <> yh var
R148873:148879 AV.Integers Int64 ofwords def
R148884:148885 AV.Integers <> xl var
R148881:148882 AV.Integers <> xh var
R148908:148914 AV.Integers Int64 ofwords def
R149003:149009 AV.Integers Int sub def
R149014:149015 AV.Integers <> yl var
R149011:149012 AV.Integers <> xl var
R148917:148923 AV.Integers Int add def
R148952:148964 AV.Integers Int add_carry def
R148982:148988 AV.Integers Int one def
R148970:148976 AV.Integers Int not def
R148978:148979 AV.Integers <> yl var
R148966:148967 AV.Integers <> xl var
R148926:148932 AV.Integers Int add def
R148938:148944 AV.Integers Int not def
R148946:148947 AV.Integers <> yh var
R148934:148935 AV.Integers <> xh var
R149044:149056 AV.Integers Int64 decompose_sub thm
R149044:149056 AV.Integers Int64 decompose_sub thm
R149044:149056 AV.Integers Int64 decompose_sub thm
R149078:149101 AV.Integers Int sub_borrow_add_carry thm
R149078:149101 AV.Integers Int sub_borrow_add_carry thm
R149078:149101 AV.Integers Int sub_borrow_add_carry thm
R149122:149138 AV.Integers Int sub_add_not_3 thm
R149122:149138 AV.Integers Int sub_add_not_3 thm
R149122:149138 AV.Integers Int sub_add_not_3 thm
R149122:149138 AV.Integers Int sub_add_not_3 thm
R149149:149161 AV.Integers Int xor_assoc thm
R149149:149161 AV.Integers Int xor_assoc thm
R149149:149161 AV.Integers Int xor_assoc thm
R149172:149183 AV.Integers Int xor_idem thm
R149172:149183 AV.Integers Int xor_idem thm
R149172:149183 AV.Integers Int xor_idem thm
R149196:149207 AV.Integers Int xor_zero thm
R149196:149207 AV.Integers Int xor_zero thm
R149196:149207 AV.Integers Int xor_zero thm
R149226:149239 AV.Integers Int xor_zero_l thm
R149226:149239 AV.Integers Int xor_zero_l thm
R149226:149239 AV.Integers Int xor_zero_l thm
R149249:149261 AV.Integers Int add_carry def
R149276:149278 AV.Coqlib <> zlt def
R149349:149359 AV.Integers Int modulus def
R149324:149326 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149296:149298 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149281:149292 AV.Integers Int unsigned def
R149299:149310 AV.Integers Int unsigned def
R149313:149319 AV.Integers Int not def
R149327:149338 AV.Integers Int unsigned def
R149340:149346 AV.Integers Int one def
R149394:149405 AV.Integers Int mkint_eq thm
R149276:149278 AV.Coqlib <> zlt def
R149349:149359 AV.Integers Int modulus def
R149324:149326 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149296:149298 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149281:149292 AV.Integers Int unsigned def
R149299:149310 AV.Integers Int unsigned def
R149313:149319 AV.Integers Int not def
R149327:149338 AV.Integers Int unsigned def
R149340:149346 AV.Integers Int one def
R149394:149405 AV.Integers Int mkint_eq thm
R149394:149405 AV.Integers Int mkint_eq thm
def 149431:149434 Int64 mul'
R149442:149448 AV.Integers Int int rec
R149453:149455 AV.Integers Int64 int rec
R149460:149463 AV.Integers Int64 repr def
R149480:149482 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R149466:149477 AV.Integers Int unsigned def
R149479:149479 AV.Integers <> x var
R149483:149494 AV.Integers Int unsigned def
R149496:149496 AV.Integers <> y var
prf 149507:149516 Int64 mul'_mulhu
R149541:149543 Coq.Init.Logic <> :type_scope:x_'='_x not
R149533:149536 AV.Integers Int64 mul' def
R149540:149540 AV.Integers <> y var
R149538:149538 AV.Integers <> x var
R149544:149550 AV.Integers Int64 ofwords def
R149569:149575 AV.Integers Int mul def
R149579:149579 AV.Integers <> y var
R149577:149577 AV.Integers <> x var
R149553:149561 AV.Integers Int mulhu def
R149565:149565 AV.Integers <> y var
R149563:149563 AV.Integers <> x var
R149610:149620 AV.Integers Int64 ofwords_add thm
R149610:149620 AV.Integers Int64 ofwords_add thm
R149610:149620 AV.Integers Int64 ofwords_add thm
R149630:149633 AV.Integers Int64 mul' def
R149636:149644 AV.Integers Int mulhu def
R149647:149653 AV.Integers Int mul def
R149682:149684 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R149668:149679 AV.Integers Int unsigned def
R149685:149696 AV.Integers Int unsigned def
R149682:149684 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R149668:149679 AV.Integers Int unsigned def
R149685:149696 AV.Integers Int unsigned def
R149716:149718 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R149719:149729 AV.Integers Int modulus def
R149716:149718 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R149719:149729 AV.Integers Int modulus def
R149745:149749 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R149750:149760 AV.Integers Int modulus def
R149745:149749 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R149750:149760 AV.Integers Int modulus def
R149780:149783 AV.Integers Int64 repr def
R149802:149804 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149788:149790 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R149791:149801 AV.Integers Int modulus def
R149780:149783 AV.Integers Int64 repr def
R149802:149804 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R149788:149790 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R149791:149801 AV.Integers Int modulus def
R149830:149839 Coq.ZArith.BinInt Z mul_comm thm
R149830:149839 Coq.ZArith.BinInt Z mul_comm thm
R149830:149839 Coq.ZArith.BinInt Z mul_comm thm
R149848:149859 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R149848:149859 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R149868:149882 AV.Integers Int modulus_pos thm
R149868:149882 AV.Integers Int modulus_pos thm
R149893:149904 AV.Integers Int64 eqm_samerepr thm
R149893:149904 AV.Integers Int64 eqm_samerepr thm
R149913:149919 AV.Integers Int64 eqm_add thm
R149913:149919 AV.Integers Int64 eqm_add thm
R149928:149939 AV.Integers Int64 eqm_mul_2p32 thm
R149928:149939 AV.Integers Int64 eqm_mul_2p32 thm
R149968:149987 AV.Integers Int unsigned_repr_eq thm
R149968:149987 AV.Integers Int unsigned_repr_eq thm
R149968:149987 AV.Integers Int unsigned_repr_eq thm
R149996:150003 AV.Integers Int64 eqm_refl thm
R149996:150003 AV.Integers Int64 eqm_refl thm
prf 150018:150030 Int64 decompose_mul
R150092:150096 Coq.Init.Logic <> :type_scope:x_'='_x not
R150057:150059 AV.Integers Int64 mul def
R150078:150084 AV.Integers Int64 ofwords def
R150089:150090 AV.Integers <> yl var
R150086:150087 AV.Integers <> yh var
R150062:150068 AV.Integers Int64 ofwords def
R150073:150074 AV.Integers <> xl var
R150070:150071 AV.Integers <> xh var
R150097:150103 AV.Integers Int64 ofwords def
R150190:150195 AV.Integers Int64 loword def
R150198:150201 AV.Integers Int64 mul' def
R150206:150207 AV.Integers <> yl var
R150203:150204 AV.Integers <> xl var
R150106:150112 AV.Integers Int add def
R150163:150169 AV.Integers Int mul def
R150174:150175 AV.Integers <> yl var
R150171:150172 AV.Integers <> xh var
R150115:150121 AV.Integers Int add def
R150146:150152 AV.Integers Int mul def
R150157:150158 AV.Integers <> yh var
R150154:150155 AV.Integers <> xl var
R150124:150129 AV.Integers Int64 hiword def
R150132:150135 AV.Integers Int64 mul' def
R150140:150141 AV.Integers <> yl var
R150137:150138 AV.Integers <> xl var
R150242:150247 AV.Integers Int64 loword def
R150250:150253 AV.Integers Int64 mul' def
R150275:150280 AV.Integers Int64 hiword def
R150283:150286 AV.Integers Int64 mul' def
R150242:150247 AV.Integers Int64 loword def
R150250:150253 AV.Integers Int64 mul' def
R150275:150280 AV.Integers Int64 hiword def
R150283:150286 AV.Integers Int64 mul' def
R150333:150335 Coq.Init.Logic <> :type_scope:x_'='_x not
R150312:150319 AV.Integers Int64 unsigned def
R150322:150325 AV.Integers Int64 mul' def
R150362:150364 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150351:150353 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150336:150347 AV.Integers Int unsigned def
R150354:150358 Coq.ZArith.Zpower <> two_p def
R150365:150376 AV.Integers Int unsigned def
R150333:150335 Coq.Init.Logic <> :type_scope:x_'='_x not
R150312:150319 AV.Integers Int64 unsigned def
R150322:150325 AV.Integers Int64 mul' def
R150362:150364 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150351:150353 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150336:150347 AV.Integers Int unsigned def
R150354:150358 Coq.ZArith.Zpower <> two_p def
R150365:150376 AV.Integers Int unsigned def
R150399:150415 AV.Integers Int64 ofwords_recompose thm
R150418:150421 AV.Integers Int64 mul' def
R150399:150415 AV.Integers Int64 ofwords_recompose thm
R150418:150421 AV.Integers Int64 mul' def
R150399:150415 AV.Integers Int64 ofwords_recompose thm
R150418:150421 AV.Integers Int64 mul' def
R150438:150449 AV.Integers Int64 ofwords_add' thm
R150438:150449 AV.Integers Int64 ofwords_add' thm
R150474:150484 AV.Integers Int64 ofwords_add thm
R150474:150484 AV.Integers Int64 ofwords_add thm
R150474:150484 AV.Integers Int64 ofwords_add thm
R150494:150496 AV.Integers Int64 mul def
R150508:150519 AV.Integers Int64 ofwords_add' thm
R150508:150519 AV.Integers Int64 ofwords_add' thm
R150508:150519 AV.Integers Int64 ofwords_add' thm
R150508:150519 AV.Integers Int64 ofwords_add' thm
R150508:150519 AV.Integers Int64 ofwords_add' thm
R150535:150546 AV.Integers Int unsigned def
R150564:150575 AV.Integers Int unsigned def
R150595:150606 AV.Integers Int unsigned def
R150624:150635 AV.Integers Int unsigned def
R150535:150546 AV.Integers Int unsigned def
R150564:150575 AV.Integers Int unsigned def
R150595:150606 AV.Integers Int unsigned def
R150624:150635 AV.Integers Int unsigned def
R150655:150666 AV.Integers Int unsigned def
R150655:150666 AV.Integers Int unsigned def
R150689:150700 AV.Integers Int unsigned def
R150689:150700 AV.Integers Int unsigned def
R150728:150731 AV.Integers Int64 repr def
R150771:150773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150734:150734 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150759:150762 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150735:150735 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150748:150751 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150738:150740 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150743:150745 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150754:150756 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150763:150767 Coq.ZArith.Zpower <> two_p def
R150728:150731 AV.Integers Int64 repr def
R150771:150773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150734:150734 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150759:150762 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150735:150735 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150748:150751 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150738:150740 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R150743:150745 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150754:150756 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R150763:150767 Coq.ZArith.Zpower <> two_p def
R150788:150799 AV.Integers Int64 eqm_samerepr thm
R150788:150799 AV.Integers Int64 eqm_samerepr thm
R150808:150814 AV.Integers Int64 eqm_add thm
R150808:150814 AV.Integers Int64 eqm_add thm
R150826:150833 AV.Integers Int64 eqm_refl thm
R150826:150833 AV.Integers Int64 eqm_refl thm
R150844:150855 AV.Integers Int64 eqm_mul_2p32 thm
R150844:150855 AV.Integers Int64 eqm_mul_2p32 thm
R150868:150883 AV.Integers Int add_unsigned thm
R150868:150883 AV.Integers Int add_unsigned thm
R150868:150883 AV.Integers Int add_unsigned thm
R150892:150914 AV.Integers Int eqm_unsigned_repr_l thm
R150892:150914 AV.Integers Int eqm_unsigned_repr_l thm
R150923:150933 AV.Integers Int eqm_add thm
R150923:150933 AV.Integers Int eqm_add thm
R150946:150961 AV.Integers Int add_unsigned thm
R150946:150961 AV.Integers Int add_unsigned thm
R150946:150961 AV.Integers Int add_unsigned thm
R150970:150992 AV.Integers Int eqm_unsigned_repr_l thm
R150970:150992 AV.Integers Int eqm_unsigned_repr_l thm
R151001:151011 AV.Integers Int eqm_add thm
R151001:151011 AV.Integers Int eqm_add thm
R151022:151033 AV.Integers Int eqm_refl thm
R151022:151033 AV.Integers Int eqm_refl thm
R151045:151051 AV.Integers Int mul def
R151060:151082 AV.Integers Int eqm_unsigned_repr_l thm
R151060:151082 AV.Integers Int eqm_unsigned_repr_l thm
R151091:151102 AV.Integers Int eqm_refl thm
R151091:151102 AV.Integers Int eqm_refl thm
R151114:151120 AV.Integers Int mul def
R151129:151151 AV.Integers Int eqm_unsigned_repr_l thm
R151129:151151 AV.Integers Int eqm_unsigned_repr_l thm
R151160:151171 AV.Integers Int eqm_refl thm
R151160:151171 AV.Integers Int eqm_refl thm
R151190:151193 AV.Integers Int64 repr def
R151217:151219 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151196:151203 AV.Integers Int64 unsigned def
R151206:151209 AV.Integers Int64 mul' def
R151220:151220 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151238:151241 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151228:151230 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151223:151225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151233:151235 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151242:151246 Coq.ZArith.Zpower <> two_p def
R151190:151193 AV.Integers Int64 repr def
R151217:151219 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151196:151203 AV.Integers Int64 unsigned def
R151206:151209 AV.Integers Int64 mul' def
R151220:151220 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151238:151241 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151228:151230 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151223:151225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151233:151235 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151242:151246 Coq.ZArith.Zpower <> two_p def
R151300:151303 AV.Integers Int64 repr def
R151314:151316 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151309:151311 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151317:151317 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151335:151338 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151325:151327 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151320:151322 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151330:151332 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151339:151343 Coq.ZArith.Zpower <> two_p def
R151300:151303 AV.Integers Int64 repr def
R151314:151316 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151309:151311 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151317:151317 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151335:151338 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151325:151327 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151320:151322 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151330:151332 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151339:151343 Coq.ZArith.Zpower <> two_p def
R151360:151371 AV.Integers Int64 eqm_samerepr thm
R151360:151371 AV.Integers Int64 eqm_samerepr thm
R151380:151386 AV.Integers Int64 eqm_add thm
R151380:151386 AV.Integers Int64 eqm_add thm
R151398:151405 AV.Integers Int64 eqm_refl thm
R151398:151405 AV.Integers Int64 eqm_refl thm
R151417:151420 AV.Integers Int64 mul' def
R151429:151447 AV.Integers Int64 eqm_unsigned_repr_l thm
R151429:151447 AV.Integers Int64 eqm_unsigned_repr_l thm
R151456:151463 AV.Integers Int64 eqm_refl thm
R151456:151463 AV.Integers Int64 eqm_refl thm
R151482:151485 AV.Integers Int64 repr def
R151489:151492 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151533:151533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151500:151502 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151495:151497 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151503:151503 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151521:151524 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151511:151513 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151506:151508 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151516:151518 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151525:151529 Coq.ZArith.Zpower <> two_p def
R151482:151485 AV.Integers Int64 repr def
R151489:151492 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151533:151533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151500:151502 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151495:151497 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151503:151503 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151521:151524 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151511:151513 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151506:151508 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151516:151518 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151525:151529 Coq.ZArith.Zpower <> two_p def
R151548:151556 Coq.ZArith.BinInt Z add_0_l thm
R151548:151556 Coq.ZArith.BinInt Z add_0_l thm
R151548:151556 Coq.ZArith.BinInt Z add_0_l thm
R151581:151584 AV.Integers Int64 repr def
R151618:151621 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151662:151662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151594:151597 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151617:151617 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151589:151591 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151606:151608 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151598:151602 Coq.ZArith.Zpower <> two_p def
R151609:151613 Coq.ZArith.Zpower <> two_p def
R151629:151631 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151624:151626 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151632:151632 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151650:151653 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151640:151642 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151635:151637 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151645:151647 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151654:151658 Coq.ZArith.Zpower <> two_p def
R151581:151584 AV.Integers Int64 repr def
R151618:151621 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151662:151662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151594:151597 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151617:151617 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151589:151591 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151606:151608 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151598:151602 Coq.ZArith.Zpower <> two_p def
R151609:151613 Coq.ZArith.Zpower <> two_p def
R151629:151631 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151624:151626 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151632:151632 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151650:151653 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151640:151642 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R151635:151637 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151645:151647 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151654:151658 Coq.ZArith.Zpower <> two_p def
R151675:151686 AV.Integers Int64 eqm_samerepr thm
R151675:151686 AV.Integers Int64 eqm_samerepr thm
R151695:151701 AV.Integers Int64 eqm_add thm
R151695:151701 AV.Integers Int64 eqm_add thm
R151713:151720 AV.Integers Int64 eqm_refl thm
R151713:151720 AV.Integers Int64 eqm_refl thm
R151759:151765 AV.Integers Int64 modulus def
R151741:151743 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151733:151737 Coq.ZArith.Zpower <> two_p def
R151744:151748 Coq.ZArith.Zpower <> two_p def
R151741:151743 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151733:151737 Coq.ZArith.Zpower <> two_p def
R151744:151748 Coq.ZArith.Zpower <> two_p def
R151759:151765 AV.Integers Int64 modulus def
R151780:151782 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151776:151777 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R151780:151782 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R151776:151777 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 151823:151837 Int64 decompose_mul_2
R151899:151903 Coq.Init.Logic <> :type_scope:x_'='_x not
R151864:151866 AV.Integers Int64 mul def
R151885:151891 AV.Integers Int64 ofwords def
R151896:151897 AV.Integers <> yl var
R151893:151894 AV.Integers <> yh var
R151869:151875 AV.Integers Int64 ofwords def
R151880:151881 AV.Integers <> xl var
R151877:151878 AV.Integers <> xh var
R151904:151910 AV.Integers Int64 ofwords def
R151993:151999 AV.Integers Int mul def
R152004:152005 AV.Integers <> yl var
R152001:152002 AV.Integers <> xl var
R151913:151919 AV.Integers Int add def
R151966:151972 AV.Integers Int mul def
R151977:151978 AV.Integers <> yl var
R151974:151975 AV.Integers <> xh var
R151922:151928 AV.Integers Int add def
R151949:151955 AV.Integers Int mul def
R151960:151961 AV.Integers <> yh var
R151957:151958 AV.Integers <> xl var
R151931:151939 AV.Integers Int mulhu def
R151944:151945 AV.Integers <> yl var
R151941:151942 AV.Integers <> xl var
R152034:152046 AV.Integers Int64 decompose_mul thm
R152034:152046 AV.Integers Int64 decompose_mul thm
R152034:152046 AV.Integers Int64 decompose_mul thm
R152057:152066 AV.Integers Int64 mul'_mulhu thm
R152057:152066 AV.Integers Int64 mul'_mulhu thm
R152057:152066 AV.Integers Int64 mul'_mulhu thm
R152079:152088 AV.Integers Int64 hi_ofwords thm
R152091:152100 AV.Integers Int64 lo_ofwords thm
R152079:152088 AV.Integers Int64 hi_ofwords thm
R152079:152088 AV.Integers Int64 hi_ofwords thm
R152091:152100 AV.Integers Int64 lo_ofwords thm
R152091:152100 AV.Integers Int64 lo_ofwords thm
prf 152121:152133 Int64 decompose_ltu
R152195:152197 Coq.Init.Logic <> :type_scope:x_'='_x not
R152160:152162 AV.Integers Int64 ltu def
R152181:152187 AV.Integers Int64 ofwords def
R152192:152193 AV.Integers <> yl var
R152189:152190 AV.Integers <> yh var
R152165:152171 AV.Integers Int64 ofwords def
R152176:152177 AV.Integers <> xl var
R152173:152174 AV.Integers <> xh var
R152201:152206 AV.Integers Int eq def
R152211:152212 AV.Integers <> yh var
R152208:152209 AV.Integers <> xh var
R152238:152244 AV.Integers Int ltu def
R152249:152250 AV.Integers <> yh var
R152246:152247 AV.Integers <> xh var
R152219:152225 AV.Integers Int ltu def
R152230:152231 AV.Integers <> yl var
R152227:152228 AV.Integers <> xl var
R152277:152279 AV.Integers Int64 ltu def
R152292:152303 AV.Integers Int64 ofwords_add' thm
R152292:152303 AV.Integers Int64 ofwords_add' thm
R152292:152303 AV.Integers Int64 ofwords_add' thm
R152292:152303 AV.Integers Int64 ofwords_add' thm
R152292:152303 AV.Integers Int64 ofwords_add' thm
R152313:152319 AV.Integers Int ltu def
R152322:152327 AV.Integers Int eq def
R152342:152344 AV.Coqlib <> zeq def
R152365:152376 AV.Integers Int unsigned def
R152347:152358 AV.Integers Int unsigned def
R152342:152344 AV.Coqlib <> zeq def
R152365:152376 AV.Integers Int unsigned def
R152347:152358 AV.Integers Int unsigned def
R152407:152409 AV.Coqlib <> zlt def
R152430:152441 AV.Integers Int unsigned def
R152412:152423 AV.Integers Int unsigned def
R152407:152409 AV.Coqlib <> zlt def
R152430:152441 AV.Integers Int unsigned def
R152412:152423 AV.Integers Int unsigned def
R152457:152464 AV.Coqlib <> zlt_true thm
R152457:152464 AV.Coqlib <> zlt_true thm
R152482:152490 AV.Coqlib <> zlt_false thm
R152482:152490 AV.Coqlib <> zlt_false thm
R152525:152535 AV.Integers Int modulus def
R152510:152514 Coq.ZArith.Zpower <> two_p def
R152510:152514 Coq.ZArith.Zpower <> two_p def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152525:152535 AV.Integers Int modulus def
R152552:152569 AV.Integers Int unsigned_range thm
R152576:152593 AV.Integers Int unsigned_range thm
R152552:152569 AV.Integers Int unsigned_range thm
R152576:152593 AV.Integers Int unsigned_range thm
R152609:152619 AV.Integers Int modulus def
R152609:152619 AV.Integers Int modulus def
R152658:152660 AV.Coqlib <> zlt def
R152681:152692 AV.Integers Int unsigned def
R152663:152674 AV.Integers Int unsigned def
R152658:152660 AV.Coqlib <> zlt def
R152681:152692 AV.Integers Int unsigned def
R152663:152674 AV.Integers Int unsigned def
R152708:152715 AV.Coqlib <> zlt_true thm
R152708:152715 AV.Coqlib <> zlt_true thm
R152733:152741 AV.Coqlib <> zlt_false thm
R152733:152741 AV.Coqlib <> zlt_false thm
prf 152763:152775 Int64 decompose_leu
R152844:152848 Coq.Init.Logic <> :type_scope:x_'='_x not
R152802:152805 Coq.Init.Datatypes <> negb def
R152808:152810 AV.Integers Int64 ltu def
R152829:152835 AV.Integers Int64 ofwords def
R152840:152841 AV.Integers <> xl var
R152837:152838 AV.Integers <> xh var
R152813:152819 AV.Integers Int64 ofwords def
R152824:152825 AV.Integers <> yl var
R152821:152822 AV.Integers <> yh var
R152852:152857 AV.Integers Int eq def
R152862:152863 AV.Integers <> yh var
R152859:152860 AV.Integers <> xh var
R152896:152902 AV.Integers Int ltu def
R152907:152908 AV.Integers <> yh var
R152904:152905 AV.Integers <> xh var
R152870:152873 Coq.Init.Datatypes <> negb def
R152876:152882 AV.Integers Int ltu def
R152887:152888 AV.Integers <> xl var
R152884:152885 AV.Integers <> yl var
R152936:152948 AV.Integers Int64 decompose_ltu thm
R152936:152948 AV.Integers Int64 decompose_ltu thm
R152936:152948 AV.Integers Int64 decompose_ltu thm
R152959:152968 AV.Integers Int eq_sym thm
R152959:152968 AV.Integers Int eq_sym thm
R152959:152968 AV.Integers Int eq_sym thm
R152980:152985 AV.Integers Int eq def
R152998:153000 AV.Coqlib <> zeq def
R153021:153032 AV.Integers Int unsigned def
R153003:153014 AV.Integers Int unsigned def
R152998:153000 AV.Coqlib <> zeq def
R153021:153032 AV.Integers Int unsigned def
R153003:153014 AV.Integers Int unsigned def
R153057:153063 AV.Integers Int ltu def
R153076:153078 AV.Coqlib <> zlt def
R153099:153110 AV.Integers Int unsigned def
R153081:153092 AV.Integers Int unsigned def
R153076:153078 AV.Coqlib <> zlt def
R153099:153110 AV.Integers Int unsigned def
R153081:153092 AV.Integers Int unsigned def
R153128:153136 AV.Coqlib <> zlt_false thm
R153128:153136 AV.Coqlib <> zlt_false thm
R153128:153136 AV.Coqlib <> zlt_false thm
R153164:153171 AV.Coqlib <> zlt_true thm
R153164:153171 AV.Coqlib <> zlt_true thm
R153164:153171 AV.Coqlib <> zlt_true thm
prf 153201:153212 Int64 decompose_lt
R153273:153275 Coq.Init.Logic <> :type_scope:x_'='_x not
R153239:153240 AV.Integers Int64 lt def
R153259:153265 AV.Integers Int64 ofwords def
R153270:153271 AV.Integers <> yl var
R153267:153268 AV.Integers <> yh var
R153243:153249 AV.Integers Int64 ofwords def
R153254:153255 AV.Integers <> xl var
R153251:153252 AV.Integers <> xh var
R153279:153284 AV.Integers Int eq def
R153289:153290 AV.Integers <> yh var
R153286:153287 AV.Integers <> xh var
R153316:153321 AV.Integers Int lt def
R153326:153327 AV.Integers <> yh var
R153323:153324 AV.Integers <> xh var
R153297:153303 AV.Integers Int ltu def
R153308:153309 AV.Integers <> yl var
R153305:153306 AV.Integers <> xl var
R153354:153355 AV.Integers Int64 lt def
R153368:153380 AV.Integers Int64 ofwords_add'' thm
R153368:153380 AV.Integers Int64 ofwords_add'' thm
R153368:153380 AV.Integers Int64 ofwords_add'' thm
R153368:153380 AV.Integers Int64 ofwords_add'' thm
R153368:153380 AV.Integers Int64 ofwords_add'' thm
R153391:153403 AV.Integers Int eq_signed thm
R153391:153403 AV.Integers Int eq_signed thm
R153391:153403 AV.Integers Int eq_signed thm
R153418:153420 AV.Coqlib <> zeq def
R153439:153448 AV.Integers Int signed def
R153423:153432 AV.Integers Int signed def
R153418:153420 AV.Coqlib <> zeq def
R153439:153448 AV.Integers Int signed def
R153423:153432 AV.Integers Int signed def
R153476:153482 AV.Integers Int ltu def
R153495:153497 AV.Coqlib <> zlt def
R153518:153529 AV.Integers Int unsigned def
R153500:153511 AV.Integers Int unsigned def
R153495:153497 AV.Coqlib <> zlt def
R153518:153529 AV.Integers Int unsigned def
R153500:153511 AV.Integers Int unsigned def
R153545:153552 AV.Coqlib <> zlt_true thm
R153545:153552 AV.Coqlib <> zlt_true thm
R153570:153578 AV.Coqlib <> zlt_false thm
R153570:153578 AV.Coqlib <> zlt_false thm
R153613:153623 AV.Integers Int modulus def
R153598:153602 Coq.ZArith.Zpower <> two_p def
R153598:153602 Coq.ZArith.Zpower <> two_p def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153613:153623 AV.Integers Int modulus def
R153640:153657 AV.Integers Int unsigned_range thm
R153664:153681 AV.Integers Int unsigned_range thm
R153640:153657 AV.Integers Int unsigned_range thm
R153664:153681 AV.Integers Int unsigned_range thm
R153697:153707 AV.Integers Int modulus def
R153697:153707 AV.Integers Int modulus def
R153743:153748 AV.Integers Int lt def
R153761:153763 AV.Coqlib <> zlt def
R153782:153791 AV.Integers Int signed def
R153766:153775 AV.Integers Int signed def
R153761:153763 AV.Coqlib <> zlt def
R153782:153791 AV.Integers Int signed def
R153766:153775 AV.Integers Int signed def
R153807:153814 AV.Coqlib <> zlt_true thm
R153807:153814 AV.Coqlib <> zlt_true thm
R153832:153840 AV.Coqlib <> zlt_false thm
R153832:153840 AV.Coqlib <> zlt_false thm
prf 153862:153873 Int64 decompose_le
R153941:153945 Coq.Init.Logic <> :type_scope:x_'='_x not
R153900:153903 Coq.Init.Datatypes <> negb def
R153906:153907 AV.Integers Int64 lt def
R153926:153932 AV.Integers Int64 ofwords def
R153937:153938 AV.Integers <> xl var
R153934:153935 AV.Integers <> xh var
R153910:153916 AV.Integers Int64 ofwords def
R153921:153922 AV.Integers <> yl var
R153918:153919 AV.Integers <> yh var
R153949:153954 AV.Integers Int eq def
R153959:153960 AV.Integers <> yh var
R153956:153957 AV.Integers <> xh var
R153993:153998 AV.Integers Int lt def
R154003:154004 AV.Integers <> yh var
R154000:154001 AV.Integers <> xh var
R153967:153970 Coq.Init.Datatypes <> negb def
R153973:153979 AV.Integers Int ltu def
R153984:153985 AV.Integers <> xl var
R153981:153982 AV.Integers <> yl var
R154032:154043 AV.Integers Int64 decompose_lt thm
R154032:154043 AV.Integers Int64 decompose_lt thm
R154032:154043 AV.Integers Int64 decompose_lt thm
R154054:154063 AV.Integers Int eq_sym thm
R154054:154063 AV.Integers Int eq_sym thm
R154054:154063 AV.Integers Int eq_sym thm
R154076:154088 AV.Integers Int eq_signed thm
R154076:154088 AV.Integers Int eq_signed thm
R154076:154088 AV.Integers Int eq_signed thm
R154101:154103 AV.Coqlib <> zeq def
R154122:154131 AV.Integers Int signed def
R154106:154115 AV.Integers Int signed def
R154101:154103 AV.Coqlib <> zeq def
R154122:154131 AV.Integers Int signed def
R154106:154115 AV.Integers Int signed def
R154156:154161 AV.Integers Int lt def
R154174:154176 AV.Coqlib <> zlt def
R154195:154204 AV.Integers Int signed def
R154179:154188 AV.Integers Int signed def
R154174:154176 AV.Coqlib <> zlt def
R154195:154204 AV.Integers Int signed def
R154179:154188 AV.Integers Int signed def
R154222:154230 AV.Coqlib <> zlt_false thm
R154222:154230 AV.Coqlib <> zlt_false thm
R154222:154230 AV.Coqlib <> zlt_false thm
R154258:154265 AV.Coqlib <> zlt_true thm
R154258:154265 AV.Coqlib <> zlt_true thm
R154258:154265 AV.Coqlib <> zlt_true thm
prf 154356:154373 Int64 int_unsigned_range
R154389:154392 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R154407:154410 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R154393:154404 AV.Integers Int unsigned def
R154406:154406 AV.Integers <> x var
R154393:154404 AV.Integers Int unsigned def
R154406:154406 AV.Integers <> x var
R154411:154422 AV.Integers Int64 max_unsigned def
R154451:154462 AV.Integers Int64 max_unsigned def
R154472:154478 AV.Integers Int64 modulus def
R154495:154512 AV.Integers Int unsigned_range thm
R154495:154512 AV.Integers Int unsigned_range thm
R154527:154537 AV.Integers Int modulus def
R154555:154562 AV.Integers Int64 wordsize def
R154555:154562 AV.Integers Int64 wordsize def
R154594:154605 AV.Integers Int wordsize def
R154594:154605 AV.Integers Int wordsize def
R154635:154647 Coq.ZArith.Zpower <> two_power_nat def
prf 154679:154695 Int64 int_unsigned_repr
R154742:154744 Coq.Init.Logic <> :type_scope:x_'='_x not
R154710:154717 AV.Integers Int64 unsigned def
R154720:154723 AV.Integers Int64 repr def
R154726:154737 AV.Integers Int unsigned def
R154739:154739 AV.Integers <> x var
R154745:154756 AV.Integers Int unsigned def
R154758:154758 AV.Integers <> x var
R154786:154798 AV.Integers Int64 unsigned_repr thm
R154786:154798 AV.Integers Int64 unsigned_repr thm
R154786:154798 AV.Integers Int64 unsigned_repr thm
R154786:154798 AV.Integers Int64 unsigned_repr thm
R154815:154832 AV.Integers Int64 int_unsigned_range thm
R154815:154832 AV.Integers Int64 int_unsigned_range thm
prf 154847:154857 Int64 int_sub_ltu
R154895:154902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R154929:154931 Coq.Init.Logic <> :type_scope:x_'='_x not
R154903:154914 AV.Integers Int unsigned def
R154917:154923 AV.Integers Int sub def
R154927:154927 AV.Integers <> x var
R154925:154925 AV.Integers <> y var
R154932:154939 AV.Integers Int64 unsigned def
R154942:154944 AV.Integers Int64 sub def
R154971:154974 AV.Integers Int64 repr def
R154977:154988 AV.Integers Int unsigned def
R154990:154990 AV.Integers <> x var
R154947:154950 AV.Integers Int64 repr def
R154953:154964 AV.Integers Int unsigned def
R154966:154966 AV.Integers <> y var
R154889:154890 Coq.Init.Logic <> :type_scope:x_'='_x not
R154878:154884 AV.Integers Int ltu def
R154888:154888 AV.Integers <> y var
R154886:154886 AV.Integers <> x var
R154891:154894 Coq.Init.Datatypes <> true constr
R155025:155035 AV.Integers Int sub_ltu thm
R155025:155035 AV.Integers Int sub_ltu thm
R155060:155066 AV.Integers Int sub def
R155076:155078 AV.Integers Int64 sub def
R155091:155107 AV.Integers Int unsigned_repr thm
R155091:155107 AV.Integers Int unsigned_repr thm
R155091:155107 AV.Integers Int unsigned_repr thm
R155091:155107 AV.Integers Int unsigned_repr thm
R155118:155130 AV.Integers Int64 unsigned_repr thm
R155118:155130 AV.Integers Int64 unsigned_repr thm
R155118:155130 AV.Integers Int64 unsigned_repr thm
R155118:155130 AV.Integers Int64 unsigned_repr thm
R155166:155183 AV.Integers Int64 int_unsigned_range thm
R155143:155155 AV.Integers Int64 unsigned_repr thm
R155143:155155 AV.Integers Int64 unsigned_repr thm
R155166:155183 AV.Integers Int64 int_unsigned_range thm
R155143:155155 AV.Integers Int64 unsigned_repr thm
R155194:155210 AV.Integers Int64 int_unsigned_repr thm
R155194:155210 AV.Integers Int64 int_unsigned_repr thm
R155194:155210 AV.Integers Int64 int_unsigned_repr thm
R155259:155276 AV.Integers Int64 int_unsigned_range thm
R155236:155248 AV.Integers Int64 unsigned_repr thm
R155236:155248 AV.Integers Int64 unsigned_repr thm
R155259:155276 AV.Integers Int64 int_unsigned_range thm
R155236:155248 AV.Integers Int64 unsigned_repr thm
R155289:155305 AV.Integers Int64 int_unsigned_repr thm
R155289:155305 AV.Integers Int64 int_unsigned_repr thm
R155289:155305 AV.Integers Int64 int_unsigned_repr thm
R155320:155337 AV.Integers Int64 int_unsigned_range thm
R155320:155337 AV.Integers Int64 int_unsigned_range thm
R155366:155376 AV.Integers Int sub_ltu thm
R155366:155376 AV.Integers Int sub_ltu thm
R155408:155427 AV.Integers Int unsigned_range_2 thm
R155408:155427 AV.Integers Int unsigned_range_2 thm
R155458:155462 AV.Integers Int64 <> mod
R155478:155497 AV.Integers <> wordsize def
syndef 155511:155515 <> int64
R155520:155528 AV.Integers <> int rec
R155546:155553 AV.Integers <> repr def
R155555:155564 AV.Integers <> repr def
R155566:155574 AV.Integers <> repr def
