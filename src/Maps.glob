DIGEST b12fd9bbad5938d0b404ab05d5770799
FAV.Maps
R2123:2133 Coq.Classes.Equivalence <> <> lib
R2135:2142 Coq.Classes.EquivDec <> <> lib
R2160:2168 AV.Coqlib <> <> lib
modtype 2388:2391 <> TREE
ax 2406:2408 TREE elt
ax 2429:2434 TREE elt_eq
R2450:2452 AV.Maps TREE elt defax
R2456:2456 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2462:2466 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2473:2473 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2458:2460 Coq.Init.Logic <> :type_scope:x_'='_x not
R2457:2457 AV.Maps <> a var
R2461:2461 AV.Maps <> b var
R2468:2471 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2467:2467 AV.Maps <> a var
R2472:2472 AV.Maps <> b var
ax 2488:2488 TREE t
R2495:2498 Coq.Init.Logic <> :type_scope:x_'->'_x not
ax 2517:2521 TREE empty
R2542:2542 AV.Maps TREE t defax
R2544:2544 AV.Maps <> A var
ax 2559:2561 TREE get
R2585:2588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2592:2595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2596:2601 Coq.Init.Datatypes <> option ind
R2603:2603 AV.Maps <> A var
R2589:2589 AV.Maps TREE t defax
R2591:2591 AV.Maps <> A var
R2582:2584 AV.Maps TREE elt defax
ax 2618:2620 TREE set
R2644:2647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2649:2652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2656:2659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2660:2660 AV.Maps TREE t defax
R2662:2662 AV.Maps <> A var
R2653:2653 AV.Maps TREE t defax
R2655:2655 AV.Maps <> A var
R2648:2648 AV.Maps <> A var
R2641:2643 AV.Maps TREE elt defax
ax 2677:2682 TREE remove
R2706:2709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2713:2716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2717:2717 AV.Maps TREE t defax
R2719:2719 AV.Maps <> A var
R2710:2710 AV.Maps TREE t defax
R2712:2712 AV.Maps <> A var
R2703:2705 AV.Maps TREE elt defax
ax 2848:2853 TREE gempty
R2881:2883 AV.Maps TREE elt defax
R2902:2904 Coq.Init.Logic <> :type_scope:x_'='_x not
R2887:2889 AV.Maps TREE get defax
R2894:2898 AV.Maps TREE empty defax
R2900:2900 AV.Maps <> A var
R2891:2891 AV.Maps <> i var
R2905:2908 Coq.Init.Datatypes <> None constr
ax 2919:2921 TREE gss
R2949:2951 AV.Maps TREE elt defax
R2958:2958 AV.Maps <> A var
R2965:2965 AV.Maps TREE t defax
R2967:2967 AV.Maps <> A var
R2988:2990 Coq.Init.Logic <> :type_scope:x_'='_x not
R2971:2973 AV.Maps TREE get defax
R2978:2980 AV.Maps TREE set defax
R2986:2986 AV.Maps <> m var
R2984:2984 AV.Maps <> x var
R2982:2982 AV.Maps <> i var
R2975:2975 AV.Maps <> i var
R2991:2994 Coq.Init.Datatypes <> Some constr
R2996:2996 AV.Maps <> x var
ax 3007:3009 TREE gso
R3039:3041 AV.Maps TREE elt defax
R3048:3048 AV.Maps <> A var
R3055:3055 AV.Maps TREE t defax
R3057:3057 AV.Maps <> A var
R3071:3074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3092:3094 Coq.Init.Logic <> :type_scope:x_'='_x not
R3075:3077 AV.Maps TREE get defax
R3082:3084 AV.Maps TREE set defax
R3090:3090 AV.Maps <> m var
R3088:3088 AV.Maps <> x var
R3086:3086 AV.Maps <> j var
R3079:3079 AV.Maps <> i var
R3095:3097 AV.Maps TREE get defax
R3101:3101 AV.Maps <> m var
R3099:3099 AV.Maps <> i var
R3066:3069 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3065:3065 AV.Maps <> i var
R3070:3070 AV.Maps <> j var
ax 3112:3117 TREE gsspec
R3147:3149 AV.Maps TREE elt defax
R3156:3156 AV.Maps <> A var
R3163:3163 AV.Maps TREE t defax
R3165:3165 AV.Maps <> A var
R3190:3192 Coq.Init.Logic <> :type_scope:x_'='_x not
R3173:3175 AV.Maps TREE get defax
R3180:3182 AV.Maps TREE set defax
R3188:3188 AV.Maps <> m var
R3186:3186 AV.Maps <> x var
R3184:3184 AV.Maps <> j var
R3177:3177 AV.Maps <> i var
R3196:3201 AV.Maps TREE elt_eq defax
R3205:3205 AV.Maps <> j var
R3203:3203 AV.Maps <> i var
R3224:3226 AV.Maps TREE get defax
R3230:3230 AV.Maps <> m var
R3228:3228 AV.Maps <> i var
R3212:3215 Coq.Init.Datatypes <> Some constr
R3217:3217 AV.Maps <> x var
ax 3536:3538 TREE grs
R3566:3568 AV.Maps TREE elt defax
R3575:3575 AV.Maps TREE t defax
R3577:3577 AV.Maps <> A var
R3599:3601 Coq.Init.Logic <> :type_scope:x_'='_x not
R3581:3583 AV.Maps TREE get defax
R3588:3593 AV.Maps TREE remove defax
R3597:3597 AV.Maps <> m var
R3595:3595 AV.Maps <> i var
R3585:3585 AV.Maps <> i var
R3602:3605 Coq.Init.Datatypes <> None constr
ax 3616:3618 TREE gro
R3648:3650 AV.Maps TREE elt defax
R3657:3657 AV.Maps TREE t defax
R3659:3659 AV.Maps <> A var
R3673:3676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3695:3697 Coq.Init.Logic <> :type_scope:x_'='_x not
R3677:3679 AV.Maps TREE get defax
R3684:3689 AV.Maps TREE remove defax
R3693:3693 AV.Maps <> m var
R3691:3691 AV.Maps <> j var
R3681:3681 AV.Maps <> i var
R3698:3700 AV.Maps TREE get defax
R3704:3704 AV.Maps <> m var
R3702:3702 AV.Maps <> i var
R3668:3671 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3667:3667 AV.Maps <> i var
R3672:3672 AV.Maps <> j var
ax 3715:3720 TREE grspec
R3750:3752 AV.Maps TREE elt defax
R3759:3759 AV.Maps TREE t defax
R3761:3761 AV.Maps <> A var
R3787:3789 Coq.Init.Logic <> :type_scope:x_'='_x not
R3769:3771 AV.Maps TREE get defax
R3776:3781 AV.Maps TREE remove defax
R3785:3785 AV.Maps <> m var
R3783:3783 AV.Maps <> j var
R3773:3773 AV.Maps <> i var
R3793:3798 AV.Maps TREE elt_eq defax
R3802:3802 AV.Maps <> j var
R3800:3800 AV.Maps <> i var
R3819:3821 AV.Maps TREE get defax
R3825:3825 AV.Maps <> m var
R3823:3823 AV.Maps <> i var
R3809:3812 Coq.Init.Datatypes <> None constr
ax 3886:3888 TREE beq
R3909:3909 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3924:3928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3932:3935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3939:3942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3943:3946 Coq.Init.Datatypes <> bool ind
R3936:3936 AV.Maps TREE t defax
R3938:3938 AV.Maps <> A var
R3929:3929 AV.Maps TREE t defax
R3931:3931 AV.Maps <> A var
R3911:3914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3916:3919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3920:3923 Coq.Init.Datatypes <> bool ind
R3915:3915 AV.Maps <> A var
R3910:3910 AV.Maps <> A var
ax 3957:3967 TREE beq_correct
R3998:4001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4003:4006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4007:4010 Coq.Init.Datatypes <> bool ind
R4002:4002 AV.Maps <> A var
R3997:3997 AV.Maps <> A var
R4021:4021 AV.Maps TREE t defax
R4023:4023 AV.Maps <> A var
R4051:4060 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4211:4211 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4044:4046 Coq.Init.Logic <> :type_scope:x_'='_x not
R4031:4033 AV.Maps TREE beq defax
R4042:4043 AV.Maps <> t2 var
R4039:4040 AV.Maps <> t1 var
R4035:4037 AV.Maps <> eqA var
R4047:4050 Coq.Init.Datatypes <> true constr
R4072:4074 AV.Maps TREE elt defax
R4099:4101 AV.Maps TREE get defax
R4105:4106 AV.Maps <> t2 var
R4103:4103 AV.Maps <> x var
R4089:4091 AV.Maps TREE get defax
R4095:4096 AV.Maps <> t1 var
R4093:4093 AV.Maps <> x var
R4120:4123 Coq.Init.Datatypes <> None constr
R4126:4129 Coq.Init.Datatypes <> None constr
R4134:4137 Coq.Init.Logic <> True ind
R4146:4149 Coq.Init.Datatypes <> Some constr
R4155:4158 Coq.Init.Datatypes <> Some constr
R4175:4177 Coq.Init.Logic <> :type_scope:x_'='_x not
R4166:4168 AV.Maps <> eqA var
R4178:4181 Coq.Init.Datatypes <> true constr
R4198:4202 Coq.Init.Logic <> False ind
ax 4279:4281 TREE map
R4308:4308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4322:4326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4330:4333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4334:4334 AV.Maps TREE t defax
R4336:4336 AV.Maps <> B var
R4327:4327 AV.Maps TREE t defax
R4329:4329 AV.Maps <> A var
R4312:4315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4317:4320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4321:4321 AV.Maps <> B var
R4316:4316 AV.Maps <> A var
R4309:4311 AV.Maps TREE elt defax
ax 4347:4350 TREE gmap
R4383:4386 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4388:4391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4392:4392 AV.Maps <> B var
R4387:4387 AV.Maps <> A var
R4380:4382 AV.Maps TREE elt defax
R4399:4401 AV.Maps TREE elt defax
R4408:4408 AV.Maps TREE t defax
R4410:4410 AV.Maps <> A var
R4433:4435 Coq.Init.Logic <> :type_scope:x_'='_x not
R4418:4420 AV.Maps TREE get defax
R4425:4427 AV.Maps TREE map defax
R4431:4431 AV.Maps <> m var
R4429:4429 AV.Maps <> f var
R4422:4422 AV.Maps <> i var
R4436:4445 AV.Coqlib <> option_map def
R4454:4456 AV.Maps TREE get defax
R4460:4460 AV.Maps <> m var
R4458:4458 AV.Maps <> i var
R4448:4448 AV.Maps <> f var
R4450:4450 AV.Maps <> i var
ax 4555:4558 TREE map1
R4585:4585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4592:4596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4600:4603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4604:4604 AV.Maps TREE t defax
R4606:4606 AV.Maps <> B var
R4597:4597 AV.Maps TREE t defax
R4599:4599 AV.Maps <> A var
R4587:4590 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4591:4591 AV.Maps <> B var
R4586:4586 AV.Maps <> A var
ax 4617:4621 TREE gmap1
R4652:4655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4656:4656 AV.Maps <> B var
R4651:4651 AV.Maps <> A var
R4663:4665 AV.Maps TREE elt defax
R4672:4672 AV.Maps TREE t defax
R4674:4674 AV.Maps <> A var
R4698:4700 Coq.Init.Logic <> :type_scope:x_'='_x not
R4682:4684 AV.Maps TREE get defax
R4689:4692 AV.Maps TREE map1 defax
R4696:4696 AV.Maps <> m var
R4694:4694 AV.Maps <> f var
R4686:4686 AV.Maps <> i var
R4701:4710 AV.Coqlib <> option_map def
R4715:4717 AV.Maps TREE get defax
R4721:4721 AV.Maps <> m var
R4719:4719 AV.Maps <> i var
R4712:4712 AV.Maps <> f var
ax 4802:4808 TREE combine
R4837:4837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4870:4874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4878:4881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4885:4888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4889:4889 AV.Maps TREE t defax
R4891:4891 AV.Maps <> C var
R4882:4882 AV.Maps TREE t defax
R4884:4884 AV.Maps <> B var
R4875:4875 AV.Maps TREE t defax
R4877:4877 AV.Maps <> A var
R4846:4849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4858:4861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4862:4867 Coq.Init.Datatypes <> option ind
R4869:4869 AV.Maps <> C var
R4850:4855 Coq.Init.Datatypes <> option ind
R4857:4857 AV.Maps <> B var
R4838:4843 Coq.Init.Datatypes <> option ind
R4845:4845 AV.Maps <> A var
ax 4902:4909 TREE gcombine
R4949:4952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4961:4964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4965:4970 Coq.Init.Datatypes <> option ind
R4972:4972 AV.Maps <> C var
R4953:4958 Coq.Init.Datatypes <> option ind
R4960:4960 AV.Maps <> B var
R4941:4946 Coq.Init.Datatypes <> option ind
R4948:4948 AV.Maps <> A var
R4998:5005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5018:5018 AV.Maps TREE t defax
R5020:5020 AV.Maps <> A var
R5028:5028 AV.Maps TREE t defax
R5030:5030 AV.Maps <> B var
R5037:5039 AV.Maps TREE elt defax
R5070:5072 Coq.Init.Logic <> :type_scope:x_'='_x not
R5047:5049 AV.Maps TREE get defax
R5054:5060 AV.Maps TREE combine defax
R5067:5068 AV.Maps <> m2 var
R5064:5065 AV.Maps <> m1 var
R5062:5062 AV.Maps <> f var
R5051:5051 AV.Maps <> i var
R5073:5073 AV.Maps <> f var
R5087:5089 AV.Maps TREE get defax
R5093:5094 AV.Maps <> m2 var
R5091:5091 AV.Maps <> i var
R5076:5078 AV.Maps TREE get defax
R5082:5083 AV.Maps <> m1 var
R5080:5080 AV.Maps <> i var
R4991:4993 Coq.Init.Logic <> :type_scope:x_'='_x not
R4980:4980 AV.Maps <> f var
R4987:4990 Coq.Init.Datatypes <> None constr
R4982:4985 Coq.Init.Datatypes <> None constr
R4994:4997 Coq.Init.Datatypes <> None constr
ax 5156:5163 TREE elements
R5191:5194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5195:5198 Coq.Init.Datatypes <> list ind
R5204:5206 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5201:5203 AV.Maps TREE elt defax
R5207:5207 AV.Maps <> A var
R5188:5188 AV.Maps TREE t defax
R5190:5190 AV.Maps <> A var
ax 5219:5234 TREE elements_correct
R5262:5262 AV.Maps TREE t defax
R5264:5264 AV.Maps <> A var
R5271:5273 AV.Maps TREE elt defax
R5280:5280 AV.Maps <> A var
R5304:5307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5308:5309 Coq.Lists.List <> In def
R5319:5326 AV.Maps TREE elements defax
R5328:5328 AV.Maps <> m var
R5311:5311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5313:5314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5316:5316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5312:5312 AV.Maps <> i var
R5315:5315 AV.Maps <> v var
R5295:5297 Coq.Init.Logic <> :type_scope:x_'='_x not
R5288:5290 AV.Maps TREE get defax
R5294:5294 AV.Maps <> m var
R5292:5292 AV.Maps <> i var
R5298:5301 Coq.Init.Datatypes <> Some constr
R5303:5303 AV.Maps <> v var
ax 5340:5356 TREE elements_complete
R5384:5384 AV.Maps TREE t defax
R5386:5386 AV.Maps <> A var
R5393:5395 AV.Maps TREE elt defax
R5402:5402 AV.Maps <> A var
R5432:5435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5443:5445 Coq.Init.Logic <> :type_scope:x_'='_x not
R5436:5438 AV.Maps TREE get defax
R5442:5442 AV.Maps <> m var
R5440:5440 AV.Maps <> i var
R5446:5449 Coq.Init.Datatypes <> Some constr
R5451:5451 AV.Maps <> v var
R5410:5411 Coq.Lists.List <> In def
R5421:5428 AV.Maps TREE elements defax
R5430:5430 AV.Maps <> m var
R5413:5413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5415:5416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5418:5418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5414:5414 AV.Maps <> i var
R5417:5417 AV.Maps <> v var
ax 5462:5482 TREE elements_keys_norepet
R5510:5510 AV.Maps TREE t defax
R5512:5512 AV.Maps <> A var
R5520:5531 AV.Coqlib <> list_norepet ind
R5534:5541 Coq.Lists.List <> map def
R5557:5564 AV.Maps TREE elements defax
R5566:5566 AV.Maps <> m var
R5545:5547 Coq.Init.Datatypes <> fst def
R5553:5553 AV.Maps <> A var
R5549:5551 AV.Maps TREE elt defax
ax 5579:5598 TREE elements_extensional
R5628:5628 AV.Maps TREE t defax
R5630:5630 AV.Maps <> A var
R5638:5638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5666:5674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5685:5687 Coq.Init.Logic <> :type_scope:x_'='_x not
R5675:5682 AV.Maps TREE elements defax
R5684:5684 AV.Maps <> m var
R5688:5695 AV.Maps TREE elements defax
R5697:5697 AV.Maps <> n var
R5656:5658 Coq.Init.Logic <> :type_scope:x_'='_x not
R5649:5651 AV.Maps TREE get defax
R5655:5655 AV.Maps <> m var
R5653:5653 AV.Maps <> i var
R5659:5661 AV.Maps TREE get defax
R5665:5665 AV.Maps <> n var
R5663:5663 AV.Maps <> i var
ax 5708:5722 TREE elements_remove
R5754:5754 AV.Maps TREE t defax
R5756:5756 AV.Maps <> A var
R5780:5787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5788:5794 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5800:5801 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5832:5835 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5812:5814 Coq.Init.Logic <> :type_scope:x_'='_x not
R5802:5809 AV.Maps TREE elements defax
R5811:5811 AV.Maps <> m var
R5817:5820 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5815:5816 AV.Maps <> l1 var
R5826:5829 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5821:5821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5823:5823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5825:5825 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5822:5822 AV.Maps <> i var
R5824:5824 AV.Maps <> v var
R5830:5831 AV.Maps <> l2 var
R5857:5859 Coq.Init.Logic <> :type_scope:x_'='_x not
R5836:5843 AV.Maps TREE elements defax
R5846:5851 AV.Maps TREE remove defax
R5855:5855 AV.Maps <> m var
R5853:5853 AV.Maps <> i var
R5862:5865 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5860:5861 AV.Maps <> l1 var
R5866:5867 AV.Maps <> l2 var
R5771:5773 Coq.Init.Logic <> :type_scope:x_'='_x not
R5764:5766 AV.Maps TREE get defax
R5770:5770 AV.Maps <> m var
R5768:5768 AV.Maps <> i var
R5774:5777 Coq.Init.Datatypes <> Some constr
R5779:5779 AV.Maps <> v var
ax 5940:5943 TREE fold
R5970:5970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5989:5993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5997:6000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6002:6005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6006:6006 AV.Maps <> B var
R6001:6001 AV.Maps <> B var
R5994:5994 AV.Maps TREE t defax
R5996:5996 AV.Maps <> A var
R5972:5975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5979:5982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5984:5987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5988:5988 AV.Maps <> B var
R5983:5983 AV.Maps <> A var
R5976:5978 AV.Maps TREE elt defax
R5971:5971 AV.Maps <> B var
ax 6017:6025 TREE fold_spec
R6056:6059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6063:6066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6068:6071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6072:6072 AV.Maps <> B var
R6067:6067 AV.Maps <> A var
R6060:6062 AV.Maps TREE elt defax
R6055:6055 AV.Maps <> B var
R6079:6079 AV.Maps <> B var
R6086:6086 AV.Maps TREE t defax
R6088:6088 AV.Maps <> A var
R6106:6112 Coq.Init.Logic <> :type_scope:x_'='_x not
R6096:6099 AV.Maps TREE fold defax
R6105:6105 AV.Maps <> v var
R6103:6103 AV.Maps <> m var
R6101:6101 AV.Maps <> f var
R6113:6126 Coq.Lists.List <> fold_left def
R6174:6174 AV.Maps <> v var
R6162:6169 AV.Maps TREE elements defax
R6171:6171 AV.Maps <> m var
R6140:6140 AV.Maps <> f var
R6153:6155 Coq.Init.Datatypes <> snd def
R6157:6157 AV.Maps <> p var
R6145:6147 Coq.Init.Datatypes <> fst def
R6149:6149 AV.Maps <> p var
R6142:6142 AV.Maps <> a var
ax 6268:6272 TREE fold1
R6299:6299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6311:6315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6319:6322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6324:6327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6328:6328 AV.Maps <> B var
R6323:6323 AV.Maps <> B var
R6316:6316 AV.Maps TREE t defax
R6318:6318 AV.Maps <> A var
R6301:6304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6306:6309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6310:6310 AV.Maps <> B var
R6305:6305 AV.Maps <> A var
R6300:6300 AV.Maps <> B var
ax 6339:6348 TREE fold1_spec
R6379:6382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6384:6387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6388:6388 AV.Maps <> B var
R6383:6383 AV.Maps <> A var
R6378:6378 AV.Maps <> B var
R6395:6395 AV.Maps <> B var
R6402:6402 AV.Maps TREE t defax
R6404:6404 AV.Maps <> A var
R6423:6429 Coq.Init.Logic <> :type_scope:x_'='_x not
R6412:6416 AV.Maps TREE fold1 defax
R6422:6422 AV.Maps <> v var
R6420:6420 AV.Maps <> m var
R6418:6418 AV.Maps <> f var
R6430:6443 Coq.Lists.List <> fold_left def
R6483:6483 AV.Maps <> v var
R6471:6478 AV.Maps TREE elements defax
R6480:6480 AV.Maps <> m var
R6457:6457 AV.Maps <> f var
R6462:6464 Coq.Init.Datatypes <> snd def
R6466:6466 AV.Maps <> p var
R6459:6459 AV.Maps <> a var
R6490:6493 AV.Maps TREE <> modtype
modtype 6551:6553 <> MAP
ax 6568:6570 MAP elt
ax 6591:6596 MAP elt_eq
R6612:6614 AV.Maps MAP elt defax
R6618:6618 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6624:6628 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6635:6635 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6620:6622 Coq.Init.Logic <> :type_scope:x_'='_x not
R6619:6619 AV.Maps <> a var
R6623:6623 AV.Maps <> b var
R6630:6633 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6629:6629 AV.Maps <> a var
R6634:6634 AV.Maps <> b var
ax 6650:6650 MAP t
R6657:6660 Coq.Init.Logic <> :type_scope:x_'->'_x not
ax 6679:6682 MAP init
R6704:6707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6708:6708 AV.Maps MAP t defax
R6710:6710 AV.Maps <> A var
R6703:6703 AV.Maps <> A var
ax 6725:6727 MAP get
R6751:6754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6758:6761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6762:6762 AV.Maps <> A var
R6755:6755 AV.Maps MAP t defax
R6757:6757 AV.Maps <> A var
R6748:6750 AV.Maps MAP elt defax
ax 6777:6779 MAP set
R6803:6806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6808:6811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6815:6818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6819:6819 AV.Maps MAP t defax
R6821:6821 AV.Maps <> A var
R6812:6812 AV.Maps MAP t defax
R6814:6814 AV.Maps <> A var
R6807:6807 AV.Maps <> A var
R6800:6802 AV.Maps MAP elt defax
ax 6832:6833 MAP gi
R6861:6863 AV.Maps MAP elt defax
R6870:6870 AV.Maps <> A var
R6888:6890 Coq.Init.Logic <> :type_scope:x_'='_x not
R6874:6876 AV.Maps MAP get defax
R6881:6884 AV.Maps MAP init defax
R6886:6886 AV.Maps <> x var
R6878:6878 AV.Maps <> i var
R6891:6891 AV.Maps <> x var
ax 6902:6904 MAP gss
R6932:6934 AV.Maps MAP elt defax
R6941:6941 AV.Maps <> A var
R6948:6948 AV.Maps MAP t defax
R6950:6950 AV.Maps <> A var
R6971:6973 Coq.Init.Logic <> :type_scope:x_'='_x not
R6954:6956 AV.Maps MAP get defax
R6961:6963 AV.Maps MAP set defax
R6969:6969 AV.Maps <> m var
R6967:6967 AV.Maps <> x var
R6965:6965 AV.Maps <> i var
R6958:6958 AV.Maps <> i var
R6974:6974 AV.Maps <> x var
ax 6985:6987 MAP gso
R7017:7019 AV.Maps MAP elt defax
R7026:7026 AV.Maps <> A var
R7033:7033 AV.Maps MAP t defax
R7035:7035 AV.Maps <> A var
R7049:7052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7070:7072 Coq.Init.Logic <> :type_scope:x_'='_x not
R7053:7055 AV.Maps MAP get defax
R7060:7062 AV.Maps MAP set defax
R7068:7068 AV.Maps <> m var
R7066:7066 AV.Maps <> x var
R7064:7064 AV.Maps <> j var
R7057:7057 AV.Maps <> i var
R7073:7075 AV.Maps MAP get defax
R7079:7079 AV.Maps <> m var
R7077:7077 AV.Maps <> i var
R7044:7047 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7043:7043 AV.Maps <> i var
R7048:7048 AV.Maps <> j var
ax 7090:7095 MAP gsspec
R7125:7127 AV.Maps MAP elt defax
R7134:7134 AV.Maps <> A var
R7141:7141 AV.Maps MAP t defax
R7143:7143 AV.Maps <> A var
R7168:7170 Coq.Init.Logic <> :type_scope:x_'='_x not
R7151:7153 AV.Maps MAP get defax
R7158:7160 AV.Maps MAP set defax
R7166:7166 AV.Maps <> m var
R7164:7164 AV.Maps <> x var
R7162:7162 AV.Maps <> j var
R7155:7155 AV.Maps <> i var
R7174:7179 AV.Maps MAP elt_eq defax
R7183:7183 AV.Maps <> j var
R7181:7181 AV.Maps <> i var
R7197:7199 AV.Maps MAP get defax
R7203:7203 AV.Maps <> m var
R7201:7201 AV.Maps <> i var
R7190:7190 AV.Maps <> x var
ax 7214:7220 MAP gsident
R7250:7252 AV.Maps MAP elt defax
R7259:7259 AV.Maps MAP t defax
R7261:7261 AV.Maps <> A var
R7290:7292 Coq.Init.Logic <> :type_scope:x_'='_x not
R7265:7267 AV.Maps MAP get defax
R7272:7274 AV.Maps MAP set defax
R7288:7288 AV.Maps <> m var
R7279:7281 AV.Maps MAP get defax
R7285:7285 AV.Maps <> m var
R7283:7283 AV.Maps <> i var
R7276:7276 AV.Maps <> i var
R7269:7269 AV.Maps <> j var
R7293:7295 AV.Maps MAP get defax
R7299:7299 AV.Maps <> m var
R7297:7297 AV.Maps <> j var
ax 7314:7316 MAP map
R7339:7339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7346:7350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7354:7357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7358:7358 AV.Maps MAP t defax
R7360:7360 AV.Maps <> B var
R7351:7351 AV.Maps MAP t defax
R7353:7353 AV.Maps <> A var
R7341:7344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7345:7345 AV.Maps <> B var
R7340:7340 AV.Maps <> A var
ax 7371:7374 MAP gmap
R7405:7408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7409:7409 AV.Maps <> B var
R7404:7404 AV.Maps <> A var
R7416:7418 AV.Maps MAP elt defax
R7425:7425 AV.Maps MAP t defax
R7427:7427 AV.Maps <> A var
R7450:7452 Coq.Init.Logic <> :type_scope:x_'='_x not
R7435:7437 AV.Maps MAP get defax
R7442:7444 AV.Maps MAP map defax
R7448:7448 AV.Maps <> m var
R7446:7446 AV.Maps <> f var
R7439:7439 AV.Maps <> i var
R7453:7453 AV.Maps <> f var
R7455:7457 AV.Maps MAP get defax
R7461:7461 AV.Maps <> m var
R7459:7459 AV.Maps <> i var
R7469:7471 AV.Maps MAP <> modtype
R7549:7552 AV.Maps TREE <> mod
mod 7540:7544 <> PTree
def 7568:7570 PTree elt
R7575:7582 Coq.Numbers.BinNums <> positive ind
def 7598:7603 PTree elt_eq
R7608:7610 AV.Coqlib <> peq def
ind 7626:7629 PTree tree
constr 7658:7661 PTree Leaf
constr 7678:7681 PTree Node
R7665:7668 AV.Maps <> tree ind
R7670:7670 AV.Maps <> A var
R7691:7694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7703:7706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7713:7716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7717:7720 AV.Maps <> tree ind
R7722:7722 AV.Maps <> A var
R7707:7710 AV.Maps <> tree ind
R7712:7712 AV.Maps <> A var
R7695:7700 Coq.Init.Datatypes <> option ind
R7702:7702 AV.Maps <> A var
R7685:7688 AV.Maps <> tree ind
R7690:7690 AV.Maps <> A var
R7738:7741 AV.Maps PTree Leaf constr
R7738:7741 AV.Maps PTree Leaf constr
R7760:7763 AV.Maps PTree Node constr
R7760:7763 AV.Maps PTree Node constr
def 7779:7786 PTree tree_ind
R7805:7808 AV.Maps PTree tree ind
def 7835:7835 PTree t
R7840:7843 AV.Maps PTree tree ind
def 7860:7864 PTree empty
R7888:7888 AV.Maps PTree t def
R7890:7890 AV.Maps <> A var
R7881:7884 AV.Maps PTree Leaf constr
def 7906:7908 PTree get
R7926:7933 Coq.Numbers.BinNums <> positive ind
R7941:7941 AV.Maps PTree t def
R7943:7943 AV.Maps <> A var
R7959:7964 Coq.Init.Datatypes <> option ind
R7966:7966 AV.Maps <> A var
R7981:7981 AV.Maps <> m var
R7994:7997 AV.Maps PTree Leaf constr
R8002:8005 Coq.Init.Datatypes <> None constr
R8013:8016 AV.Maps PTree Node constr
R8041:8041 AV.Maps <> i var
R8058:8059 Coq.Numbers.BinNums <> xH constr
R8076:8077 Coq.Numbers.BinNums <> xO constr
R8085:8087 AV.Maps <> get def
R8104:8105 Coq.Numbers.BinNums <> xI constr
R8113:8115 AV.Maps <> get def
def 8155:8157 PTree set
R8175:8182 Coq.Numbers.BinNums <> positive ind
R8190:8190 AV.Maps <> A var
R8198:8198 AV.Maps PTree t def
R8200:8200 AV.Maps <> A var
R8216:8216 AV.Maps PTree t def
R8218:8218 AV.Maps <> A var
R8233:8233 AV.Maps <> m var
R8246:8249 AV.Maps PTree Leaf constr
R8268:8268 AV.Maps <> i var
R8285:8286 Coq.Numbers.BinNums <> xH constr
R8291:8294 AV.Maps PTree Node constr
R8310:8313 AV.Maps PTree Leaf constr
R8302:8305 Coq.Init.Datatypes <> Some constr
R8307:8307 AV.Maps <> v var
R8296:8299 AV.Maps PTree Leaf constr
R8325:8326 Coq.Numbers.BinNums <> xO constr
R8334:8337 AV.Maps PTree Node constr
R8360:8363 AV.Maps PTree Leaf constr
R8355:8358 Coq.Init.Datatypes <> None constr
R8340:8342 AV.Maps <> set def
R8349:8352 AV.Maps PTree Leaf constr
R8347:8347 AV.Maps <> v var
R8375:8376 Coq.Numbers.BinNums <> xI constr
R8384:8387 AV.Maps PTree Node constr
R8400:8402 AV.Maps <> set def
R8409:8412 AV.Maps PTree Leaf constr
R8407:8407 AV.Maps <> v var
R8394:8397 Coq.Init.Datatypes <> None constr
R8389:8392 AV.Maps PTree Leaf constr
R8433:8436 AV.Maps PTree Node constr
R8461:8461 AV.Maps <> i var
R8478:8479 Coq.Numbers.BinNums <> xH constr
R8484:8487 AV.Maps PTree Node constr
R8492:8495 Coq.Init.Datatypes <> Some constr
R8497:8497 AV.Maps <> v var
R8512:8513 Coq.Numbers.BinNums <> xO constr
R8521:8524 AV.Maps PTree Node constr
R8527:8529 AV.Maps <> set def
R8534:8534 AV.Maps <> v var
R8553:8554 Coq.Numbers.BinNums <> xI constr
R8562:8565 AV.Maps PTree Node constr
R8572:8574 AV.Maps <> set def
R8579:8579 AV.Maps <> v var
def 8617:8622 PTree remove
R8640:8647 Coq.Numbers.BinNums <> positive ind
R8655:8655 AV.Maps PTree t def
R8657:8657 AV.Maps <> A var
R8673:8673 AV.Maps PTree t def
R8675:8675 AV.Maps <> A var
R8690:8690 AV.Maps <> i var
R8703:8704 Coq.Numbers.BinNums <> xH constr
R8723:8723 AV.Maps <> m var
R8740:8743 AV.Maps PTree Leaf constr
R8748:8751 AV.Maps PTree Leaf constr
R8763:8766 AV.Maps PTree Node constr
R8768:8771 AV.Maps PTree Leaf constr
R8775:8778 AV.Maps PTree Leaf constr
R8783:8786 AV.Maps PTree Leaf constr
R8798:8801 AV.Maps PTree Node constr
R8812:8815 AV.Maps PTree Node constr
R8819:8822 Coq.Init.Datatypes <> None constr
R8844:8845 Coq.Numbers.BinNums <> xO constr
R8867:8867 AV.Maps <> m var
R8884:8887 AV.Maps PTree Leaf constr
R8892:8895 AV.Maps PTree Leaf constr
R8907:8910 AV.Maps PTree Node constr
R8914:8917 Coq.Init.Datatypes <> None constr
R8919:8922 AV.Maps PTree Leaf constr
R8945:8950 AV.Maps <> remove def
R8976:8979 AV.Maps PTree Leaf constr
R8984:8987 AV.Maps PTree Leaf constr
R9009:9012 AV.Maps PTree Node constr
R9022:9025 AV.Maps PTree Leaf constr
R9017:9020 Coq.Init.Datatypes <> None constr
R9053:9056 AV.Maps PTree Node constr
R9067:9070 AV.Maps PTree Node constr
R9073:9078 AV.Maps <> remove def
R9108:9109 Coq.Numbers.BinNums <> xI constr
R9131:9131 AV.Maps <> m var
R9148:9151 AV.Maps PTree Leaf constr
R9156:9159 AV.Maps PTree Leaf constr
R9171:9174 AV.Maps PTree Node constr
R9176:9179 AV.Maps PTree Leaf constr
R9181:9184 Coq.Init.Datatypes <> None constr
R9209:9214 AV.Maps <> remove def
R9240:9243 AV.Maps PTree Leaf constr
R9248:9251 AV.Maps PTree Leaf constr
R9273:9276 AV.Maps PTree Node constr
R9283:9286 Coq.Init.Datatypes <> None constr
R9278:9281 AV.Maps PTree Leaf constr
R9317:9320 AV.Maps PTree Node constr
R9331:9334 AV.Maps PTree Node constr
R9341:9346 AV.Maps <> remove def
prf 9386:9391 PTree gempty
R9419:9426 Coq.Numbers.BinNums <> positive ind
R9445:9447 Coq.Init.Logic <> :type_scope:x_'='_x not
R9430:9432 AV.Maps PTree get def
R9437:9441 AV.Maps PTree empty def
R9443:9443 AV.Maps <> A var
R9434:9434 AV.Maps <> i var
R9448:9451 Coq.Init.Datatypes <> None constr
prf 9511:9513 PTree gss
R9541:9548 Coq.Numbers.BinNums <> positive ind
R9555:9555 AV.Maps <> A var
R9562:9562 AV.Maps PTree t def
R9564:9564 AV.Maps <> A var
R9585:9587 Coq.Init.Logic <> :type_scope:x_'='_x not
R9568:9570 AV.Maps PTree get def
R9575:9577 AV.Maps PTree set def
R9583:9583 AV.Maps <> m var
R9581:9581 AV.Maps <> x var
R9579:9579 AV.Maps <> i var
R9572:9572 AV.Maps <> i var
R9588:9591 Coq.Init.Datatypes <> Some constr
R9593:9593 AV.Maps <> x var
prf 9665:9669 PTree gleaf
R9696:9703 Coq.Numbers.BinNums <> positive ind
R9725:9727 Coq.Init.Logic <> :type_scope:x_'='_x not
R9707:9709 AV.Maps PTree get def
R9721:9721 AV.Maps PTree t def
R9723:9723 AV.Maps <> A var
R9714:9717 AV.Maps PTree Leaf constr
R9711:9711 AV.Maps <> i var
R9728:9731 Coq.Init.Datatypes <> None constr
R9751:9756 AV.Maps PTree gempty thm
R9751:9756 AV.Maps PTree gempty thm
prf 9775:9777 PTree gso
R9807:9814 Coq.Numbers.BinNums <> positive ind
R9821:9821 AV.Maps <> A var
R9828:9828 AV.Maps PTree t def
R9830:9830 AV.Maps <> A var
R9844:9847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9865:9867 Coq.Init.Logic <> :type_scope:x_'='_x not
R9848:9850 AV.Maps PTree get def
R9855:9857 AV.Maps PTree set def
R9863:9863 AV.Maps <> m var
R9861:9861 AV.Maps <> x var
R9859:9859 AV.Maps <> j var
R9852:9852 AV.Maps <> i var
R9868:9870 AV.Maps PTree get def
R9874:9874 AV.Maps <> m var
R9872:9872 AV.Maps <> i var
R9839:9842 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9838:9838 AV.Maps <> i var
R9843:9843 AV.Maps <> j var
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
R9965:9969 AV.Maps PTree gleaf thm
prf 10028:10033 PTree gsspec
R10063:10070 Coq.Numbers.BinNums <> positive ind
R10077:10077 AV.Maps <> A var
R10084:10084 AV.Maps PTree t def
R10086:10086 AV.Maps <> A var
R10111:10113 Coq.Init.Logic <> :type_scope:x_'='_x not
R10094:10096 AV.Maps PTree get def
R10101:10103 AV.Maps PTree set def
R10109:10109 AV.Maps <> m var
R10107:10107 AV.Maps <> x var
R10105:10105 AV.Maps <> j var
R10098:10098 AV.Maps <> i var
R10117:10119 AV.Coqlib <> peq def
R10123:10123 AV.Maps <> j var
R10121:10121 AV.Maps <> i var
R10142:10144 AV.Maps PTree get def
R10148:10148 AV.Maps <> m var
R10146:10146 AV.Maps <> i var
R10130:10133 Coq.Init.Datatypes <> Some constr
R10135:10135 AV.Maps <> x var
R10186:10188 AV.Coqlib <> peq def
R10215:10217 AV.Maps PTree gss thm
R10227:10229 AV.Maps PTree gso thm
R10186:10188 AV.Coqlib <> peq def
R10215:10217 AV.Maps PTree gss thm
R10227:10229 AV.Maps PTree gso thm
prf 10258:10264 PTree gsident
R10292:10299 Coq.Numbers.BinNums <> positive ind
R10306:10306 AV.Maps PTree t def
R10308:10308 AV.Maps <> A var
R10315:10315 AV.Maps <> A var
R10339:10342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10352:10354 Coq.Init.Logic <> :type_scope:x_'='_x not
R10343:10345 AV.Maps PTree set def
R10351:10351 AV.Maps <> m var
R10349:10349 AV.Maps <> v var
R10347:10347 AV.Maps <> i var
R10355:10355 AV.Maps <> m var
R10330:10332 Coq.Init.Logic <> :type_scope:x_'='_x not
R10323:10325 AV.Maps PTree get def
R10329:10329 AV.Maps <> m var
R10327:10327 AV.Maps <> i var
R10333:10336 Coq.Init.Datatypes <> Some constr
R10338:10338 AV.Maps <> v var
prf 10535:10538 PTree set2
R10566:10568 AV.Maps PTree elt def
R10575:10575 AV.Maps PTree t def
R10577:10577 AV.Maps <> A var
R10588:10588 AV.Maps <> A var
R10617:10619 Coq.Init.Logic <> :type_scope:x_'='_x not
R10596:10598 AV.Maps PTree set def
R10606:10608 AV.Maps PTree set def
R10615:10615 AV.Maps <> m var
R10612:10613 AV.Maps <> v1 var
R10610:10610 AV.Maps <> i var
R10602:10603 AV.Maps <> v2 var
R10600:10600 AV.Maps <> i var
R10620:10622 AV.Maps PTree set def
R10629:10629 AV.Maps <> m var
R10626:10627 AV.Maps <> v2 var
R10624:10624 AV.Maps <> i var
prf 10726:10730 PTree rleaf
R10757:10764 Coq.Numbers.BinNums <> positive ind
R10789:10791 Coq.Init.Logic <> :type_scope:x_'='_x not
R10768:10773 AV.Maps PTree remove def
R10785:10785 AV.Maps PTree t def
R10787:10787 AV.Maps <> A var
R10778:10781 AV.Maps PTree Leaf constr
R10775:10775 AV.Maps <> i var
R10792:10795 AV.Maps PTree Leaf constr
prf 10848:10850 PTree grs
R10878:10885 Coq.Numbers.BinNums <> positive ind
R10892:10892 AV.Maps PTree t def
R10894:10894 AV.Maps <> A var
R10916:10918 Coq.Init.Logic <> :type_scope:x_'='_x not
R10898:10900 AV.Maps PTree get def
R10905:10910 AV.Maps PTree remove def
R10914:10914 AV.Maps <> m var
R10912:10912 AV.Maps <> i var
R10902:10902 AV.Maps <> i var
R10919:10922 Coq.Init.Datatypes <> None constr
R11069:11073 AV.Maps PTree rleaf thm
R11069:11073 AV.Maps PTree rleaf thm
R11069:11073 AV.Maps PTree rleaf thm
R11130:11132 Coq.Init.Logic <> :type_scope:x_'='_x not
R11098:11100 AV.Maps PTree get def
R11105:11110 AV.Maps PTree remove def
R11115:11118 AV.Maps PTree Node constr
R11133:11136 Coq.Init.Datatypes <> None constr
R11130:11132 Coq.Init.Logic <> :type_scope:x_'='_x not
R11098:11100 AV.Maps PTree get def
R11105:11110 AV.Maps PTree remove def
R11115:11118 AV.Maps PTree Node constr
R11133:11136 Coq.Init.Datatypes <> None constr
R11158:11163 AV.Maps PTree remove def
R11168:11171 AV.Maps PTree Node constr
R11158:11163 AV.Maps PTree remove def
R11168:11171 AV.Maps PTree Node constr
R11327:11331 AV.Maps PTree rleaf thm
R11327:11331 AV.Maps PTree rleaf thm
R11327:11331 AV.Maps PTree rleaf thm
R11388:11390 Coq.Init.Logic <> :type_scope:x_'='_x not
R11356:11358 AV.Maps PTree get def
R11363:11368 AV.Maps PTree remove def
R11373:11376 AV.Maps PTree Node constr
R11391:11394 Coq.Init.Datatypes <> None constr
R11388:11390 Coq.Init.Logic <> :type_scope:x_'='_x not
R11356:11358 AV.Maps PTree get def
R11363:11368 AV.Maps PTree remove def
R11373:11376 AV.Maps PTree Node constr
R11391:11394 Coq.Init.Datatypes <> None constr
R11416:11421 AV.Maps PTree remove def
R11426:11429 AV.Maps PTree Node constr
R11416:11421 AV.Maps PTree remove def
R11426:11429 AV.Maps PTree Node constr
prf 11559:11561 PTree gro
R11591:11598 Coq.Numbers.BinNums <> positive ind
R11605:11605 AV.Maps PTree t def
R11607:11607 AV.Maps <> A var
R11621:11624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11643:11645 Coq.Init.Logic <> :type_scope:x_'='_x not
R11625:11627 AV.Maps PTree get def
R11632:11637 AV.Maps PTree remove def
R11641:11641 AV.Maps <> m var
R11639:11639 AV.Maps <> j var
R11629:11629 AV.Maps <> i var
R11646:11648 AV.Maps PTree get def
R11652:11652 AV.Maps <> m var
R11650:11650 AV.Maps <> i var
R11616:11619 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11615:11615 AV.Maps <> i var
R11620:11620 AV.Maps <> j var
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11810:11814 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11734:11738 AV.Maps PTree rleaf thm
R11743:11744 Coq.Numbers.BinNums <> xI constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11772:11776 AV.Maps PTree rleaf thm
R11781:11782 Coq.Numbers.BinNums <> xO constr
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11810:11814 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11949:11953 AV.Maps PTree rleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R11988:11992 AV.Maps PTree gleaf thm
R12051:12053 Coq.Init.Logic <> :type_scope:x_'='_x not
R12016:12018 AV.Maps PTree get def
R12023:12028 AV.Maps PTree remove def
R12033:12036 AV.Maps PTree Node constr
R12054:12056 AV.Maps PTree get def
R12061:12064 AV.Maps PTree Node constr
R12101:12106 AV.Maps PTree remove def
R12111:12114 AV.Maps PTree Node constr
R12144:12148 AV.Maps PTree gleaf thm
R12051:12053 Coq.Init.Logic <> :type_scope:x_'='_x not
R12016:12018 AV.Maps PTree get def
R12023:12028 AV.Maps PTree remove def
R12033:12036 AV.Maps PTree Node constr
R12054:12056 AV.Maps PTree get def
R12061:12064 AV.Maps PTree Node constr
R12101:12106 AV.Maps PTree remove def
R12111:12114 AV.Maps PTree Node constr
R12144:12148 AV.Maps PTree gleaf thm
R12144:12148 AV.Maps PTree gleaf thm
R12144:12148 AV.Maps PTree gleaf thm
R12211:12216 AV.Maps PTree remove def
R12221:12224 AV.Maps PTree Node constr
R12262:12266 AV.Maps PTree gleaf thm
R12211:12216 AV.Maps PTree remove def
R12221:12224 AV.Maps PTree Node constr
R12262:12266 AV.Maps PTree gleaf thm
R12262:12266 AV.Maps PTree gleaf thm
R12262:12266 AV.Maps PTree gleaf thm
R12303:12308 AV.Maps PTree remove def
R12313:12316 AV.Maps PTree Node constr
R12353:12357 AV.Maps PTree gleaf thm
R12303:12308 AV.Maps PTree remove def
R12313:12316 AV.Maps PTree Node constr
R12353:12357 AV.Maps PTree gleaf thm
R12353:12357 AV.Maps PTree gleaf thm
R12353:12357 AV.Maps PTree gleaf thm
R12425:12427 Coq.Init.Logic <> :type_scope:x_'='_x not
R12389:12391 AV.Maps PTree get def
R12396:12401 AV.Maps PTree remove def
R12406:12409 AV.Maps PTree Node constr
R12428:12430 AV.Maps PTree get def
R12435:12438 AV.Maps PTree Node constr
R12476:12481 AV.Maps PTree remove def
R12486:12489 AV.Maps PTree Node constr
R12520:12524 AV.Maps PTree gleaf thm
R12425:12427 Coq.Init.Logic <> :type_scope:x_'='_x not
R12389:12391 AV.Maps PTree get def
R12396:12401 AV.Maps PTree remove def
R12406:12409 AV.Maps PTree Node constr
R12428:12430 AV.Maps PTree get def
R12435:12438 AV.Maps PTree Node constr
R12476:12481 AV.Maps PTree remove def
R12486:12489 AV.Maps PTree Node constr
R12520:12524 AV.Maps PTree gleaf thm
R12520:12524 AV.Maps PTree gleaf thm
R12520:12524 AV.Maps PTree gleaf thm
R12587:12592 AV.Maps PTree remove def
R12597:12600 AV.Maps PTree Node constr
R12637:12641 AV.Maps PTree gleaf thm
R12587:12592 AV.Maps PTree remove def
R12597:12600 AV.Maps PTree Node constr
R12637:12641 AV.Maps PTree gleaf thm
R12637:12641 AV.Maps PTree gleaf thm
R12678:12683 AV.Maps PTree remove def
R12688:12691 AV.Maps PTree Node constr
R12729:12733 AV.Maps PTree gleaf thm
R12678:12683 AV.Maps PTree remove def
R12688:12691 AV.Maps PTree Node constr
R12729:12733 AV.Maps PTree gleaf thm
R12729:12733 AV.Maps PTree gleaf thm
prf 12773:12778 PTree grspec
R12808:12810 AV.Maps PTree elt def
R12817:12817 AV.Maps PTree t def
R12819:12819 AV.Maps <> A var
R12845:12847 Coq.Init.Logic <> :type_scope:x_'='_x not
R12827:12829 AV.Maps PTree get def
R12834:12839 AV.Maps PTree remove def
R12843:12843 AV.Maps <> m var
R12841:12841 AV.Maps <> j var
R12831:12831 AV.Maps <> i var
R12851:12856 AV.Maps PTree elt_eq def
R12860:12860 AV.Maps <> j var
R12858:12858 AV.Maps <> i var
R12877:12879 AV.Maps PTree get def
R12883:12883 AV.Maps <> m var
R12881:12881 AV.Maps <> i var
R12867:12870 Coq.Init.Datatypes <> None constr
R12917:12922 AV.Maps PTree elt_eq def
R12917:12922 AV.Maps PTree elt_eq def
R12945:12947 AV.Maps PTree grs thm
R12945:12947 AV.Maps PTree grs thm
R12956:12958 AV.Maps PTree gro thm
R12956:12958 AV.Maps PTree gro thm
sec 12985:13000 PTree BOOLEAN_EQUALITY
var 13017:13017 PTree.BOOLEAN_EQUALITY A
var 13039:13042 PTree.BOOLEAN_EQUALITY beqA
R13046:13049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13051:13054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13055:13058 Coq.Init.Datatypes <> bool ind
R13050:13050 AV.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13045:13045 AV.Maps <> PTree.BOOLEAN_EQUALITY.A var
def 13075:13080 PTree bempty
R13086:13086 AV.Maps PTree t def
R13088:13088 AV.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13093:13096 Coq.Init.Datatypes <> bool ind
R13113:13113 AV.Maps <> m var
R13128:13131 AV.Maps PTree Leaf constr
R13136:13139 Coq.Init.Datatypes <> true constr
R13149:13152 AV.Maps PTree Node constr
R13156:13159 Coq.Init.Datatypes <> None constr
R13174:13177 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13166:13171 AV.Maps <> bempty def
R13178:13183 AV.Maps <> bempty def
R13195:13198 AV.Maps PTree Node constr
R13203:13206 Coq.Init.Datatypes <> Some constr
R13216:13220 Coq.Init.Datatypes <> false constr
def 13247:13249 PTree beq
R13259:13259 AV.Maps PTree t def
R13261:13261 AV.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13278:13281 Coq.Init.Datatypes <> bool ind
R13302:13303 AV.Maps <> m2 var
R13298:13299 AV.Maps <> m1 var
R13318:13321 AV.Maps PTree Leaf constr
R13329:13334 AV.Maps PTree bempty def
R13336:13337 AV.Maps <> m2 var
R13350:13353 AV.Maps PTree Leaf constr
R13358:13363 AV.Maps PTree bempty def
R13365:13366 AV.Maps <> m1 var
R13376:13379 AV.Maps PTree Node constr
R13391:13394 AV.Maps PTree Node constr
R13572:13575 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13549:13562 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13448:13451 Coq.Init.Datatypes <> None constr
R13454:13457 Coq.Init.Datatypes <> None constr
R13462:13465 Coq.Init.Datatypes <> true constr
R13479:13482 Coq.Init.Datatypes <> Some constr
R13488:13491 Coq.Init.Datatypes <> Some constr
R13499:13502 AV.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R13530:13534 Coq.Init.Datatypes <> false constr
R13563:13565 AV.Maps <> beq def
R13576:13578 AV.Maps <> beq def
prf 13608:13621 PTree bempty_correct
R13655:13660 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13685:13685 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13648:13650 Coq.Init.Logic <> :type_scope:x_'='_x not
R13640:13645 AV.Maps PTree bempty def
R13647:13647 AV.Maps <> m var
R13651:13654 Coq.Init.Datatypes <> true constr
R13678:13680 Coq.Init.Logic <> :type_scope:x_'='_x not
R13671:13673 AV.Maps PTree get def
R13677:13677 AV.Maps <> m var
R13675:13675 AV.Maps <> x var
R13681:13684 Coq.Init.Datatypes <> None constr
R13752:13756 AV.Maps PTree gleaf thm
R13752:13756 AV.Maps PTree gleaf thm
R13836:13837 Coq.Numbers.BinNums <> xH constr
R13836:13837 Coq.Numbers.BinNums <> xH constr
R13876:13884 Coq.Init.Datatypes <> andb_prop thm
R13876:13884 Coq.Init.Datatypes <> andb_prop thm
R13977:13991 Coq.Init.Datatypes <> andb_true_intro thm
R13977:13991 Coq.Init.Datatypes <> andb_true_intro thm
R14037:14038 Coq.Numbers.BinNums <> xO constr
R14037:14038 Coq.Numbers.BinNums <> xO constr
R14081:14082 Coq.Numbers.BinNums <> xI constr
R14081:14082 Coq.Numbers.BinNums <> xI constr
prf 14109:14119 PTree beq_correct
R14164:14175 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14338:14338 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14157:14159 Coq.Init.Logic <> :type_scope:x_'='_x not
R14148:14150 AV.Maps PTree beq def
R14155:14156 AV.Maps <> m2 var
R14152:14153 AV.Maps <> m1 var
R14160:14163 Coq.Init.Datatypes <> true constr
R14187:14189 AV.Maps PTree elt def
R14216:14218 AV.Maps PTree get def
R14222:14223 AV.Maps <> m2 var
R14220:14220 AV.Maps <> x var
R14206:14208 AV.Maps PTree get def
R14212:14213 AV.Maps <> m1 var
R14210:14210 AV.Maps <> x var
R14239:14242 Coq.Init.Datatypes <> None constr
R14245:14248 Coq.Init.Datatypes <> None constr
R14253:14256 Coq.Init.Logic <> True ind
R14267:14270 Coq.Init.Datatypes <> Some constr
R14276:14279 Coq.Init.Datatypes <> Some constr
R14297:14299 Coq.Init.Logic <> :type_scope:x_'='_x not
R14287:14290 AV.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R14300:14303 Coq.Init.Datatypes <> true constr
R14322:14326 Coq.Init.Logic <> False ind
R14401:14414 AV.Maps PTree bempty_correct thm
R14401:14414 AV.Maps PTree bempty_correct thm
R14401:14414 AV.Maps PTree bempty_correct thm
R14446:14450 AV.Maps PTree gleaf thm
R14446:14450 AV.Maps PTree gleaf thm
R14446:14450 AV.Maps PTree gleaf thm
R14502:14506 AV.Maps PTree gleaf thm
R14502:14506 AV.Maps PTree gleaf thm
R14502:14506 AV.Maps PTree gleaf thm
R14519:14521 AV.Maps PTree get def
R14519:14521 AV.Maps PTree get def
R14571:14573 AV.Maps PTree beq def
R14584:14597 AV.Maps PTree bempty_correct thm
R14584:14597 AV.Maps PTree bempty_correct thm
R14584:14597 AV.Maps PTree bempty_correct thm
R14642:14646 AV.Maps PTree gleaf thm
R14642:14646 AV.Maps PTree gleaf thm
R14642:14646 AV.Maps PTree gleaf thm
R14689:14693 AV.Maps PTree gleaf thm
R14689:14693 AV.Maps PTree gleaf thm
R14689:14693 AV.Maps PTree gleaf thm
R14706:14708 AV.Maps PTree get def
R14713:14716 AV.Maps PTree Node constr
R14706:14708 AV.Maps PTree get def
R14713:14716 AV.Maps PTree Node constr
R14790:14798 Coq.Init.Datatypes <> andb_prop thm
R14790:14798 Coq.Init.Datatypes <> andb_prop thm
R14818:14826 Coq.Init.Datatypes <> andb_prop thm
R14818:14826 Coq.Init.Datatypes <> andb_prop thm
R15011:15025 Coq.Init.Datatypes <> andb_true_intro thm
R15011:15025 Coq.Init.Datatypes <> andb_true_intro thm
R15041:15055 Coq.Init.Datatypes <> andb_true_intro thm
R15041:15055 Coq.Init.Datatypes <> andb_true_intro thm
R15089:15090 Coq.Numbers.BinNums <> xH constr
R15089:15090 Coq.Numbers.BinNums <> xH constr
R15175:15176 Coq.Numbers.BinNums <> xO constr
R15175:15176 Coq.Numbers.BinNums <> xO constr
R15225:15226 Coq.Numbers.BinNums <> xI constr
R15225:15226 Coq.Numbers.BinNums <> xI constr
R15249:15264 AV.Maps PTree.BOOLEAN_EQUALITY <> sec
def 15279:15289 PTree prev_append
R15297:15304 Coq.Numbers.BinNums <> positive ind
R15320:15327 Coq.Numbers.BinNums <> positive ind
R15342:15342 AV.Maps <> i var
R15357:15358 Coq.Numbers.BinNums <> xH constr
R15363:15363 AV.Maps <> j var
R15373:15374 Coq.Numbers.BinNums <> xI constr
R15382:15392 AV.Maps <> prev_append def
R15398:15399 Coq.Numbers.BinNums <> xI constr
R15401:15401 AV.Maps <> j var
R15412:15413 Coq.Numbers.BinNums <> xO constr
R15421:15431 AV.Maps <> prev_append def
R15437:15438 Coq.Numbers.BinNums <> xO constr
R15440:15440 AV.Maps <> j var
def 15466:15469 PTree prev
R15475:15482 Coq.Numbers.BinNums <> positive ind
R15487:15494 Coq.Numbers.BinNums <> positive ind
R15503:15513 AV.Maps PTree prev_append def
R15517:15518 Coq.Numbers.BinNums <> xH constr
R15515:15515 AV.Maps <> i var
prf 15530:15545 PTree prev_append_prev
R15578:15580 Coq.Init.Logic <> :type_scope:x_'='_x not
R15556:15559 AV.Maps PTree prev def
R15562:15572 AV.Maps PTree prev_append def
R15576:15576 AV.Maps <> j var
R15574:15574 AV.Maps <> i var
R15581:15591 AV.Maps PTree prev_append def
R15595:15595 AV.Maps <> i var
R15593:15593 AV.Maps <> j var
R15628:15631 AV.Maps PTree prev def
prf 15791:15805 PTree prev_involutive
R15828:15830 Coq.Init.Logic <> :type_scope:x_'='_x not
R15815:15818 AV.Maps PTree prev def
R15821:15824 AV.Maps PTree prev def
R15826:15826 AV.Maps <> i var
R15831:15831 AV.Maps <> i var
R15843:15858 AV.Maps PTree prev_append_prev thm
R15862:15863 Coq.Numbers.BinNums <> xH constr
prf 15876:15890 PTree prev_append_inj
R15939:15942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15944:15946 Coq.Init.Logic <> :type_scope:x_'='_x not
R15943:15943 AV.Maps <> j var
R15947:15948 AV.Maps <> j' var
R15920:15922 Coq.Init.Logic <> :type_scope:x_'='_x not
R15905:15915 AV.Maps PTree prev_append def
R15919:15919 AV.Maps <> j var
R15917:15917 AV.Maps <> i var
R15923:15933 AV.Maps PTree prev_append def
R15937:15938 AV.Maps <> j' var
R15935:15935 AV.Maps <> i var
def 16091:16094 PTree xmap
R16122:16125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16127:16130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16131:16131 AV.Maps <> B var
R16126:16126 AV.Maps <> A var
R16114:16121 Coq.Numbers.BinNums <> positive ind
R16139:16139 AV.Maps PTree t def
R16141:16141 AV.Maps <> A var
R16149:16156 Coq.Numbers.BinNums <> positive ind
R16185:16185 AV.Maps PTree t def
R16187:16187 AV.Maps <> B var
R16204:16204 AV.Maps <> m var
R16219:16222 AV.Maps PTree Leaf constr
R16227:16230 AV.Maps PTree Leaf constr
R16240:16243 AV.Maps PTree Node constr
R16254:16257 AV.Maps PTree Node constr
R16396:16399 AV.Maps <> xmap def
R16406:16407 Coq.Numbers.BinNums <> xI constr
R16409:16409 AV.Maps <> i var
R16401:16401 AV.Maps <> f var
R16318:16321 Coq.Init.Datatypes <> None constr
R16326:16329 Coq.Init.Datatypes <> None constr
R16333:16336 Coq.Init.Datatypes <> Some constr
R16343:16346 Coq.Init.Datatypes <> Some constr
R16349:16349 AV.Maps <> f var
R16352:16355 AV.Maps PTree prev def
R16357:16357 AV.Maps <> i var
R16260:16263 AV.Maps <> xmap def
R16270:16271 Coq.Numbers.BinNums <> xO constr
R16273:16273 AV.Maps <> i var
R16265:16265 AV.Maps <> f var
def 16438:16440 PTree map
R16468:16471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16473:16476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16477:16477 AV.Maps <> B var
R16472:16472 AV.Maps <> A var
R16460:16467 Coq.Numbers.BinNums <> positive ind
R16485:16488 AV.Maps PTree xmap def
R16494:16495 Coq.Numbers.BinNums <> xH constr
R16492:16492 AV.Maps <> m var
R16490:16490 AV.Maps <> f var
prf 16509:16513 PTree xgmap
R16553:16556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16558:16561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16562:16562 AV.Maps <> B var
R16557:16557 AV.Maps <> A var
R16545:16552 Coq.Numbers.BinNums <> positive ind
R16572:16579 Coq.Numbers.BinNums <> positive ind
R16586:16586 AV.Maps PTree t def
R16588:16588 AV.Maps <> A var
R16616:16618 Coq.Init.Logic <> :type_scope:x_'='_x not
R16598:16600 AV.Maps PTree get def
R16605:16608 AV.Maps PTree xmap def
R16614:16614 AV.Maps <> j var
R16612:16612 AV.Maps <> m var
R16610:16610 AV.Maps <> f var
R16602:16602 AV.Maps <> i var
R16619:16628 AV.Coqlib <> option_map def
R16660:16662 AV.Maps PTree get def
R16666:16666 AV.Maps <> m var
R16664:16664 AV.Maps <> i var
R16631:16631 AV.Maps <> f var
R16634:16637 AV.Maps PTree prev def
R16640:16650 AV.Maps PTree prev_append def
R16654:16654 AV.Maps <> j var
R16652:16652 AV.Maps <> i var
prf 16753:16756 PTree gmap
R16794:16797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16799:16802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16803:16803 AV.Maps <> B var
R16798:16798 AV.Maps <> A var
R16786:16793 Coq.Numbers.BinNums <> positive ind
R16810:16817 Coq.Numbers.BinNums <> positive ind
R16824:16824 AV.Maps PTree t def
R16826:16826 AV.Maps <> A var
R16849:16851 Coq.Init.Logic <> :type_scope:x_'='_x not
R16834:16836 AV.Maps PTree get def
R16841:16843 AV.Maps PTree map def
R16847:16847 AV.Maps <> m var
R16845:16845 AV.Maps <> f var
R16838:16838 AV.Maps <> i var
R16852:16861 AV.Coqlib <> option_map def
R16870:16872 AV.Maps PTree get def
R16876:16876 AV.Maps <> m var
R16874:16874 AV.Maps <> i var
R16864:16864 AV.Maps <> f var
R16866:16866 AV.Maps <> i var
R16922:16924 AV.Maps PTree map def
R16939:16943 AV.Maps PTree xgmap thm
R16939:16943 AV.Maps PTree xgmap thm
R16939:16943 AV.Maps PTree xgmap thm
R16969:16983 AV.Maps PTree prev_involutive thm
R16969:16983 AV.Maps PTree prev_involutive thm
def 17008:17011 PTree map1
R17030:17033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17034:17034 AV.Maps <> B var
R17029:17029 AV.Maps <> A var
R17041:17041 AV.Maps PTree t def
R17043:17043 AV.Maps <> A var
R17059:17059 AV.Maps PTree t def
R17061:17061 AV.Maps <> B var
R17076:17076 AV.Maps <> m var
R17089:17092 AV.Maps PTree Leaf constr
R17097:17100 AV.Maps PTree Leaf constr
R17108:17111 AV.Maps PTree Node constr
R17122:17125 AV.Maps PTree Node constr
R17156:17159 AV.Maps <> map1 def
R17161:17161 AV.Maps <> f var
R17139:17148 AV.Coqlib <> option_map def
R17150:17150 AV.Maps <> f var
R17128:17131 AV.Maps <> map1 def
R17133:17133 AV.Maps <> f var
prf 17186:17190 PTree gmap1
R17221:17224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17225:17225 AV.Maps <> B var
R17220:17220 AV.Maps <> A var
R17232:17234 AV.Maps PTree elt def
R17241:17241 AV.Maps PTree t def
R17243:17243 AV.Maps <> A var
R17267:17269 Coq.Init.Logic <> :type_scope:x_'='_x not
R17251:17253 AV.Maps PTree get def
R17258:17261 AV.Maps PTree map1 def
R17265:17265 AV.Maps <> m var
R17263:17263 AV.Maps <> f var
R17255:17255 AV.Maps <> i var
R17270:17279 AV.Coqlib <> option_map def
R17284:17286 AV.Maps PTree get def
R17290:17290 AV.Maps <> m var
R17288:17288 AV.Maps <> i var
R17281:17281 AV.Maps <> f var
def 17374:17378 PTree Node'
R17394:17394 AV.Maps PTree t def
R17396:17396 AV.Maps <> A var
R17403:17408 Coq.Init.Datatypes <> option ind
R17410:17410 AV.Maps <> A var
R17417:17417 AV.Maps PTree t def
R17419:17419 AV.Maps <> A var
R17423:17423 AV.Maps PTree t def
R17425:17425 AV.Maps <> A var
R17446:17446 AV.Maps <> r var
R17443:17443 AV.Maps <> x var
R17440:17440 AV.Maps <> l var
R17459:17462 AV.Maps PTree Leaf constr
R17465:17468 Coq.Init.Datatypes <> None constr
R17471:17474 AV.Maps PTree Leaf constr
R17479:17482 AV.Maps PTree Leaf constr
R17501:17504 AV.Maps PTree Node constr
R17510:17510 AV.Maps <> r var
R17508:17508 AV.Maps <> x var
R17506:17506 AV.Maps <> l var
prf 17530:17535 PTree gnode'
R17565:17565 AV.Maps PTree t def
R17567:17567 AV.Maps <> A var
R17574:17579 Coq.Init.Datatypes <> option ind
R17581:17581 AV.Maps <> A var
R17588:17595 Coq.Numbers.BinNums <> positive ind
R17622:17624 Coq.Init.Logic <> :type_scope:x_'='_x not
R17603:17605 AV.Maps PTree get def
R17610:17614 AV.Maps PTree Node' def
R17620:17620 AV.Maps <> r var
R17618:17618 AV.Maps <> x var
R17616:17616 AV.Maps <> l var
R17607:17607 AV.Maps <> i var
R17625:17627 AV.Maps PTree get def
R17632:17635 AV.Maps PTree Node constr
R17641:17641 AV.Maps <> r var
R17639:17639 AV.Maps <> x var
R17637:17637 AV.Maps <> l var
R17629:17629 AV.Maps <> i var
R17673:17677 AV.Maps PTree Node' def
R17763:17767 AV.Maps PTree gleaf thm
R17763:17767 AV.Maps PTree gleaf thm
R17763:17767 AV.Maps PTree gleaf thm
R17763:17767 AV.Maps PTree gleaf thm
R17763:17767 AV.Maps PTree gleaf thm
def 17795:17801 PTree filter1
R17821:17824 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17825:17828 Coq.Init.Datatypes <> bool ind
R17820:17820 AV.Maps <> A var
R17835:17835 AV.Maps PTree t def
R17837:17837 AV.Maps <> A var
R17853:17853 AV.Maps PTree t def
R17855:17855 AV.Maps <> A var
R17870:17870 AV.Maps <> m var
R17883:17886 AV.Maps PTree Leaf constr
R17891:17894 AV.Maps PTree Leaf constr
R17902:17905 AV.Maps PTree Node constr
R17947:17950 Coq.Init.Datatypes <> None constr
R17955:17958 Coq.Init.Datatypes <> None constr
R17962:17965 Coq.Init.Datatypes <> Some constr
R17975:17978 AV.Maps <> pred var
R17994:17997 Coq.Init.Datatypes <> None constr
R18014:18018 AV.Maps PTree Node' def
R18041:18047 AV.Maps <> filter1 def
R18049:18052 AV.Maps <> pred var
R18037:18038 AV.Maps <> o' var
R18021:18027 AV.Maps <> filter1 def
R18029:18032 AV.Maps <> pred var
prf 18077:18084 PTree gfilter1
R18116:18119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18120:18123 Coq.Init.Datatypes <> bool ind
R18115:18115 AV.Maps <> A var
R18130:18132 AV.Maps PTree elt def
R18139:18139 AV.Maps PTree t def
R18141:18141 AV.Maps <> A var
R18171:18177 Coq.Init.Logic <> :type_scope:x_'='_x not
R18149:18151 AV.Maps PTree get def
R18156:18162 AV.Maps PTree filter1 def
R18169:18169 AV.Maps <> m var
R18164:18167 AV.Maps <> pred var
R18153:18153 AV.Maps <> i var
R18184:18186 AV.Maps PTree get def
R18190:18190 AV.Maps <> m var
R18188:18188 AV.Maps <> i var
R18197:18200 Coq.Init.Datatypes <> None constr
R18205:18208 Coq.Init.Datatypes <> None constr
R18212:18215 Coq.Init.Datatypes <> Some constr
R18225:18228 AV.Maps <> pred var
R18249:18252 Coq.Init.Datatypes <> None constr
R18237:18240 Coq.Init.Datatypes <> Some constr
R18340:18344 AV.Maps PTree gleaf thm
R18340:18344 AV.Maps PTree gleaf thm
R18340:18344 AV.Maps PTree gleaf thm
R18365:18370 AV.Maps PTree gnode' thm
R18365:18370 AV.Maps PTree gnode' thm
R18365:18370 AV.Maps PTree gnode' thm
sec 18434:18440 PTree COMBINE
var 18456:18456 PTree.COMBINE A
var 18458:18458 PTree.COMBINE B
var 18460:18460 PTree.COMBINE C
var 18480:18480 PTree.COMBINE f
R18491:18494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18503:18506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18507:18512 Coq.Init.Datatypes <> option ind
R18514:18514 AV.Maps <> PTree.COMBINE.C var
R18495:18500 Coq.Init.Datatypes <> option ind
R18502:18502 AV.Maps <> PTree.COMBINE.B var
R18483:18488 Coq.Init.Datatypes <> option ind
R18490:18490 AV.Maps <> PTree.COMBINE.A var
var 18530:18540 PTree.COMBINE f_none_none
R18554:18556 Coq.Init.Logic <> :type_scope:x_'='_x not
R18543:18543 AV.Maps <> PTree.COMBINE.f var
R18550:18553 Coq.Init.Datatypes <> None constr
R18545:18548 Coq.Init.Datatypes <> None constr
R18557:18560 Coq.Init.Datatypes <> None constr
def 18575:18584 PTree xcombine_l
R18591:18591 AV.Maps PTree t def
R18593:18593 AV.Maps <> PTree.COMBINE.A var
R18609:18609 AV.Maps PTree t def
R18611:18611 AV.Maps <> PTree.COMBINE.C var
R18628:18628 AV.Maps <> m var
R18643:18646 AV.Maps PTree Leaf constr
R18651:18654 AV.Maps PTree Leaf constr
R18664:18667 AV.Maps PTree Node constr
R18678:18682 AV.Maps PTree Node' def
R18711:18720 AV.Maps <> xcombine_l def
R18700:18700 AV.Maps <> PTree.COMBINE.f var
R18704:18707 Coq.Init.Datatypes <> None constr
R18685:18694 AV.Maps <> xcombine_l def
prf 18745:18755 PTree xgcombine_l
R18780:18780 AV.Maps PTree t def
R18782:18782 AV.Maps <> PTree.COMBINE.A var
R18790:18797 Coq.Numbers.BinNums <> positive ind
R18831:18833 Coq.Init.Logic <> :type_scope:x_'='_x not
R18811:18813 AV.Maps PTree get def
R18818:18827 AV.Maps PTree xcombine_l def
R18829:18829 AV.Maps <> m var
R18815:18815 AV.Maps <> i var
R18834:18834 AV.Maps <> PTree.COMBINE.f var
R18846:18849 Coq.Init.Datatypes <> None constr
R18837:18839 AV.Maps PTree get def
R18843:18843 AV.Maps <> m var
R18841:18841 AV.Maps <> i var
R18918:18922 AV.Maps PTree gleaf thm
R18918:18922 AV.Maps PTree gleaf thm
R18918:18922 AV.Maps PTree gleaf thm
R18918:18922 AV.Maps PTree gleaf thm
R18918:18922 AV.Maps PTree gleaf thm
R18918:18922 AV.Maps PTree gleaf thm
R18945:18950 AV.Maps PTree gnode' thm
R18945:18950 AV.Maps PTree gnode' thm
R18945:18950 AV.Maps PTree gnode' thm
def 18999:19008 PTree xcombine_r
R19015:19015 AV.Maps PTree t def
R19017:19017 AV.Maps <> PTree.COMBINE.B var
R19033:19033 AV.Maps PTree t def
R19035:19035 AV.Maps <> PTree.COMBINE.C var
R19052:19052 AV.Maps <> m var
R19067:19070 AV.Maps PTree Leaf constr
R19075:19078 AV.Maps PTree Leaf constr
R19088:19091 AV.Maps PTree Node constr
R19102:19106 AV.Maps PTree Node' def
R19135:19144 AV.Maps <> xcombine_r def
R19124:19124 AV.Maps <> PTree.COMBINE.f var
R19126:19129 Coq.Init.Datatypes <> None constr
R19109:19118 AV.Maps <> xcombine_r def
prf 19169:19179 PTree xgcombine_r
R19204:19204 AV.Maps PTree t def
R19206:19206 AV.Maps <> PTree.COMBINE.B var
R19214:19221 Coq.Numbers.BinNums <> positive ind
R19255:19257 Coq.Init.Logic <> :type_scope:x_'='_x not
R19235:19237 AV.Maps PTree get def
R19242:19251 AV.Maps PTree xcombine_r def
R19253:19253 AV.Maps <> m var
R19239:19239 AV.Maps <> i var
R19258:19258 AV.Maps <> PTree.COMBINE.f var
R19266:19268 AV.Maps PTree get def
R19272:19272 AV.Maps <> m var
R19270:19270 AV.Maps <> i var
R19260:19263 Coq.Init.Datatypes <> None constr
R19342:19346 AV.Maps PTree gleaf thm
R19342:19346 AV.Maps PTree gleaf thm
R19342:19346 AV.Maps PTree gleaf thm
R19342:19346 AV.Maps PTree gleaf thm
R19342:19346 AV.Maps PTree gleaf thm
R19342:19346 AV.Maps PTree gleaf thm
R19369:19374 AV.Maps PTree gnode' thm
R19369:19374 AV.Maps PTree gnode' thm
R19369:19374 AV.Maps PTree gnode' thm
def 19423:19429 PTree combine
R19436:19436 AV.Maps PTree t def
R19438:19438 AV.Maps <> PTree.COMBINE.A var
R19446:19446 AV.Maps PTree t def
R19448:19448 AV.Maps <> PTree.COMBINE.B var
R19465:19465 AV.Maps PTree t def
R19467:19467 AV.Maps <> PTree.COMBINE.C var
R19482:19483 AV.Maps <> m1 var
R19496:19499 AV.Maps PTree Leaf constr
R19504:19513 AV.Maps PTree xcombine_r def
R19515:19516 AV.Maps <> m2 var
R19524:19527 AV.Maps PTree Node constr
R19555:19556 AV.Maps <> m2 var
R19573:19576 AV.Maps PTree Leaf constr
R19581:19590 AV.Maps PTree xcombine_l def
R19592:19593 AV.Maps <> m1 var
R19605:19608 AV.Maps PTree Node constr
R19622:19626 AV.Maps PTree Node' def
R19655:19661 AV.Maps <> combine def
R19645:19645 AV.Maps <> PTree.COMBINE.f var
R19629:19635 AV.Maps <> combine def
prf 19702:19709 PTree gcombine
R19730:19730 AV.Maps PTree t def
R19732:19732 AV.Maps <> PTree.COMBINE.A var
R19740:19740 AV.Maps PTree t def
R19742:19742 AV.Maps <> PTree.COMBINE.B var
R19749:19756 Coq.Numbers.BinNums <> positive ind
R19787:19789 Coq.Init.Logic <> :type_scope:x_'='_x not
R19766:19768 AV.Maps PTree get def
R19773:19779 AV.Maps PTree combine def
R19784:19785 AV.Maps <> m2 var
R19781:19782 AV.Maps <> m1 var
R19770:19770 AV.Maps <> i var
R19790:19790 AV.Maps <> PTree.COMBINE.f var
R19804:19806 AV.Maps PTree get def
R19810:19811 AV.Maps <> m2 var
R19808:19808 AV.Maps <> i var
R19793:19795 AV.Maps PTree get def
R19799:19800 AV.Maps <> m1 var
R19797:19797 AV.Maps <> i var
R19869:19873 AV.Maps PTree gleaf thm
R19869:19873 AV.Maps PTree gleaf thm
R19869:19873 AV.Maps PTree gleaf thm
R19882:19892 AV.Maps PTree xgcombine_r thm
R19882:19892 AV.Maps PTree xgcombine_r thm
R19931:19935 AV.Maps PTree gleaf thm
R19931:19935 AV.Maps PTree gleaf thm
R19931:19935 AV.Maps PTree gleaf thm
R19949:19959 AV.Maps PTree xgcombine_l thm
R19949:19959 AV.Maps PTree xgcombine_l thm
R19949:19959 AV.Maps PTree xgcombine_l thm
R19987:19992 AV.Maps PTree gnode' thm
R19987:19992 AV.Maps PTree gnode' thm
R19987:19992 AV.Maps PTree gnode' thm
R19987:19992 AV.Maps PTree gnode' thm
R20034:20040 AV.Maps PTree.COMBINE <> sec
prf 20052:20062 PTree xcombine_lr
R20104:20107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20116:20119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20120:20125 Coq.Init.Datatypes <> option ind
R20127:20127 AV.Maps <> B var
R20108:20113 Coq.Init.Datatypes <> option ind
R20115:20115 AV.Maps <> A var
R20096:20101 Coq.Init.Datatypes <> option ind
R20103:20103 AV.Maps <> A var
R20135:20135 AV.Maps PTree t def
R20137:20137 AV.Maps <> A var
R20145:20145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20184:20192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20207:20209 Coq.Init.Logic <> :type_scope:x_'='_x not
R20193:20202 AV.Maps PTree xcombine_l def
R20206:20206 AV.Maps <> m var
R20204:20204 AV.Maps <> f var
R20210:20219 AV.Maps PTree xcombine_r def
R20223:20223 AV.Maps <> m var
R20221:20221 AV.Maps <> g var
R20160:20165 Coq.Init.Datatypes <> option ind
R20167:20167 AV.Maps <> A var
R20176:20178 Coq.Init.Logic <> :type_scope:x_'='_x not
R20171:20171 AV.Maps <> f var
R20175:20175 AV.Maps <> j var
R20173:20173 AV.Maps <> i var
R20179:20179 AV.Maps <> g var
R20183:20183 AV.Maps <> i var
R20181:20181 AV.Maps <> j var
prf 20372:20385 PTree combine_commut
R20425:20428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20437:20440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20441:20446 Coq.Init.Datatypes <> option ind
R20448:20448 AV.Maps <> B var
R20429:20434 Coq.Init.Datatypes <> option ind
R20436:20436 AV.Maps <> A var
R20417:20422 Coq.Init.Datatypes <> option ind
R20424:20424 AV.Maps <> A var
R20456:20456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20494:20502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20518:20518 AV.Maps PTree t def
R20520:20520 AV.Maps <> A var
R20543:20545 Coq.Init.Logic <> :type_scope:x_'='_x not
R20528:20534 AV.Maps PTree combine def
R20541:20542 AV.Maps <> m2 var
R20538:20539 AV.Maps <> m1 var
R20536:20536 AV.Maps <> f var
R20546:20552 AV.Maps PTree combine def
R20559:20560 AV.Maps <> m1 var
R20556:20557 AV.Maps <> m2 var
R20554:20554 AV.Maps <> g var
R20470:20475 Coq.Init.Datatypes <> option ind
R20477:20477 AV.Maps <> A var
R20486:20488 Coq.Init.Logic <> :type_scope:x_'='_x not
R20481:20481 AV.Maps <> f var
R20485:20485 AV.Maps <> j var
R20483:20483 AV.Maps <> i var
R20489:20489 AV.Maps <> g var
R20493:20493 AV.Maps <> i var
R20491:20491 AV.Maps <> j var
R20626:20631 Coq.Init.Datatypes <> option ind
R20642:20644 Coq.Init.Logic <> :type_scope:x_'='_x not
R20641:20641 AV.Maps <> j var
R20639:20639 AV.Maps <> i var
R20649:20649 AV.Maps <> i var
R20647:20647 AV.Maps <> j var
R20626:20631 Coq.Init.Datatypes <> option ind
R20642:20644 Coq.Init.Logic <> :type_scope:x_'='_x not
R20641:20641 AV.Maps <> j var
R20639:20639 AV.Maps <> i var
R20649:20649 AV.Maps <> i var
R20647:20647 AV.Maps <> j var
R20764:20774 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20764:20774 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
R20804:20814 AV.Maps PTree xcombine_lr thm
def 20908:20916 PTree xelements
R20934:20934 AV.Maps PTree t def
R20936:20936 AV.Maps <> A var
R20944:20951 Coq.Numbers.BinNums <> positive ind
R20981:20984 Coq.Init.Datatypes <> list ind
R20995:20997 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R20987:20994 Coq.Numbers.BinNums <> positive ind
R20998:20998 AV.Maps <> A var
R21038:21041 Coq.Init.Datatypes <> list ind
R21052:21054 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21044:21051 Coq.Numbers.BinNums <> positive ind
R21055:21055 AV.Maps <> A var
R21073:21073 AV.Maps <> m var
R21088:21091 AV.Maps PTree Leaf constr
R21096:21096 AV.Maps <> k var
R21106:21109 AV.Maps PTree Node constr
R21113:21116 Coq.Init.Datatypes <> None constr
R21133:21141 AV.Maps <> xelements def
R21153:21161 AV.Maps <> xelements def
R21172:21172 AV.Maps <> k var
R21166:21167 Coq.Numbers.BinNums <> xI constr
R21169:21169 AV.Maps <> i var
R21146:21147 Coq.Numbers.BinNums <> xO constr
R21149:21149 AV.Maps <> i var
R21183:21186 AV.Maps PTree Node constr
R21191:21194 Coq.Init.Datatypes <> Some constr
R21214:21222 AV.Maps <> xelements def
R21257:21260 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21246:21246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21253:21254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21256:21256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21247:21250 AV.Maps PTree prev def
R21252:21252 AV.Maps <> i var
R21261:21269 AV.Maps <> xelements def
R21280:21280 AV.Maps <> k var
R21274:21275 Coq.Numbers.BinNums <> xI constr
R21277:21277 AV.Maps <> i var
R21227:21228 Coq.Numbers.BinNums <> xO constr
R21230:21230 AV.Maps <> i var
def 21308:21315 PTree elements
R21332:21332 AV.Maps PTree t def
R21334:21334 AV.Maps <> A var
R21340:21348 AV.Maps PTree xelements def
R21355:21357 Coq.Init.Datatypes <> nil constr
R21352:21353 Coq.Numbers.BinNums <> xH constr
R21350:21350 AV.Maps <> m var
prf 21370:21385 PTree xelements_append
R21405:21405 AV.Maps PTree t def
R21407:21407 AV.Maps <> A var
R21447:21449 Coq.Init.Logic <> :type_scope:x_'='_x not
R21423:21431 AV.Maps PTree xelements def
R21440:21443 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21438:21439 AV.Maps <> k1 var
R21444:21445 AV.Maps <> k2 var
R21435:21435 AV.Maps <> i var
R21433:21433 AV.Maps <> m var
R21466:21469 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21450:21458 AV.Maps PTree xelements def
R21464:21465 AV.Maps <> k1 var
R21462:21462 AV.Maps <> i var
R21460:21460 AV.Maps <> m var
R21470:21471 AV.Maps <> k2 var
prf 21595:21608 PTree xelements_leaf
R21652:21654 Coq.Init.Logic <> :type_scope:x_'='_x not
R21627:21635 AV.Maps PTree xelements def
R21649:21651 Coq.Init.Datatypes <> nil constr
R21647:21647 AV.Maps <> i var
R21639:21642 AV.Maps PTree Leaf constr
R21644:21644 AV.Maps <> A var
R21655:21657 Coq.Init.Datatypes <> nil constr
prf 21711:21724 PTree xelements_node
R21745:21745 AV.Maps PTree t def
R21747:21747 AV.Maps <> A var
R21757:21757 AV.Maps PTree t def
R21759:21759 AV.Maps <> A var
R21799:21808 Coq.Init.Logic <> :type_scope:x_'='_x not
R21769:21777 AV.Maps PTree xelements def
R21796:21798 Coq.Init.Datatypes <> nil constr
R21794:21794 AV.Maps <> i var
R21780:21783 AV.Maps PTree Node constr
R21790:21791 AV.Maps <> m2 var
R21788:21788 AV.Maps <> o var
R21785:21786 AV.Maps <> m1 var
R21832:21839 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21809:21817 AV.Maps PTree xelements def
R21829:21831 Coq.Init.Datatypes <> nil constr
R21823:21824 Coq.Numbers.BinNums <> xO constr
R21826:21826 AV.Maps <> i var
R21819:21820 AV.Maps <> m1 var
R21899:21906 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21846:21846 AV.Maps <> o var
R21853:21856 Coq.Init.Datatypes <> None constr
R21861:21863 Coq.Init.Datatypes <> nil constr
R21867:21870 Coq.Init.Datatypes <> Some constr
R21888:21891 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21877:21877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21884:21885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21887:21887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21878:21881 AV.Maps PTree prev def
R21883:21883 AV.Maps <> i var
R21892:21894 Coq.Init.Datatypes <> nil constr
R21907:21915 AV.Maps PTree xelements def
R21927:21929 Coq.Init.Datatypes <> nil constr
R21921:21922 Coq.Numbers.BinNums <> xI constr
R21924:21924 AV.Maps <> i var
R21917:21918 AV.Maps <> m2 var
R21990:22005 AV.Maps PTree xelements_append thm
R21990:22005 AV.Maps PTree xelements_append thm
R21990:22005 AV.Maps PTree xelements_append thm
R21990:22005 AV.Maps PTree xelements_append thm
R21990:22005 AV.Maps PTree xelements_append thm
prf 22032:22045 PTree xelements_incl
R22075:22075 AV.Maps PTree t def
R22077:22077 AV.Maps <> A var
R22085:22092 Coq.Numbers.BinNums <> positive ind
R22112:22115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22116:22117 Coq.Lists.List <> In def
R22122:22130 AV.Maps PTree xelements def
R22136:22136 AV.Maps <> k var
R22134:22134 AV.Maps <> i var
R22132:22132 AV.Maps <> m var
R22119:22119 AV.Maps <> x var
R22106:22107 Coq.Lists.List <> In def
R22111:22111 AV.Maps <> k var
R22109:22109 AV.Maps <> x var
prf 22285:22301 PTree xelements_correct
R22331:22331 AV.Maps PTree t def
R22333:22333 AV.Maps <> A var
R22343:22350 Coq.Numbers.BinNums <> positive ind
R22357:22357 AV.Maps <> A var
R22385:22388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22389:22390 Coq.Lists.List <> In def
R22421:22429 AV.Maps PTree xelements def
R22435:22435 AV.Maps <> k var
R22433:22433 AV.Maps <> j var
R22431:22431 AV.Maps <> m var
R22392:22392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22415:22416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22418:22418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22393:22396 AV.Maps PTree prev def
R22399:22409 AV.Maps PTree prev_append def
R22413:22413 AV.Maps <> j var
R22411:22411 AV.Maps <> i var
R22417:22417 AV.Maps <> v var
R22376:22378 Coq.Init.Logic <> :type_scope:x_'='_x not
R22369:22371 AV.Maps PTree get def
R22375:22375 AV.Maps <> m var
R22373:22373 AV.Maps <> i var
R22379:22382 Coq.Init.Datatypes <> Some constr
R22384:22384 AV.Maps <> v var
R22493:22497 AV.Maps PTree gleaf thm
R22493:22497 AV.Maps PTree gleaf thm
R22493:22497 AV.Maps PTree gleaf thm
R22586:22599 AV.Maps PTree xelements_incl thm
R22586:22599 AV.Maps PTree xelements_incl thm
R22650:22663 AV.Maps PTree xelements_incl thm
R22650:22663 AV.Maps PTree xelements_incl thm
R22699:22712 AV.Maps PTree xelements_incl thm
R22699:22712 AV.Maps PTree xelements_incl thm
prf 22770:22785 PTree elements_correct
R22813:22813 AV.Maps PTree t def
R22815:22815 AV.Maps <> A var
R22822:22829 Coq.Numbers.BinNums <> positive ind
R22836:22836 AV.Maps <> A var
R22860:22863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22864:22865 Coq.Lists.List <> In def
R22875:22882 AV.Maps PTree elements def
R22884:22884 AV.Maps <> m var
R22867:22867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22869:22870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22872:22872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22868:22868 AV.Maps <> i var
R22871:22871 AV.Maps <> v var
R22851:22853 Coq.Init.Logic <> :type_scope:x_'='_x not
R22844:22846 AV.Maps PTree get def
R22850:22850 AV.Maps <> m var
R22848:22848 AV.Maps <> i var
R22854:22857 Coq.Init.Datatypes <> Some constr
R22859:22859 AV.Maps <> v var
R22935:22951 AV.Maps PTree xelements_correct thm
R22960:22962 Coq.Init.Datatypes <> nil constr
R22957:22958 Coq.Numbers.BinNums <> xH constr
R22935:22951 AV.Maps PTree xelements_correct thm
R22960:22962 Coq.Init.Datatypes <> nil constr
R22957:22958 Coq.Numbers.BinNums <> xH constr
R22976:22991 AV.Maps PTree prev_append_prev thm
R22976:22991 AV.Maps PTree prev_append_prev thm
R22976:22991 AV.Maps PTree prev_append_prev thm
R23000:23001 Coq.Init.Datatypes <> id def
R23000:23001 Coq.Init.Datatypes <> id def
prf 23020:23031 PTree in_xelements
R23059:23059 AV.Maps PTree t def
R23061:23061 AV.Maps <> A var
R23070:23077 Coq.Numbers.BinNums <> positive ind
R23084:23084 AV.Maps <> A var
R23122:23129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23130:23136 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23138:23139 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23166:23169 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23141:23143 Coq.Init.Logic <> :type_scope:x_'='_x not
R23140:23140 AV.Maps <> k var
R23144:23147 AV.Maps PTree prev def
R23150:23160 AV.Maps PTree prev_append def
R23164:23164 AV.Maps <> i var
R23162:23162 AV.Maps <> j var
R23177:23179 Coq.Init.Logic <> :type_scope:x_'='_x not
R23170:23172 AV.Maps PTree get def
R23176:23176 AV.Maps <> m var
R23174:23174 AV.Maps <> j var
R23180:23183 Coq.Init.Datatypes <> Some constr
R23185:23185 AV.Maps <> v var
R23093:23094 Coq.Lists.List <> In def
R23104:23112 AV.Maps PTree xelements def
R23118:23120 Coq.Init.Datatypes <> nil constr
R23116:23116 AV.Maps <> i var
R23114:23114 AV.Maps <> m var
R23096:23096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23098:23099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23101:23101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23097:23097 AV.Maps <> k var
R23100:23100 AV.Maps <> v var
R23234:23247 AV.Maps PTree xelements_leaf thm
R23234:23247 AV.Maps PTree xelements_leaf thm
R23234:23247 AV.Maps PTree xelements_leaf thm
R23282:23295 AV.Maps PTree xelements_node thm
R23282:23295 AV.Maps PTree xelements_node thm
R23282:23295 AV.Maps PTree xelements_node thm
R23313:23322 Coq.Lists.List <> in_app_iff thm
R23313:23322 Coq.Lists.List <> in_app_iff thm
R23313:23322 Coq.Lists.List <> in_app_iff thm
R23313:23322 Coq.Lists.List <> in_app_iff thm
R23313:23322 Coq.Lists.List <> in_app_iff thm
R23414:23415 Coq.Numbers.BinNums <> xO constr
R23414:23415 Coq.Numbers.BinNums <> xO constr
R23487:23488 Coq.Numbers.BinNums <> xH constr
R23487:23488 Coq.Numbers.BinNums <> xH constr
R23552:23553 Coq.Numbers.BinNums <> xI constr
R23552:23553 Coq.Numbers.BinNums <> xI constr
prf 23583:23599 PTree elements_complete
R23627:23627 AV.Maps PTree t def
R23629:23629 AV.Maps <> A var
R23636:23643 Coq.Numbers.BinNums <> positive ind
R23650:23650 AV.Maps <> A var
R23680:23683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23691:23693 Coq.Init.Logic <> :type_scope:x_'='_x not
R23684:23686 AV.Maps PTree get def
R23690:23690 AV.Maps <> m var
R23688:23688 AV.Maps <> i var
R23694:23697 Coq.Init.Datatypes <> Some constr
R23699:23699 AV.Maps <> v var
R23658:23659 Coq.Lists.List <> In def
R23669:23676 AV.Maps PTree elements def
R23678:23678 AV.Maps <> m var
R23661:23661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23663:23664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23666:23666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23662:23662 AV.Maps <> i var
R23665:23665 AV.Maps <> v var
R23722:23729 AV.Maps PTree elements def
R23758:23769 AV.Maps PTree in_xelements thm
R23811:23826 AV.Maps PTree prev_append_prev thm
R23811:23826 AV.Maps PTree prev_append_prev thm
R23811:23826 AV.Maps PTree prev_append_prev thm
R23849:23859 AV.Maps PTree prev_append def
R23849:23859 AV.Maps PTree prev_append def
R23884:23898 AV.Maps PTree prev_append_inj thm
def 23949:23953 PTree xkeys
R23969:23969 AV.Maps PTree t def
R23971:23971 AV.Maps <> A var
R23978:23985 Coq.Numbers.BinNums <> positive ind
R23995:24002 Coq.Lists.List <> map def
R24023:24031 AV.Maps PTree xelements def
R24037:24039 Coq.Init.Datatypes <> nil constr
R24035:24035 AV.Maps <> i var
R24033:24033 AV.Maps <> m var
R24006:24008 Coq.Init.Datatypes <> fst def
R24019:24019 AV.Maps <> A var
R24010:24017 Coq.Numbers.BinNums <> positive ind
prf 24053:24062 PTree xkeys_leaf
R24098:24100 Coq.Init.Logic <> :type_scope:x_'='_x not
R24081:24085 AV.Maps PTree xkeys def
R24097:24097 AV.Maps <> i var
R24089:24092 AV.Maps PTree Leaf constr
R24094:24094 AV.Maps <> A var
R24101:24103 Coq.Init.Datatypes <> nil constr
prf 24157:24166 PTree xkeys_node
R24187:24187 AV.Maps PTree t def
R24189:24189 AV.Maps <> A var
R24199:24199 AV.Maps PTree t def
R24201:24201 AV.Maps <> A var
R24233:24242 Coq.Init.Logic <> :type_scope:x_'='_x not
R24211:24215 AV.Maps PTree xkeys def
R24232:24232 AV.Maps <> i var
R24218:24221 AV.Maps PTree Node constr
R24228:24229 AV.Maps <> m2 var
R24226:24226 AV.Maps <> o var
R24223:24224 AV.Maps <> m1 var
R24258:24265 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24243:24247 AV.Maps PTree xkeys def
R24253:24254 Coq.Numbers.BinNums <> xO constr
R24256:24256 AV.Maps <> i var
R24249:24250 AV.Maps <> m1 var
R24320:24327 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24272:24272 AV.Maps <> o var
R24279:24282 Coq.Init.Datatypes <> None constr
R24287:24289 Coq.Init.Datatypes <> nil constr
R24293:24296 Coq.Init.Datatypes <> Some constr
R24309:24312 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24303:24306 AV.Maps PTree prev def
R24308:24308 AV.Maps <> i var
R24313:24315 Coq.Init.Datatypes <> nil constr
R24328:24332 AV.Maps PTree xkeys def
R24338:24339 Coq.Numbers.BinNums <> xI constr
R24341:24341 AV.Maps <> i var
R24334:24335 AV.Maps <> m2 var
R24373:24377 AV.Maps PTree xkeys def
R24388:24401 AV.Maps PTree xelements_node thm
R24388:24401 AV.Maps PTree xelements_node thm
R24388:24401 AV.Maps PTree xelements_node thm
R24414:24420 Coq.Lists.List <> map_app thm
R24414:24420 Coq.Lists.List <> map_app thm
R24414:24420 Coq.Lists.List <> map_app thm
R24414:24420 Coq.Lists.List <> map_app thm
R24414:24420 Coq.Lists.List <> map_app thm
prf 24457:24464 PTree in_xkeys
R24492:24492 AV.Maps PTree t def
R24494:24494 AV.Maps <> A var
R24503:24510 Coq.Numbers.BinNums <> positive ind
R24534:24542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24579:24579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24543:24549 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24551:24552 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24554:24556 Coq.Init.Logic <> :type_scope:x_'='_x not
R24553:24553 AV.Maps <> k var
R24557:24560 AV.Maps PTree prev def
R24563:24573 AV.Maps PTree prev_append def
R24577:24577 AV.Maps <> i var
R24575:24575 AV.Maps <> j var
R24518:24519 Coq.Lists.List <> In def
R24524:24528 AV.Maps PTree xkeys def
R24532:24532 AV.Maps <> i var
R24530:24530 AV.Maps <> m var
R24521:24521 AV.Maps <> k var
R24602:24606 AV.Maps PTree xkeys def
R24628:24642 AV.Coqlib <> list_in_map_inv thm
R24628:24642 AV.Coqlib <> list_in_map_inv thm
R24696:24707 AV.Maps PTree in_xelements thm
prf 24769:24790 PTree xelements_keys_norepet
R24818:24818 AV.Maps PTree t def
R24820:24820 AV.Maps <> A var
R24827:24834 Coq.Numbers.BinNums <> positive ind
R24842:24853 AV.Coqlib <> list_norepet ind
R24856:24860 AV.Maps PTree xkeys def
R24864:24864 AV.Maps <> i var
R24862:24862 AV.Maps <> m var
R24914:24923 AV.Maps PTree xkeys_leaf thm
R24914:24923 AV.Maps PTree xkeys_leaf thm
R24914:24923 AV.Maps PTree xkeys_leaf thm
R24959:24960 Coq.Init.Logic <> :type_scope:'~'_x not
R24961:24962 Coq.Lists.List <> In def
R24974:24978 AV.Maps PTree xkeys def
R24984:24985 Coq.Numbers.BinNums <> xO constr
R24965:24968 AV.Maps PTree prev def
R24959:24960 Coq.Init.Logic <> :type_scope:'~'_x not
R24961:24962 Coq.Lists.List <> In def
R24974:24978 AV.Maps PTree xkeys def
R24984:24985 Coq.Numbers.BinNums <> xO constr
R24965:24968 AV.Maps PTree prev def
R25020:25027 AV.Maps PTree in_xkeys thm
R25068:25083 AV.Maps PTree prev_append_prev thm
R25068:25083 AV.Maps PTree prev_append_prev thm
R25068:25083 AV.Maps PTree prev_append_prev thm
R25111:25125 AV.Maps PTree prev_append_inj thm
R25111:25125 AV.Maps PTree prev_append_inj thm
R25170:25171 Coq.Init.Logic <> :type_scope:'~'_x not
R25172:25173 Coq.Lists.List <> In def
R25185:25189 AV.Maps PTree xkeys def
R25195:25196 Coq.Numbers.BinNums <> xI constr
R25176:25179 AV.Maps PTree prev def
R25170:25171 Coq.Init.Logic <> :type_scope:'~'_x not
R25172:25173 Coq.Lists.List <> In def
R25185:25189 AV.Maps PTree xkeys def
R25195:25196 Coq.Numbers.BinNums <> xI constr
R25176:25179 AV.Maps PTree prev def
R25231:25238 AV.Maps PTree in_xkeys thm
R25279:25294 AV.Maps PTree prev_append_prev thm
R25279:25294 AV.Maps PTree prev_append_prev thm
R25279:25294 AV.Maps PTree prev_append_prev thm
R25322:25336 AV.Maps PTree prev_append_inj thm
R25322:25336 AV.Maps PTree prev_append_inj thm
R25411:25414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25437:25440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25441:25445 Coq.Init.Logic <> False ind
R25415:25416 Coq.Lists.List <> In def
R25421:25425 AV.Maps PTree xkeys def
R25431:25432 Coq.Numbers.BinNums <> xI constr
R25418:25418 AV.Maps <> x var
R25389:25390 Coq.Lists.List <> In def
R25395:25399 AV.Maps PTree xkeys def
R25405:25406 Coq.Numbers.BinNums <> xO constr
R25392:25392 AV.Maps <> x var
R25411:25414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25437:25440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25441:25445 Coq.Init.Logic <> False ind
R25415:25416 Coq.Lists.List <> In def
R25421:25425 AV.Maps PTree xkeys def
R25431:25432 Coq.Numbers.BinNums <> xI constr
R25418:25418 AV.Maps <> x var
R25389:25390 Coq.Lists.List <> In def
R25395:25399 AV.Maps PTree xkeys def
R25405:25406 Coq.Numbers.BinNums <> xO constr
R25392:25392 AV.Maps <> x var
R25471:25478 AV.Maps PTree in_xkeys thm
R25524:25531 AV.Maps PTree in_xkeys thm
R25578:25593 AV.Maps PTree prev_append_prev thm
R25578:25593 AV.Maps PTree prev_append_prev thm
R25578:25593 AV.Maps PTree prev_append_prev thm
R25639:25653 AV.Maps PTree prev_append_inj thm
R25639:25653 AV.Maps PTree prev_append_inj thm
R25691:25700 AV.Maps PTree xkeys_node thm
R25691:25700 AV.Maps PTree xkeys_node thm
R25691:25700 AV.Maps PTree xkeys_node thm
R25709:25727 AV.Coqlib <> list_norepet_append thm
R25709:25727 AV.Coqlib <> list_norepet_append thm
prf 25913:25933 PTree elements_keys_norepet
R25961:25961 AV.Maps PTree t def
R25963:25963 AV.Maps <> A var
R25971:25982 AV.Coqlib <> list_norepet ind
R25985:25992 Coq.Lists.List <> map def
R26008:26015 AV.Maps PTree elements def
R26017:26017 AV.Maps <> m var
R25996:25998 Coq.Init.Datatypes <> fst def
R26004:26004 AV.Maps <> A var
R26000:26002 AV.Maps PTree elt def
R26050:26071 AV.Maps PTree xelements_keys_norepet thm
R26075:26076 Coq.Numbers.BinNums <> xH constr
R26050:26071 AV.Maps PTree xelements_keys_norepet thm
R26075:26076 Coq.Numbers.BinNums <> xH constr
prf 26097:26111 PTree xelements_empty
R26139:26139 AV.Maps PTree t def
R26141:26141 AV.Maps <> A var
R26147:26147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26172:26176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26194:26196 Coq.Init.Logic <> :type_scope:x_'='_x not
R26177:26185 AV.Maps PTree xelements def
R26191:26193 Coq.Init.Datatypes <> nil constr
R26189:26189 AV.Maps <> i var
R26187:26187 AV.Maps <> m var
R26197:26199 Coq.Init.Datatypes <> nil constr
R26165:26167 Coq.Init.Logic <> :type_scope:x_'='_x not
R26158:26160 AV.Maps PTree get def
R26164:26164 AV.Maps <> m var
R26162:26162 AV.Maps <> i var
R26168:26171 Coq.Init.Datatypes <> None constr
R26258:26271 AV.Maps PTree xelements_node thm
R26258:26271 AV.Maps PTree xelements_node thm
R26258:26271 AV.Maps PTree xelements_node thm
R26330:26331 Coq.Numbers.BinNums <> xH constr
R26330:26331 Coq.Numbers.BinNums <> xH constr
R26376:26377 Coq.Numbers.BinNums <> xI constr
R26376:26377 Coq.Numbers.BinNums <> xI constr
R26407:26408 Coq.Numbers.BinNums <> xO constr
R26407:26408 Coq.Numbers.BinNums <> xO constr
prf 26434:26458 PTree elements_canonical_order'
R26489:26492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26494:26497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26493:26493 AV.Maps <> B var
R26488:26488 AV.Maps <> A var
R26508:26508 AV.Maps PTree t def
R26510:26510 AV.Maps <> A var
R26517:26517 AV.Maps PTree t def
R26519:26519 AV.Maps <> B var
R26527:26527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26570:26578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26579:26590 AV.Coqlib <> list_forall2 ind
R26678:26685 AV.Maps PTree elements def
R26687:26687 AV.Maps <> n var
R26665:26672 AV.Maps PTree elements def
R26674:26674 AV.Maps <> m var
R26631:26634 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26621:26623 Coq.Init.Logic <> :type_scope:x_'='_x not
R26614:26616 Coq.Init.Datatypes <> fst def
R26618:26620 AV.Maps <> i_x var
R26624:26626 Coq.Init.Datatypes <> fst def
R26628:26630 AV.Maps <> i_y var
R26635:26635 AV.Maps <> R var
R26648:26650 Coq.Init.Datatypes <> snd def
R26652:26654 AV.Maps <> i_y var
R26638:26640 Coq.Init.Datatypes <> snd def
R26642:26644 AV.Maps <> i_x var
R26538:26547 AV.Coqlib <> option_rel ind
R26562:26564 AV.Maps PTree get def
R26568:26568 AV.Maps <> n var
R26566:26566 AV.Maps <> i var
R26552:26554 AV.Maps PTree get def
R26558:26558 AV.Maps <> m var
R26556:26556 AV.Maps <> i var
R26549:26549 AV.Maps <> R var
R26727:26734 AV.Maps PTree elements def
R26816:26830 AV.Maps PTree xelements_empty thm
R26816:26830 AV.Maps PTree xelements_empty thm
R26816:26830 AV.Maps PTree xelements_empty thm
R26816:26830 AV.Maps PTree xelements_empty thm
R26884:26889 AV.Maps PTree gempty thm
R26884:26889 AV.Maps PTree gempty thm
R26884:26889 AV.Maps PTree gempty thm
R26957:26971 AV.Maps PTree xelements_empty thm
R26974:26977 AV.Maps PTree Node constr
R26957:26971 AV.Maps PTree xelements_empty thm
R26974:26977 AV.Maps PTree Node constr
R26957:26971 AV.Maps PTree xelements_empty thm
R26974:26977 AV.Maps PTree Node constr
R26957:26971 AV.Maps PTree xelements_empty thm
R26974:26977 AV.Maps PTree Node constr
R27048:27053 AV.Maps PTree gempty thm
R27048:27053 AV.Maps PTree gempty thm
R27048:27053 AV.Maps PTree gempty thm
R27088:27101 AV.Maps PTree xelements_node thm
R27088:27101 AV.Maps PTree xelements_node thm
R27088:27101 AV.Maps PTree xelements_node thm
R27088:27101 AV.Maps PTree xelements_node thm
R27088:27101 AV.Maps PTree xelements_node thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27117:27132 AV.Coqlib <> list_forall2_app thm
R27169:27170 Coq.Numbers.BinNums <> xO constr
R27169:27170 Coq.Numbers.BinNums <> xO constr
R27195:27196 Coq.Numbers.BinNums <> xH constr
R27195:27196 Coq.Numbers.BinNums <> xH constr
R27313:27314 Coq.Numbers.BinNums <> xI constr
R27313:27314 Coq.Numbers.BinNums <> xI constr
prf 27339:27362 PTree elements_canonical_order
R27393:27396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27398:27401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27397:27397 AV.Maps <> B var
R27392:27392 AV.Maps <> A var
R27412:27412 AV.Maps PTree t def
R27414:27414 AV.Maps <> A var
R27421:27421 AV.Maps PTree t def
R27423:27423 AV.Maps <> B var
R27431:27431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27499:27507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27508:27508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27576:27584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27585:27596 AV.Coqlib <> list_forall2 ind
R27684:27691 AV.Maps PTree elements def
R27693:27693 AV.Maps <> n var
R27671:27678 AV.Maps PTree elements def
R27680:27680 AV.Maps <> m var
R27637:27640 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27627:27629 Coq.Init.Logic <> :type_scope:x_'='_x not
R27620:27622 Coq.Init.Datatypes <> fst def
R27624:27626 AV.Maps <> i_x var
R27630:27632 Coq.Init.Datatypes <> fst def
R27634:27636 AV.Maps <> i_y var
R27641:27641 AV.Maps <> R var
R27654:27656 Coq.Init.Datatypes <> snd def
R27658:27660 AV.Maps <> i_y var
R27644:27646 Coq.Init.Datatypes <> snd def
R27648:27650 AV.Maps <> i_x var
R27537:27540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27541:27547 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27549:27550 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27567:27570 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27558:27560 Coq.Init.Logic <> :type_scope:x_'='_x not
R27551:27553 AV.Maps PTree get def
R27557:27557 AV.Maps <> m var
R27555:27555 AV.Maps <> i var
R27561:27564 Coq.Init.Datatypes <> Some constr
R27566:27566 AV.Maps <> x var
R27571:27571 AV.Maps <> R var
R27575:27575 AV.Maps <> y var
R27573:27573 AV.Maps <> x var
R27528:27530 Coq.Init.Logic <> :type_scope:x_'='_x not
R27521:27523 AV.Maps PTree get def
R27527:27527 AV.Maps <> n var
R27525:27525 AV.Maps <> i var
R27531:27534 Coq.Init.Datatypes <> Some constr
R27536:27536 AV.Maps <> y var
R27460:27463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27464:27470 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27472:27473 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27490:27493 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27481:27483 Coq.Init.Logic <> :type_scope:x_'='_x not
R27474:27476 AV.Maps PTree get def
R27480:27480 AV.Maps <> n var
R27478:27478 AV.Maps <> i var
R27484:27487 Coq.Init.Datatypes <> Some constr
R27489:27489 AV.Maps <> y var
R27494:27494 AV.Maps <> R var
R27498:27498 AV.Maps <> y var
R27496:27496 AV.Maps <> x var
R27451:27453 Coq.Init.Logic <> :type_scope:x_'='_x not
R27444:27446 AV.Maps PTree get def
R27450:27450 AV.Maps <> m var
R27448:27448 AV.Maps <> i var
R27454:27457 Coq.Init.Datatypes <> Some constr
R27459:27459 AV.Maps <> x var
R27724:27748 AV.Maps PTree elements_canonical_order' thm
R27724:27748 AV.Maps PTree elements_canonical_order' thm
R27773:27775 AV.Maps PTree get def
R27773:27775 AV.Maps PTree get def
R27884:27886 AV.Maps PTree get def
R27884:27886 AV.Maps PTree get def
prf 27999:28018 PTree elements_extensional
R28048:28048 AV.Maps PTree t def
R28050:28050 AV.Maps <> A var
R28058:28058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28086:28094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28105:28107 Coq.Init.Logic <> :type_scope:x_'='_x not
R28095:28102 AV.Maps PTree elements def
R28104:28104 AV.Maps <> m var
R28108:28115 AV.Maps PTree elements def
R28117:28117 AV.Maps <> n var
R28076:28078 Coq.Init.Logic <> :type_scope:x_'='_x not
R28069:28071 AV.Maps PTree get def
R28075:28075 AV.Maps <> m var
R28073:28073 AV.Maps <> i var
R28079:28081 AV.Maps PTree get def
R28085:28085 AV.Maps <> n var
R28083:28083 AV.Maps <> i var
R28155:28179 AV.Maps PTree elements_canonical_order' thm
R28203:28205 Coq.Init.Logic <> :type_scope:x_'='_x not
R28202:28202 AV.Maps <> x var
R28206:28206 AV.Maps <> y var
R28155:28179 AV.Maps PTree elements_canonical_order' thm
R28203:28205 Coq.Init.Logic <> :type_scope:x_'='_x not
R28202:28202 AV.Maps <> x var
R28206:28206 AV.Maps <> y var
R28248:28250 AV.Maps PTree get def
R28248:28250 AV.Maps PTree get def
prf 28405:28420 PTree xelements_remove
R28450:28450 AV.Maps PTree t def
R28452:28452 AV.Maps <> A var
R28480:28487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28488:28494 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28500:28505 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28565:28572 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28523:28525 Coq.Init.Logic <> :type_scope:x_'='_x not
R28506:28514 AV.Maps PTree xelements def
R28520:28522 Coq.Init.Datatypes <> nil constr
R28518:28518 AV.Maps <> j var
R28516:28516 AV.Maps <> m var
R28528:28531 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28526:28527 AV.Maps <> l1 var
R28559:28562 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28532:28532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28555:28556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28558:28558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28533:28536 AV.Maps PTree prev def
R28539:28549 AV.Maps PTree prev_append def
R28553:28553 AV.Maps <> j var
R28551:28551 AV.Maps <> i var
R28557:28557 AV.Maps <> v var
R28563:28564 AV.Maps <> l2 var
R28601:28603 Coq.Init.Logic <> :type_scope:x_'='_x not
R28573:28581 AV.Maps PTree xelements def
R28598:28600 Coq.Init.Datatypes <> nil constr
R28596:28596 AV.Maps <> j var
R28584:28589 AV.Maps PTree remove def
R28593:28593 AV.Maps <> m var
R28591:28591 AV.Maps <> i var
R28606:28609 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28604:28605 AV.Maps <> l1 var
R28610:28611 AV.Maps <> l2 var
R28471:28473 Coq.Init.Logic <> :type_scope:x_'='_x not
R28464:28466 AV.Maps PTree get def
R28470:28470 AV.Maps <> m var
R28468:28468 AV.Maps <> i var
R28474:28477 Coq.Init.Datatypes <> Some constr
R28479:28479 AV.Maps <> v var
R28660:28664 AV.Maps PTree gleaf thm
R28660:28664 AV.Maps PTree gleaf thm
R28660:28664 AV.Maps PTree gleaf thm
R28747:28769 Coq.Init.Logic <> :type_scope:x_'='_x not
R28706:28714 AV.Maps PTree xelements def
R28744:28746 Coq.Init.Datatypes <> nil constr
R28717:28722 AV.Maps PTree remove def
R28727:28730 AV.Maps PTree Node constr
R28770:28778 AV.Maps PTree xelements def
R29020:29022 Coq.Init.Datatypes <> nil constr
R28827:28828 Coq.Numbers.BinNums <> xH constr
R28833:28836 AV.Maps PTree Node constr
R28841:28844 Coq.Init.Datatypes <> None constr
R28882:28883 Coq.Numbers.BinNums <> xO constr
R28891:28894 AV.Maps PTree Node constr
R28897:28902 AV.Maps PTree remove def
R28949:28950 Coq.Numbers.BinNums <> xI constr
R28958:28961 AV.Maps PTree Node constr
R28969:28974 AV.Maps PTree remove def
R28747:28769 Coq.Init.Logic <> :type_scope:x_'='_x not
R28706:28714 AV.Maps PTree xelements def
R28744:28746 Coq.Init.Datatypes <> nil constr
R28717:28722 AV.Maps PTree remove def
R28727:28730 AV.Maps PTree Node constr
R28770:28778 AV.Maps PTree xelements def
R29020:29022 Coq.Init.Datatypes <> nil constr
R28827:28828 Coq.Numbers.BinNums <> xH constr
R28833:28836 AV.Maps PTree Node constr
R28841:28844 Coq.Init.Datatypes <> None constr
R28882:28883 Coq.Numbers.BinNums <> xO constr
R28891:28894 AV.Maps PTree Node constr
R28897:28902 AV.Maps PTree remove def
R28949:28950 Coq.Numbers.BinNums <> xI constr
R28958:28961 AV.Maps PTree Node constr
R28969:28974 AV.Maps PTree remove def
R29117:29122 AV.Maps PTree remove def
R29117:29122 AV.Maps PTree remove def
R29190:29195 AV.Maps PTree remove def
R29190:29195 AV.Maps PTree remove def
R29328:29329 Coq.Numbers.BinNums <> xI constr
R29328:29329 Coq.Numbers.BinNums <> xI constr
R29399:29416 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29376:29384 AV.Maps PTree xelements def
R29396:29398 Coq.Init.Datatypes <> nil constr
R29390:29391 Coq.Numbers.BinNums <> xO constr
R29476:29493 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29430:29433 Coq.Init.Datatypes <> None constr
R29438:29440 Coq.Init.Datatypes <> nil constr
R29444:29447 Coq.Init.Datatypes <> Some constr
R29465:29468 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29454:29454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29461:29462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29464:29464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29455:29458 AV.Maps PTree prev def
R29469:29471 Coq.Init.Datatypes <> nil constr
R29399:29416 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29376:29384 AV.Maps PTree xelements def
R29396:29398 Coq.Init.Datatypes <> nil constr
R29390:29391 Coq.Numbers.BinNums <> xO constr
R29476:29493 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29430:29433 Coq.Init.Datatypes <> None constr
R29438:29440 Coq.Init.Datatypes <> nil constr
R29444:29447 Coq.Init.Datatypes <> Some constr
R29465:29468 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29454:29454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29461:29462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29464:29464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29455:29458 AV.Maps PTree prev def
R29469:29471 Coq.Init.Datatypes <> nil constr
R29537:29550 AV.Maps PTree xelements_node thm
R29559:29565 Coq.Lists.List <> app_ass syndef
R29537:29550 AV.Maps PTree xelements_node thm
R29537:29550 AV.Maps PTree xelements_node thm
R29559:29565 Coq.Lists.List <> app_ass syndef
R29559:29565 Coq.Lists.List <> app_ass syndef
R29559:29565 Coq.Lists.List <> app_ass syndef
R29559:29565 Coq.Lists.List <> app_ass syndef
R29588:29601 AV.Maps PTree xelements_node thm
R29611:29617 Coq.Lists.List <> app_ass syndef
R29588:29601 AV.Maps PTree xelements_node thm
R29588:29601 AV.Maps PTree xelements_node thm
R29611:29617 Coq.Lists.List <> app_ass syndef
R29611:29617 Coq.Lists.List <> app_ass syndef
R29611:29617 Coq.Lists.List <> app_ass syndef
R29611:29617 Coq.Lists.List <> app_ass syndef
R29650:29651 Coq.Numbers.BinNums <> xO constr
R29650:29651 Coq.Numbers.BinNums <> xO constr
R29717:29734 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29794:29811 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29748:29751 Coq.Init.Datatypes <> None constr
R29756:29758 Coq.Init.Datatypes <> nil constr
R29762:29765 Coq.Init.Datatypes <> Some constr
R29783:29786 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29772:29772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29779:29780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29782:29782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29773:29776 AV.Maps PTree prev def
R29787:29789 Coq.Init.Datatypes <> nil constr
R29812:29820 AV.Maps PTree xelements def
R29832:29834 Coq.Init.Datatypes <> nil constr
R29826:29827 Coq.Numbers.BinNums <> xI constr
R29717:29734 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29794:29811 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29748:29751 Coq.Init.Datatypes <> None constr
R29756:29758 Coq.Init.Datatypes <> nil constr
R29762:29765 Coq.Init.Datatypes <> Some constr
R29783:29786 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29772:29772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29779:29780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29782:29782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29773:29776 AV.Maps PTree prev def
R29787:29789 Coq.Init.Datatypes <> nil constr
R29812:29820 AV.Maps PTree xelements def
R29832:29834 Coq.Init.Datatypes <> nil constr
R29826:29827 Coq.Numbers.BinNums <> xI constr
R29865:29878 AV.Maps PTree xelements_node thm
R29887:29893 Coq.Lists.List <> app_ass syndef
R29865:29878 AV.Maps PTree xelements_node thm
R29865:29878 AV.Maps PTree xelements_node thm
R29887:29893 Coq.Lists.List <> app_ass syndef
R29887:29893 Coq.Lists.List <> app_ass syndef
R29887:29893 Coq.Lists.List <> app_ass syndef
R29916:29929 AV.Maps PTree xelements_node thm
R29939:29945 Coq.Lists.List <> app_ass syndef
R29916:29929 AV.Maps PTree xelements_node thm
R29916:29929 AV.Maps PTree xelements_node thm
R29939:29945 Coq.Lists.List <> app_ass syndef
R29939:29945 Coq.Lists.List <> app_ass syndef
R29939:29945 Coq.Lists.List <> app_ass syndef
R29977:29985 AV.Maps PTree xelements def
R29997:29999 Coq.Init.Datatypes <> nil constr
R29991:29992 Coq.Numbers.BinNums <> xO constr
R30011:30019 AV.Maps PTree xelements def
R30031:30033 Coq.Init.Datatypes <> nil constr
R30025:30026 Coq.Numbers.BinNums <> xI constr
R29977:29985 AV.Maps PTree xelements def
R29997:29999 Coq.Init.Datatypes <> nil constr
R29991:29992 Coq.Numbers.BinNums <> xO constr
R30011:30019 AV.Maps PTree xelements def
R30031:30033 Coq.Init.Datatypes <> nil constr
R30025:30026 Coq.Numbers.BinNums <> xI constr
R30058:30071 AV.Maps PTree xelements_node thm
R30058:30071 AV.Maps PTree xelements_node thm
R30058:30071 AV.Maps PTree xelements_node thm
R30082:30097 AV.Maps PTree prev_append_prev thm
R30082:30097 AV.Maps PTree prev_append_prev thm
R30082:30097 AV.Maps PTree prev_append_prev thm
R30120:30133 AV.Maps PTree xelements_node thm
R30120:30133 AV.Maps PTree xelements_node thm
R30120:30133 AV.Maps PTree xelements_node thm
prf 30160:30174 PTree elements_remove
R30206:30206 AV.Maps PTree t def
R30208:30208 AV.Maps <> A var
R30232:30239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30240:30246 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30252:30253 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30284:30287 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30264:30266 Coq.Init.Logic <> :type_scope:x_'='_x not
R30254:30261 AV.Maps PTree elements def
R30263:30263 AV.Maps <> m var
R30269:30272 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30267:30268 AV.Maps <> l1 var
R30278:30281 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30273:30273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30275:30275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30277:30277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30274:30274 AV.Maps <> i var
R30276:30276 AV.Maps <> v var
R30282:30283 AV.Maps <> l2 var
R30309:30311 Coq.Init.Logic <> :type_scope:x_'='_x not
R30288:30295 AV.Maps PTree elements def
R30298:30303 AV.Maps PTree remove def
R30307:30307 AV.Maps <> m var
R30305:30305 AV.Maps <> i var
R30314:30317 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30312:30313 AV.Maps <> l1 var
R30318:30319 AV.Maps <> l2 var
R30223:30225 Coq.Init.Logic <> :type_scope:x_'='_x not
R30216:30218 AV.Maps PTree get def
R30222:30222 AV.Maps <> m var
R30220:30220 AV.Maps <> i var
R30226:30229 Coq.Init.Datatypes <> Some constr
R30231:30231 AV.Maps <> v var
R30351:30366 AV.Maps PTree xelements_remove thm
R30394:30395 Coq.Numbers.BinNums <> xH constr
R30411:30426 AV.Maps PTree prev_append_prev thm
R30411:30426 AV.Maps PTree prev_append_prev thm
R30411:30426 AV.Maps PTree prev_append_prev thm
def 30454:30458 PTree xfold
R30477:30480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30489:30492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30494:30497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30498:30498 AV.Maps <> B var
R30493:30493 AV.Maps <> A var
R30481:30488 Coq.Numbers.BinNums <> positive ind
R30476:30476 AV.Maps <> B var
R30522:30529 Coq.Numbers.BinNums <> positive ind
R30536:30536 AV.Maps PTree t def
R30538:30538 AV.Maps <> A var
R30545:30545 AV.Maps <> B var
R30561:30561 AV.Maps <> B var
R30576:30576 AV.Maps <> m var
R30589:30592 AV.Maps PTree Leaf constr
R30597:30597 AV.Maps <> v var
R30605:30608 AV.Maps PTree Node constr
R30612:30615 Coq.Init.Datatypes <> None constr
R30640:30644 AV.Maps <> xfold def
R30657:30657 AV.Maps <> v var
R30649:30650 Coq.Numbers.BinNums <> xO constr
R30652:30652 AV.Maps <> i var
R30646:30646 AV.Maps <> f var
R30670:30674 AV.Maps <> xfold def
R30687:30688 AV.Maps <> v1 var
R30679:30680 Coq.Numbers.BinNums <> xI constr
R30682:30682 AV.Maps <> i var
R30676:30676 AV.Maps <> f var
R30696:30699 AV.Maps PTree Node constr
R30704:30707 Coq.Init.Datatypes <> Some constr
R30735:30739 AV.Maps <> xfold def
R30752:30752 AV.Maps <> v var
R30744:30745 Coq.Numbers.BinNums <> xO constr
R30747:30747 AV.Maps <> i var
R30741:30741 AV.Maps <> f var
R30775:30775 AV.Maps <> f var
R30781:30784 AV.Maps PTree prev def
R30786:30786 AV.Maps <> i var
R30777:30778 AV.Maps <> v1 var
R30802:30806 AV.Maps <> xfold def
R30819:30820 AV.Maps <> v2 var
R30811:30812 Coq.Numbers.BinNums <> xI constr
R30814:30814 AV.Maps <> i var
R30808:30808 AV.Maps <> f var
def 30845:30848 PTree fold
R30868:30871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30880:30883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30885:30888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30889:30889 AV.Maps <> B var
R30884:30884 AV.Maps <> A var
R30872:30879 Coq.Numbers.BinNums <> positive ind
R30867:30867 AV.Maps <> B var
R30896:30896 AV.Maps PTree t def
R30898:30898 AV.Maps <> A var
R30905:30905 AV.Maps <> B var
R30915:30919 AV.Maps PTree xfold def
R30928:30928 AV.Maps <> v var
R30926:30926 AV.Maps <> m var
R30923:30924 Coq.Numbers.BinNums <> xH constr
R30921:30921 AV.Maps <> f var
prf 30940:30954 PTree xfold_xelements
R30985:30988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30997:31000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31002:31005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31006:31006 AV.Maps <> B var
R31001:31001 AV.Maps <> A var
R30989:30996 Coq.Numbers.BinNums <> positive ind
R30984:30984 AV.Maps <> B var
R31087:31093 Coq.Init.Logic <> :type_scope:x_'='_x not
R31022:31035 Coq.Lists.List <> fold_left def
R31073:31077 AV.Maps PTree xfold def
R31085:31085 AV.Maps <> v var
R31083:31083 AV.Maps <> m var
R31081:31081 AV.Maps <> i var
R31079:31079 AV.Maps <> f var
R31070:31070 AV.Maps <> l var
R31049:31049 AV.Maps <> f var
R31062:31064 Coq.Init.Datatypes <> snd def
R31066:31066 AV.Maps <> p var
R31054:31056 Coq.Init.Datatypes <> fst def
R31058:31058 AV.Maps <> p var
R31051:31051 AV.Maps <> a var
R31094:31107 Coq.Lists.List <> fold_left def
R31160:31160 AV.Maps <> v var
R31143:31151 AV.Maps PTree xelements def
R31157:31157 AV.Maps <> l var
R31155:31155 AV.Maps <> i var
R31153:31153 AV.Maps <> m var
R31121:31121 AV.Maps <> f var
R31134:31136 Coq.Init.Datatypes <> snd def
R31138:31138 AV.Maps <> p var
R31126:31128 Coq.Init.Datatypes <> fst def
R31130:31130 AV.Maps <> p var
R31123:31123 AV.Maps <> a var
prf 31350:31358 PTree fold_spec
R31389:31392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31401:31404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31406:31409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31410:31410 AV.Maps <> B var
R31405:31405 AV.Maps <> A var
R31393:31400 Coq.Numbers.BinNums <> positive ind
R31388:31388 AV.Maps <> B var
R31417:31417 AV.Maps <> B var
R31424:31424 AV.Maps PTree t def
R31426:31426 AV.Maps <> A var
R31444:31450 Coq.Init.Logic <> :type_scope:x_'='_x not
R31434:31437 AV.Maps PTree fold def
R31443:31443 AV.Maps <> v var
R31441:31441 AV.Maps <> m var
R31439:31439 AV.Maps <> f var
R31451:31464 Coq.Lists.List <> fold_left def
R31512:31512 AV.Maps <> v var
R31500:31507 AV.Maps PTree elements def
R31509:31509 AV.Maps <> m var
R31478:31478 AV.Maps <> f var
R31491:31493 Coq.Init.Datatypes <> snd def
R31495:31495 AV.Maps <> p var
R31483:31485 Coq.Init.Datatypes <> fst def
R31487:31487 AV.Maps <> p var
R31480:31480 AV.Maps <> a var
R31543:31546 AV.Maps PTree fold def
R31549:31556 AV.Maps PTree elements def
R31570:31584 AV.Maps PTree xfold_xelements thm
R31570:31584 AV.Maps PTree xfold_xelements thm
R31570:31584 AV.Maps PTree xfold_xelements thm
def 31612:31616 PTree fold1
R31635:31638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31640:31643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31644:31644 AV.Maps <> B var
R31639:31639 AV.Maps <> A var
R31634:31634 AV.Maps <> B var
R31651:31651 AV.Maps PTree t def
R31653:31653 AV.Maps <> A var
R31660:31660 AV.Maps <> B var
R31676:31676 AV.Maps <> B var
R31691:31691 AV.Maps <> m var
R31704:31707 AV.Maps PTree Leaf constr
R31712:31712 AV.Maps <> v var
R31720:31723 AV.Maps PTree Node constr
R31727:31730 Coq.Init.Datatypes <> None constr
R31755:31759 AV.Maps <> fold1 def
R31765:31765 AV.Maps <> v var
R31761:31761 AV.Maps <> f var
R31778:31782 AV.Maps <> fold1 def
R31788:31789 AV.Maps <> v1 var
R31784:31784 AV.Maps <> f var
R31797:31800 AV.Maps PTree Node constr
R31805:31808 Coq.Init.Datatypes <> Some constr
R31836:31840 AV.Maps <> fold1 def
R31846:31846 AV.Maps <> v var
R31842:31842 AV.Maps <> f var
R31869:31869 AV.Maps <> f var
R31871:31872 AV.Maps <> v1 var
R31887:31891 AV.Maps <> fold1 def
R31897:31898 AV.Maps <> v2 var
R31893:31893 AV.Maps <> f var
prf 31918:31932 PTree fold1_xelements
R31963:31966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31968:31971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31972:31972 AV.Maps <> B var
R31967:31967 AV.Maps <> A var
R31962:31962 AV.Maps <> B var
R32043:32049 Coq.Init.Logic <> :type_scope:x_'='_x not
R31988:32001 Coq.Lists.List <> fold_left def
R32031:32035 AV.Maps PTree fold1 def
R32041:32041 AV.Maps <> v var
R32039:32039 AV.Maps <> m var
R32037:32037 AV.Maps <> f var
R32028:32028 AV.Maps <> l var
R32015:32015 AV.Maps <> f var
R32020:32022 Coq.Init.Datatypes <> snd def
R32024:32024 AV.Maps <> p var
R32017:32017 AV.Maps <> a var
R32050:32063 Coq.Lists.List <> fold_left def
R32108:32108 AV.Maps <> v var
R32091:32099 AV.Maps PTree xelements def
R32105:32105 AV.Maps <> l var
R32103:32103 AV.Maps <> i var
R32101:32101 AV.Maps <> m var
R32077:32077 AV.Maps <> f var
R32082:32084 Coq.Init.Datatypes <> snd def
R32086:32086 AV.Maps <> p var
R32079:32079 AV.Maps <> a var
prf 32298:32307 PTree fold1_spec
R32338:32341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32343:32346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32347:32347 AV.Maps <> B var
R32342:32342 AV.Maps <> A var
R32337:32337 AV.Maps <> B var
R32354:32354 AV.Maps <> B var
R32361:32361 AV.Maps PTree t def
R32363:32363 AV.Maps <> A var
R32382:32388 Coq.Init.Logic <> :type_scope:x_'='_x not
R32371:32375 AV.Maps PTree fold1 def
R32381:32381 AV.Maps <> v var
R32379:32379 AV.Maps <> m var
R32377:32377 AV.Maps <> f var
R32389:32402 Coq.Lists.List <> fold_left def
R32442:32442 AV.Maps <> v var
R32430:32437 AV.Maps PTree elements def
R32439:32439 AV.Maps <> m var
R32416:32416 AV.Maps <> f var
R32421:32423 Coq.Init.Datatypes <> snd def
R32425:32425 AV.Maps <> p var
R32418:32418 AV.Maps <> a var
R32500:32502 Coq.Init.Datatypes <> nil constr
R32513:32515 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32505:32512 Coq.Numbers.BinNums <> positive ind
R32472:32486 AV.Maps PTree fold1_xelements thm
R32500:32502 Coq.Init.Datatypes <> nil constr
R32513:32515 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32505:32512 Coq.Numbers.BinNums <> positive ind
R32472:32486 AV.Maps PTree fold1_xelements thm
R32533:32537 AV.Maps PTree <> mod
R32613:32615 AV.Maps MAP <> mod
mod 32605:32608 <> PMap
def 32631:32633 PMap elt
R32638:32645 Coq.Numbers.BinNums <> positive ind
def 32661:32666 PMap elt_eq
R32671:32673 AV.Coqlib <> peq def
def 32690:32690 PMap t
R32715:32717 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32714:32714 AV.Maps <> A var
R32718:32724 AV.Maps PTree t def
R32726:32726 AV.Maps <> A var
def 32749:32752 PMap init
R32770:32770 AV.Maps <> A var
R32780:32780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32782:32783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32797:32797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32781:32781 AV.Maps <> x var
R32784:32794 AV.Maps PTree empty def
R32796:32796 AV.Maps <> A var
def 32814:32816 PMap get
R32834:32841 Coq.Numbers.BinNums <> positive ind
R32849:32849 AV.Maps PMap t def
R32851:32851 AV.Maps <> A var
R32867:32875 AV.Maps PTree get def
R32880:32882 Coq.Init.Datatypes <> snd def
R32884:32884 AV.Maps <> m var
R32877:32877 AV.Maps <> i var
R32898:32901 Coq.Init.Datatypes <> Some constr
R32916:32919 Coq.Init.Datatypes <> None constr
R32924:32926 Coq.Init.Datatypes <> fst def
R32928:32928 AV.Maps <> m var
def 32953:32955 PMap set
R32973:32980 Coq.Numbers.BinNums <> positive ind
R32988:32988 AV.Maps <> A var
R32996:32996 AV.Maps PMap t def
R32998:32998 AV.Maps <> A var
R33008:33008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33014:33015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33037:33037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33009:33011 Coq.Init.Datatypes <> fst def
R33013:33013 AV.Maps <> m var
R33016:33024 AV.Maps PTree set def
R33031:33033 Coq.Init.Datatypes <> snd def
R33035:33035 AV.Maps <> m var
R33028:33028 AV.Maps <> x var
R33026:33026 AV.Maps <> i var
prf 33051:33052 PMap gi
R33080:33087 Coq.Numbers.BinNums <> positive ind
R33094:33094 AV.Maps <> A var
R33112:33114 Coq.Init.Logic <> :type_scope:x_'='_x not
R33098:33100 AV.Maps PMap get def
R33105:33108 AV.Maps PMap init def
R33110:33110 AV.Maps <> x var
R33102:33102 AV.Maps <> i var
R33115:33115 AV.Maps <> x var
R33146:33149 AV.Maps PMap init def
R33159:33161 AV.Maps PMap get def
R33179:33190 AV.Maps PTree gempty thm
R33179:33190 AV.Maps PTree gempty thm
R33179:33190 AV.Maps PTree gempty thm
prf 33217:33219 PMap gss
R33247:33254 Coq.Numbers.BinNums <> positive ind
R33261:33261 AV.Maps <> A var
R33268:33268 AV.Maps PMap t def
R33270:33270 AV.Maps <> A var
R33291:33293 Coq.Init.Logic <> :type_scope:x_'='_x not
R33274:33276 AV.Maps PMap get def
R33281:33283 AV.Maps PMap set def
R33289:33289 AV.Maps <> m var
R33287:33287 AV.Maps <> x var
R33285:33285 AV.Maps <> i var
R33278:33278 AV.Maps <> i var
R33294:33294 AV.Maps <> x var
R33325:33327 AV.Maps PMap get def
R33337:33339 AV.Maps PMap set def
R33357:33365 AV.Maps PTree gss thm
R33357:33365 AV.Maps PTree gss thm
R33357:33365 AV.Maps PTree gss thm
prf 33392:33394 PMap gso
R33424:33431 Coq.Numbers.BinNums <> positive ind
R33438:33438 AV.Maps <> A var
R33445:33445 AV.Maps PMap t def
R33447:33447 AV.Maps <> A var
R33461:33464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33482:33484 Coq.Init.Logic <> :type_scope:x_'='_x not
R33465:33467 AV.Maps PMap get def
R33472:33474 AV.Maps PMap set def
R33480:33480 AV.Maps <> m var
R33478:33478 AV.Maps <> x var
R33476:33476 AV.Maps <> j var
R33469:33469 AV.Maps <> i var
R33485:33487 AV.Maps PMap get def
R33491:33491 AV.Maps <> m var
R33489:33489 AV.Maps <> i var
R33456:33459 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33455:33455 AV.Maps <> i var
R33460:33460 AV.Maps <> j var
R33522:33524 AV.Maps PMap get def
R33534:33536 AV.Maps PMap set def
R33554:33562 AV.Maps PTree gso thm
R33554:33562 AV.Maps PTree gso thm
R33554:33562 AV.Maps PTree gso thm
R33554:33562 AV.Maps PTree gso thm
prf 33589:33594 PMap gsspec
R33624:33631 Coq.Numbers.BinNums <> positive ind
R33638:33638 AV.Maps <> A var
R33645:33645 AV.Maps PMap t def
R33647:33647 AV.Maps <> A var
R33672:33674 Coq.Init.Logic <> :type_scope:x_'='_x not
R33655:33657 AV.Maps PMap get def
R33662:33664 AV.Maps PMap set def
R33670:33670 AV.Maps <> m var
R33668:33668 AV.Maps <> x var
R33666:33666 AV.Maps <> j var
R33659:33659 AV.Maps <> i var
R33678:33680 AV.Coqlib <> peq def
R33684:33684 AV.Maps <> j var
R33682:33682 AV.Maps <> i var
R33698:33700 AV.Maps PMap get def
R33704:33704 AV.Maps <> m var
R33702:33702 AV.Maps <> i var
R33691:33691 AV.Maps <> x var
R33738:33740 AV.Coqlib <> peq def
R33738:33740 AV.Coqlib <> peq def
R33770:33772 AV.Maps PMap gss thm
R33770:33772 AV.Maps PMap gss thm
R33792:33794 AV.Maps PMap gso thm
R33792:33794 AV.Maps PMap gso thm
prf 33821:33827 PMap gsident
R33857:33864 Coq.Numbers.BinNums <> positive ind
R33871:33871 AV.Maps PMap t def
R33873:33873 AV.Maps <> A var
R33906:33908 Coq.Init.Logic <> :type_scope:x_'='_x not
R33881:33883 AV.Maps PMap get def
R33888:33890 AV.Maps PMap set def
R33904:33904 AV.Maps <> m var
R33895:33897 AV.Maps PMap get def
R33901:33901 AV.Maps <> m var
R33899:33899 AV.Maps <> i var
R33892:33892 AV.Maps <> i var
R33885:33885 AV.Maps <> j var
R33909:33911 AV.Maps PMap get def
R33915:33915 AV.Maps <> m var
R33913:33913 AV.Maps <> j var
R33949:33951 AV.Coqlib <> peq def
R33949:33951 AV.Coqlib <> peq def
R33983:33985 AV.Maps PMap gss thm
R33983:33985 AV.Maps PMap gss thm
R33983:33985 AV.Maps PMap gss thm
R34007:34009 AV.Maps PMap gso thm
R34007:34009 AV.Maps PMap gso thm
R34007:34009 AV.Maps PMap gso thm
R34007:34009 AV.Maps PMap gso thm
def 34039:34041 PMap map
R34062:34065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34066:34066 AV.Maps <> B var
R34061:34061 AV.Maps <> A var
R34074:34074 AV.Maps PMap t def
R34076:34076 AV.Maps <> A var
R34081:34081 AV.Maps PMap t def
R34083:34083 AV.Maps <> B var
R34092:34092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34102:34103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34124:34124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34093:34093 AV.Maps <> f var
R34096:34098 Coq.Init.Datatypes <> fst def
R34100:34100 AV.Maps <> m var
R34104:34113 AV.Maps PTree map1 def
R34118:34120 Coq.Init.Datatypes <> snd def
R34122:34122 AV.Maps <> m var
R34115:34115 AV.Maps <> f var
prf 34138:34141 PMap gmap
R34172:34175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34176:34176 AV.Maps <> B var
R34171:34171 AV.Maps <> A var
R34183:34190 Coq.Numbers.BinNums <> positive ind
R34197:34197 AV.Maps PMap t def
R34199:34199 AV.Maps <> A var
R34222:34224 Coq.Init.Logic <> :type_scope:x_'='_x not
R34207:34209 AV.Maps PMap get def
R34214:34216 AV.Maps PMap map def
R34220:34220 AV.Maps <> m var
R34218:34218 AV.Maps <> f var
R34211:34211 AV.Maps <> i var
R34225:34225 AV.Maps <> f var
R34227:34229 AV.Maps PMap get def
R34233:34233 AV.Maps <> m var
R34231:34231 AV.Maps <> i var
R34265:34267 AV.Maps PMap map def
R34277:34279 AV.Maps PMap get def
R34297:34307 AV.Maps PTree gmap1 thm
R34297:34307 AV.Maps PTree gmap1 thm
R34297:34307 AV.Maps PTree gmap1 thm
R34321:34330 AV.Coqlib <> option_map def
R34343:34351 AV.Maps PTree get def
R34356:34358 Coq.Init.Datatypes <> snd def
R34343:34351 AV.Maps PTree get def
R34356:34358 Coq.Init.Datatypes <> snd def
prf 34389:34392 PMap set2
R34420:34422 AV.Maps PMap elt def
R34431:34431 AV.Maps <> A var
R34438:34438 AV.Maps PMap t def
R34440:34440 AV.Maps <> A var
R34467:34469 Coq.Init.Logic <> :type_scope:x_'='_x not
R34448:34450 AV.Maps PMap set def
R34457:34459 AV.Maps PMap set def
R34465:34465 AV.Maps <> m var
R34463:34463 AV.Maps <> x var
R34461:34461 AV.Maps <> i var
R34454:34454 AV.Maps <> y var
R34452:34452 AV.Maps <> i var
R34470:34472 AV.Maps PMap set def
R34478:34478 AV.Maps <> m var
R34476:34476 AV.Maps <> y var
R34474:34474 AV.Maps <> i var
R34509:34511 AV.Maps PMap set def
R34534:34543 AV.Maps PTree set2 thm
R34534:34543 AV.Maps PTree set2 thm
R34558:34561 AV.Maps PMap <> mod
modtype 34661:34672 <> INDEXED_TYPE
ax 34687:34687 INDEXED_TYPE t
ax 34708:34712 INDEXED_TYPE index
R34716:34719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34720:34727 Coq.Numbers.BinNums <> positive ind
R34715:34715 AV.Maps INDEXED_TYPE t defax
ax 34738:34746 INDEXED_TYPE index_inj
R34762:34762 AV.Maps INDEXED_TYPE t defax
R34783:34786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34788:34790 Coq.Init.Logic <> :type_scope:x_'='_x not
R34787:34787 AV.Maps <> x var
R34791:34791 AV.Maps <> y var
R34773:34775 Coq.Init.Logic <> :type_scope:x_'='_x not
R34766:34770 AV.Maps INDEXED_TYPE index defax
R34772:34772 AV.Maps <> x var
R34776:34780 AV.Maps INDEXED_TYPE index defax
R34782:34782 AV.Maps <> y var
ax 34806:34807 INDEXED_TYPE eq
R34823:34823 AV.Maps INDEXED_TYPE t defax
R34827:34827 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34833:34837 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34844:34844 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34829:34831 Coq.Init.Logic <> :type_scope:x_'='_x not
R34828:34828 AV.Maps <> x var
R34832:34832 AV.Maps <> y var
R34839:34842 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34838:34838 AV.Maps <> x var
R34843:34843 AV.Maps <> y var
R34851:34862 AV.Maps INDEXED_TYPE <> modtype
R34881:34892 AV.Maps INDEXED_TYPE <> mod
mod 34873:34876 <> IMap
def 34910:34912 IMap elt
R34917:34919 AV.Maps X t defax
def 34935:34940 IMap elt_eq
R34945:34948 AV.Maps X eq defax
def 34964:34964 IMap t
R34972:34975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34984:34989 AV.Maps PMap t def
def 35005:35008 IMap init
R35024:35024 AV.Maps <> A var
R35030:35038 AV.Maps PMap init def
R35040:35040 AV.Maps <> x var
def 35056:35058 IMap get
R35074:35076 AV.Maps X t defax
R35083:35083 AV.Maps IMap t def
R35085:35085 AV.Maps <> A var
R35091:35098 AV.Maps PMap get def
R35112:35112 AV.Maps <> m var
R35101:35107 AV.Maps X index defax
R35109:35109 AV.Maps <> i var
def 35128:35130 IMap set
R35146:35148 AV.Maps X t defax
R35155:35155 AV.Maps <> A var
R35162:35162 AV.Maps IMap t def
R35164:35164 AV.Maps <> A var
R35170:35177 AV.Maps PMap set def
R35193:35193 AV.Maps <> m var
R35191:35191 AV.Maps <> v var
R35180:35186 AV.Maps X index defax
R35188:35188 AV.Maps <> i var
def 35209:35211 IMap map
R35230:35233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35234:35234 AV.Maps <> B var
R35229:35229 AV.Maps <> A var
R35241:35241 AV.Maps IMap t def
R35243:35243 AV.Maps <> A var
R35248:35248 AV.Maps IMap t def
R35250:35250 AV.Maps <> B var
R35255:35262 AV.Maps PMap map def
R35266:35266 AV.Maps <> m var
R35264:35264 AV.Maps <> f var
prf 35278:35279 IMap gi
R35307:35307 AV.Maps <> A var
R35314:35316 AV.Maps X t defax
R35334:35336 Coq.Init.Logic <> :type_scope:x_'='_x not
R35320:35322 AV.Maps IMap get def
R35327:35330 AV.Maps IMap init def
R35332:35332 AV.Maps <> x var
R35324:35324 AV.Maps <> i var
R35337:35337 AV.Maps <> x var
R35368:35370 AV.Maps IMap get def
R35373:35376 AV.Maps IMap init def
R35385:35391 AV.Maps PMap gi thm
R35385:35391 AV.Maps PMap gi thm
prf 35410:35412 IMap gss
R35440:35442 AV.Maps X t defax
R35449:35449 AV.Maps <> A var
R35456:35456 AV.Maps IMap t def
R35458:35458 AV.Maps <> A var
R35479:35481 Coq.Init.Logic <> :type_scope:x_'='_x not
R35462:35464 AV.Maps IMap get def
R35469:35471 AV.Maps IMap set def
R35477:35477 AV.Maps <> m var
R35475:35475 AV.Maps <> x var
R35473:35473 AV.Maps <> i var
R35466:35466 AV.Maps <> i var
R35482:35482 AV.Maps <> x var
R35513:35515 AV.Maps IMap get def
R35518:35520 AV.Maps IMap set def
R35529:35536 AV.Maps PMap gss thm
R35529:35536 AV.Maps PMap gss thm
prf 35555:35557 IMap gso
R35587:35589 AV.Maps X t defax
R35596:35596 AV.Maps <> A var
R35603:35603 AV.Maps IMap t def
R35605:35605 AV.Maps <> A var
R35619:35622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35640:35642 Coq.Init.Logic <> :type_scope:x_'='_x not
R35623:35625 AV.Maps IMap get def
R35630:35632 AV.Maps IMap set def
R35638:35638 AV.Maps <> m var
R35636:35636 AV.Maps <> x var
R35634:35634 AV.Maps <> j var
R35627:35627 AV.Maps <> i var
R35643:35645 AV.Maps IMap get def
R35649:35649 AV.Maps <> m var
R35647:35647 AV.Maps <> i var
R35614:35617 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35613:35613 AV.Maps <> i var
R35618:35618 AV.Maps <> j var
R35680:35682 AV.Maps IMap get def
R35685:35687 AV.Maps IMap set def
R35696:35703 AV.Maps PMap gso thm
R35696:35703 AV.Maps PMap gso thm
R35737:35747 AV.Maps X index_inj prfax
R35737:35747 AV.Maps X index_inj prfax
prf 35772:35777 IMap gsspec
R35807:35809 AV.Maps X t defax
R35816:35816 AV.Maps <> A var
R35823:35823 AV.Maps IMap t def
R35825:35825 AV.Maps <> A var
R35850:35852 Coq.Init.Logic <> :type_scope:x_'='_x not
R35833:35835 AV.Maps IMap get def
R35840:35842 AV.Maps IMap set def
R35848:35848 AV.Maps <> m var
R35846:35846 AV.Maps <> x var
R35844:35844 AV.Maps <> j var
R35837:35837 AV.Maps <> i var
R35856:35859 AV.Maps X eq defax
R35863:35863 AV.Maps <> j var
R35861:35861 AV.Maps <> i var
R35877:35879 AV.Maps IMap get def
R35883:35883 AV.Maps <> m var
R35881:35881 AV.Maps <> i var
R35870:35870 AV.Maps <> x var
R35914:35916 AV.Maps IMap get def
R35919:35921 AV.Maps IMap set def
R35936:35946 AV.Maps PMap gsspec thm
R35936:35946 AV.Maps PMap gsspec thm
R35936:35946 AV.Maps PMap gsspec thm
R35959:35962 AV.Maps X eq defax
R35959:35962 AV.Maps X eq defax
R35998:36005 AV.Coqlib <> peq_true thm
R35998:36005 AV.Coqlib <> peq_true thm
R35998:36005 AV.Coqlib <> peq_true thm
R36033:36041 AV.Coqlib <> peq_false thm
R36033:36041 AV.Coqlib <> peq_false thm
R36033:36041 AV.Coqlib <> peq_false thm
R36033:36041 AV.Coqlib <> peq_false thm
R36087:36097 AV.Maps X index_inj prfax
R36087:36097 AV.Maps X index_inj prfax
prf 36122:36125 IMap gmap
R36156:36159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36160:36160 AV.Maps <> B var
R36155:36155 AV.Maps <> A var
R36167:36169 AV.Maps X t defax
R36176:36176 AV.Maps IMap t def
R36178:36178 AV.Maps <> A var
R36201:36203 Coq.Init.Logic <> :type_scope:x_'='_x not
R36186:36188 AV.Maps IMap get def
R36193:36195 AV.Maps IMap map def
R36199:36199 AV.Maps <> m var
R36197:36197 AV.Maps <> f var
R36190:36190 AV.Maps <> i var
R36204:36204 AV.Maps <> f var
R36206:36208 AV.Maps IMap get def
R36212:36212 AV.Maps <> m var
R36210:36210 AV.Maps <> i var
R36244:36246 AV.Maps IMap map def
R36249:36251 AV.Maps IMap get def
R36260:36268 AV.Maps PMap gmap thm
R36260:36268 AV.Maps PMap gmap thm
prf 36287:36290 IMap set2
R36318:36320 AV.Maps IMap elt def
R36329:36329 AV.Maps <> A var
R36336:36336 AV.Maps IMap t def
R36338:36338 AV.Maps <> A var
R36365:36367 Coq.Init.Logic <> :type_scope:x_'='_x not
R36346:36348 AV.Maps IMap set def
R36355:36357 AV.Maps IMap set def
R36363:36363 AV.Maps <> m var
R36361:36361 AV.Maps <> x var
R36359:36359 AV.Maps <> i var
R36352:36352 AV.Maps <> y var
R36350:36350 AV.Maps <> i var
R36368:36370 AV.Maps IMap set def
R36376:36376 AV.Maps <> m var
R36374:36374 AV.Maps <> y var
R36372:36372 AV.Maps <> i var
R36407:36409 AV.Maps IMap set def
R36418:36426 AV.Maps PMap set2 thm
R36418:36426 AV.Maps PMap set2 thm
R36441:36444 AV.Maps IMap <> mod
mod 36455:36462 <> ZIndexed
def 36478:36478 ZIndexed t
R36483:36483 Coq.Numbers.BinNums <> Z ind
def 36499:36503 ZIndexed index
R36509:36509 Coq.Numbers.BinNums <> Z ind
R36513:36520 Coq.Numbers.BinNums <> positive ind
R36535:36535 AV.Maps <> z var
R36548:36549 Coq.Numbers.BinNums <> Z0 constr
R36554:36555 Coq.Numbers.BinNums <> xH constr
R36563:36566 Coq.Numbers.BinNums <> Zpos constr
R36573:36574 Coq.Numbers.BinNums <> xO constr
R36584:36587 Coq.Numbers.BinNums <> Zneg constr
R36594:36595 Coq.Numbers.BinNums <> xI constr
prf 36616:36624 ZIndexed index_inj
R36640:36640 Coq.Numbers.BinNums <> Z ind
R36661:36664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36666:36668 Coq.Init.Logic <> :type_scope:x_'='_x not
R36665:36665 AV.Maps <> x var
R36669:36669 AV.Maps <> y var
R36651:36653 Coq.Init.Logic <> :type_scope:x_'='_x not
R36644:36648 AV.Maps ZIndexed index def
R36650:36650 AV.Maps <> x var
R36654:36658 AV.Maps ZIndexed index def
R36660:36660 AV.Maps <> y var
R36692:36696 AV.Maps ZIndexed index def
def 36822:36823 ZIndexed eq
R36828:36830 AV.Coqlib <> zeq def
R36837:36844 AV.Maps ZIndexed <> mod
R36863:36866 AV.Maps IMap <> modtype
R36868:36875 AV.Maps ZIndexed <> modtype
mod 36855:36858 <> ZMap
mod 36887:36894 <> NIndexed
def 36910:36910 NIndexed t
R36915:36915 Coq.Numbers.BinNums <> N ind
def 36931:36935 NIndexed index
R36941:36941 Coq.Numbers.BinNums <> N ind
R36945:36952 Coq.Numbers.BinNums <> positive ind
R36967:36967 AV.Maps <> n var
R36980:36981 Coq.Numbers.BinNums <> N0 constr
R36986:36987 Coq.Numbers.BinNums <> xH constr
R36995:36998 Coq.Numbers.BinNums <> Npos constr
R37005:37006 Coq.Numbers.BinNums <> xO constr
prf 37027:37035 NIndexed index_inj
R37051:37051 Coq.Numbers.BinNums <> N ind
R37072:37075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37077:37079 Coq.Init.Logic <> :type_scope:x_'='_x not
R37076:37076 AV.Maps <> x var
R37080:37080 AV.Maps <> y var
R37062:37064 Coq.Init.Logic <> :type_scope:x_'='_x not
R37055:37059 AV.Maps NIndexed index def
R37061:37061 AV.Maps <> x var
R37065:37069 AV.Maps NIndexed index def
R37071:37071 AV.Maps <> y var
R37103:37107 AV.Maps NIndexed index def
prf 37212:37213 NIndexed eq
R37229:37229 Coq.Numbers.BinNums <> N ind
R37233:37233 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37239:37243 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37250:37250 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37235:37237 Coq.Init.Logic <> :type_scope:x_'='_x not
R37234:37234 AV.Maps <> x var
R37238:37238 AV.Maps <> y var
R37245:37248 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37244:37244 AV.Maps <> x var
R37249:37249 AV.Maps <> y var
R37289:37291 AV.Coqlib <> peq def
R37289:37291 AV.Coqlib <> peq def
R37305:37312 AV.Maps NIndexed <> mod
R37331:37334 AV.Maps IMap <> modtype
R37336:37343 AV.Maps NIndexed <> modtype
mod 37323:37326 <> NMap
modtype 37434:37446 <> EQUALITY_TYPE
ax 37461:37461 EQUALITY_TYPE t
ax 37482:37483 EQUALITY_TYPE eq
R37499:37499 AV.Maps EQUALITY_TYPE t defax
R37503:37503 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37509:37513 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37520:37520 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37505:37507 Coq.Init.Logic <> :type_scope:x_'='_x not
R37504:37504 AV.Maps <> x var
R37508:37508 AV.Maps <> y var
R37515:37518 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37514:37514 AV.Maps <> x var
R37519:37519 AV.Maps <> y var
R37527:37539 AV.Maps EQUALITY_TYPE <> modtype
R37558:37570 AV.Maps EQUALITY_TYPE <> mod
R37576:37578 AV.Maps MAP <> mod
mod 37550:37553 <> EMap
def 37595:37597 EMap elt
R37602:37604 AV.Maps X t defax
def 37620:37625 EMap elt_eq
R37630:37633 AV.Maps X eq defax
def 37649:37649 EMap t
R37667:37670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37671:37671 AV.Maps <> A var
R37664:37666 AV.Maps X t defax
def 37687:37690 EMap init
R37706:37706 AV.Maps <> A var
R37720:37722 AV.Maps X t defax
R37728:37728 AV.Maps <> v var
def 37744:37746 EMap get
R37762:37764 AV.Maps X t defax
R37771:37771 AV.Maps EMap t def
R37773:37773 AV.Maps <> A var
R37779:37779 AV.Maps <> m var
R37781:37781 AV.Maps <> x var
def 37797:37799 EMap set
R37815:37817 AV.Maps X t defax
R37824:37824 AV.Maps <> A var
R37831:37831 AV.Maps EMap t def
R37833:37833 AV.Maps <> A var
R37851:37853 AV.Maps X t defax
R37862:37865 AV.Maps X eq defax
R37869:37869 AV.Maps <> x var
R37867:37867 AV.Maps <> y var
R37883:37883 AV.Maps <> m var
R37885:37885 AV.Maps <> y var
R37876:37876 AV.Maps <> v var
prf 37896:37897 EMap gi
R37925:37927 AV.Maps EMap elt def
R37934:37934 AV.Maps <> A var
R37946:37948 Coq.Init.Logic <> :type_scope:x_'='_x not
R37938:37941 AV.Maps EMap init def
R37945:37945 AV.Maps <> i var
R37943:37943 AV.Maps <> x var
R37949:37949 AV.Maps <> x var
prf 38001:38003 EMap gss
R38031:38033 AV.Maps EMap elt def
R38040:38040 AV.Maps <> A var
R38047:38047 AV.Maps EMap t def
R38049:38049 AV.Maps <> A var
R38066:38068 Coq.Init.Logic <> :type_scope:x_'='_x not
R38054:38056 AV.Maps EMap set def
R38062:38062 AV.Maps <> m var
R38060:38060 AV.Maps <> x var
R38058:38058 AV.Maps <> i var
R38065:38065 AV.Maps <> i var
R38069:38069 AV.Maps <> x var
R38100:38102 AV.Maps EMap set def
R38111:38114 AV.Maps X eq defax
R38111:38114 AV.Maps X eq defax
prf 38168:38170 EMap gso
R38200:38202 AV.Maps EMap elt def
R38209:38209 AV.Maps <> A var
R38216:38216 AV.Maps EMap t def
R38218:38218 AV.Maps <> A var
R38232:38235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38249:38251 Coq.Init.Logic <> :type_scope:x_'='_x not
R38237:38239 AV.Maps EMap set def
R38245:38245 AV.Maps <> m var
R38243:38243 AV.Maps <> x var
R38241:38241 AV.Maps <> j var
R38248:38248 AV.Maps <> i var
R38252:38252 AV.Maps <> m var
R38254:38254 AV.Maps <> i var
R38227:38230 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38226:38226 AV.Maps <> i var
R38231:38231 AV.Maps <> j var
R38285:38287 AV.Maps EMap set def
R38296:38299 AV.Maps X eq defax
R38296:38299 AV.Maps X eq defax
prf 38358:38363 EMap gsspec
R38393:38395 AV.Maps EMap elt def
R38402:38402 AV.Maps <> A var
R38409:38409 AV.Maps EMap t def
R38411:38411 AV.Maps <> A var
R38436:38438 Coq.Init.Logic <> :type_scope:x_'='_x not
R38419:38421 AV.Maps EMap get def
R38426:38428 AV.Maps EMap set def
R38434:38434 AV.Maps <> m var
R38432:38432 AV.Maps <> x var
R38430:38430 AV.Maps <> j var
R38423:38423 AV.Maps <> i var
R38442:38447 AV.Maps EMap elt_eq def
R38451:38451 AV.Maps <> j var
R38449:38449 AV.Maps <> i var
R38465:38467 AV.Maps EMap get def
R38471:38471 AV.Maps <> m var
R38469:38469 AV.Maps <> i var
R38458:38458 AV.Maps <> x var
R38502:38504 AV.Maps EMap get def
R38507:38509 AV.Maps EMap set def
R38512:38517 AV.Maps EMap elt_eq def
prf 38548:38554 EMap gsident
R38584:38586 AV.Maps EMap elt def
R38593:38593 AV.Maps EMap t def
R38595:38595 AV.Maps <> A var
R38624:38626 Coq.Init.Logic <> :type_scope:x_'='_x not
R38599:38601 AV.Maps EMap get def
R38606:38608 AV.Maps EMap set def
R38622:38622 AV.Maps <> m var
R38613:38615 AV.Maps EMap get def
R38619:38619 AV.Maps <> m var
R38617:38617 AV.Maps <> i var
R38610:38610 AV.Maps <> i var
R38603:38603 AV.Maps <> j var
R38627:38629 AV.Maps EMap get def
R38633:38633 AV.Maps <> m var
R38631:38631 AV.Maps <> j var
R38664:38666 AV.Maps EMap get def
R38669:38671 AV.Maps EMap set def
R38680:38683 AV.Maps X eq defax
R38680:38683 AV.Maps X eq defax
def 38747:38749 EMap map
R38768:38771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38772:38772 AV.Maps <> B var
R38767:38767 AV.Maps <> A var
R38779:38779 AV.Maps EMap t def
R38781:38781 AV.Maps <> A var
R38799:38801 AV.Maps X t defax
R38807:38807 AV.Maps <> f var
R38809:38809 AV.Maps <> m var
R38811:38811 AV.Maps <> x var
prf 38823:38826 EMap gmap
R38857:38860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38861:38861 AV.Maps <> B var
R38856:38856 AV.Maps <> A var
R38868:38870 AV.Maps EMap elt def
R38877:38877 AV.Maps EMap t def
R38879:38879 AV.Maps <> A var
R38902:38904 Coq.Init.Logic <> :type_scope:x_'='_x not
R38887:38889 AV.Maps EMap get def
R38894:38896 AV.Maps EMap map def
R38900:38900 AV.Maps <> m var
R38898:38898 AV.Maps <> f var
R38891:38891 AV.Maps <> i var
R38905:38905 AV.Maps <> f var
R38907:38909 AV.Maps EMap get def
R38913:38913 AV.Maps <> m var
R38911:38911 AV.Maps <> i var
R38945:38947 AV.Maps EMap get def
R38950:38952 AV.Maps EMap map def
R38979:38982 AV.Maps EMap <> mod
R39094:39105 AV.Maps INDEXED_TYPE <> mod
mod 39085:39089 <> ITree
def 39123:39125 ITree elt
R39130:39132 AV.Maps X t defax
def 39148:39153 ITree elt_eq
R39158:39161 AV.Maps X eq defax
def 39177:39177 ITree t
R39185:39188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39197:39203 AV.Maps PTree t def
def 39220:39224 ITree empty
R39237:39237 AV.Maps ITree t def
R39239:39239 AV.Maps <> A var
R39244:39254 AV.Maps PTree empty def
R39256:39256 AV.Maps <> A var
def 39272:39274 ITree get
R39290:39292 AV.Maps ITree elt def
R39299:39299 AV.Maps ITree t def
R39301:39301 AV.Maps <> A var
R39305:39310 Coq.Init.Datatypes <> option ind
R39312:39312 AV.Maps <> A var
R39317:39325 AV.Maps PTree get def
R39339:39339 AV.Maps <> m var
R39328:39334 AV.Maps X index defax
R39336:39336 AV.Maps <> k var
def 39355:39357 ITree set
R39373:39375 AV.Maps ITree elt def
R39382:39382 AV.Maps <> A var
R39389:39389 AV.Maps ITree t def
R39391:39391 AV.Maps <> A var
R39395:39395 AV.Maps ITree t def
R39397:39397 AV.Maps <> A var
R39402:39410 AV.Maps PTree set def
R39426:39426 AV.Maps <> m var
R39424:39424 AV.Maps <> v var
R39413:39419 AV.Maps X index defax
R39421:39421 AV.Maps <> k var
def 39442:39447 ITree remove
R39463:39465 AV.Maps ITree elt def
R39472:39472 AV.Maps ITree t def
R39474:39474 AV.Maps <> A var
R39478:39478 AV.Maps ITree t def
R39480:39480 AV.Maps <> A var
R39485:39496 AV.Maps PTree remove def
R39510:39510 AV.Maps <> m var
R39499:39505 AV.Maps X index defax
R39507:39507 AV.Maps <> k var
prf 39524:39529 ITree gempty
R39557:39559 AV.Maps ITree elt def
R39578:39580 Coq.Init.Logic <> :type_scope:x_'='_x not
R39563:39565 AV.Maps ITree get def
R39570:39574 AV.Maps ITree empty def
R39576:39576 AV.Maps <> A var
R39567:39567 AV.Maps <> i var
R39581:39584 Coq.Init.Datatypes <> None constr
R39614:39625 AV.Maps PTree gempty thm
R39614:39625 AV.Maps PTree gempty thm
prf 39645:39647 ITree gss
R39675:39677 AV.Maps ITree elt def
R39684:39684 AV.Maps <> A var
R39691:39691 AV.Maps ITree t def
R39693:39693 AV.Maps <> A var
R39714:39716 Coq.Init.Logic <> :type_scope:x_'='_x not
R39697:39699 AV.Maps ITree get def
R39704:39706 AV.Maps ITree set def
R39712:39712 AV.Maps <> m var
R39710:39710 AV.Maps <> x var
R39708:39708 AV.Maps <> i var
R39701:39701 AV.Maps <> i var
R39717:39720 Coq.Init.Datatypes <> Some constr
R39722:39722 AV.Maps <> x var
R39752:39760 AV.Maps PTree gss thm
R39752:39760 AV.Maps PTree gss thm
prf 39780:39782 ITree gso
R39812:39814 AV.Maps ITree elt def
R39821:39821 AV.Maps <> A var
R39828:39828 AV.Maps ITree t def
R39830:39830 AV.Maps <> A var
R39844:39847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39865:39867 Coq.Init.Logic <> :type_scope:x_'='_x not
R39848:39850 AV.Maps ITree get def
R39855:39857 AV.Maps ITree set def
R39863:39863 AV.Maps <> m var
R39861:39861 AV.Maps <> x var
R39859:39859 AV.Maps <> j var
R39852:39852 AV.Maps <> i var
R39868:39870 AV.Maps ITree get def
R39874:39874 AV.Maps <> m var
R39872:39872 AV.Maps <> i var
R39839:39842 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39838:39838 AV.Maps <> i var
R39843:39843 AV.Maps <> j var
R39904:39912 AV.Maps PTree gso thm
R39904:39912 AV.Maps PTree gso thm
R39942:39952 AV.Maps X index_inj prfax
R39942:39952 AV.Maps X index_inj prfax
prf 39978:39983 ITree gsspec
R40013:40015 AV.Maps ITree elt def
R40022:40022 AV.Maps <> A var
R40029:40029 AV.Maps ITree t def
R40031:40031 AV.Maps <> A var
R40056:40058 Coq.Init.Logic <> :type_scope:x_'='_x not
R40039:40041 AV.Maps ITree get def
R40046:40048 AV.Maps ITree set def
R40054:40054 AV.Maps <> m var
R40052:40052 AV.Maps <> x var
R40050:40050 AV.Maps <> j var
R40043:40043 AV.Maps <> i var
R40062:40067 AV.Maps ITree elt_eq def
R40071:40071 AV.Maps <> j var
R40069:40069 AV.Maps <> i var
R40090:40092 AV.Maps ITree get def
R40096:40096 AV.Maps <> m var
R40094:40094 AV.Maps <> i var
R40078:40081 Coq.Init.Datatypes <> Some constr
R40083:40083 AV.Maps <> x var
R40130:40135 AV.Maps ITree elt_eq def
R40130:40135 AV.Maps ITree elt_eq def
R40158:40160 AV.Maps ITree gss thm
R40158:40160 AV.Maps ITree gss thm
R40169:40171 AV.Maps ITree gso thm
R40169:40171 AV.Maps ITree gso thm
prf 40197:40199 ITree grs
R40227:40229 AV.Maps ITree elt def
R40236:40236 AV.Maps ITree t def
R40238:40238 AV.Maps <> A var
R40260:40262 Coq.Init.Logic <> :type_scope:x_'='_x not
R40242:40244 AV.Maps ITree get def
R40249:40254 AV.Maps ITree remove def
R40258:40258 AV.Maps <> m var
R40256:40256 AV.Maps <> i var
R40246:40246 AV.Maps <> i var
R40263:40266 Coq.Init.Datatypes <> None constr
R40296:40304 AV.Maps PTree grs thm
R40296:40304 AV.Maps PTree grs thm
prf 40324:40326 ITree gro
R40356:40358 AV.Maps ITree elt def
R40365:40365 AV.Maps ITree t def
R40367:40367 AV.Maps <> A var
R40381:40384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40403:40405 Coq.Init.Logic <> :type_scope:x_'='_x not
R40385:40387 AV.Maps ITree get def
R40392:40397 AV.Maps ITree remove def
R40401:40401 AV.Maps <> m var
R40399:40399 AV.Maps <> j var
R40389:40389 AV.Maps <> i var
R40406:40408 AV.Maps ITree get def
R40412:40412 AV.Maps <> m var
R40410:40410 AV.Maps <> i var
R40376:40379 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40375:40375 AV.Maps <> i var
R40380:40380 AV.Maps <> j var
R40442:40450 AV.Maps PTree gro thm
R40442:40450 AV.Maps PTree gro thm
R40480:40490 AV.Maps X index_inj prfax
R40480:40490 AV.Maps X index_inj prfax
prf 40516:40521 ITree grspec
R40551:40553 AV.Maps ITree elt def
R40560:40560 AV.Maps ITree t def
R40562:40562 AV.Maps <> A var
R40588:40590 Coq.Init.Logic <> :type_scope:x_'='_x not
R40570:40572 AV.Maps ITree get def
R40577:40582 AV.Maps ITree remove def
R40586:40586 AV.Maps <> m var
R40584:40584 AV.Maps <> j var
R40574:40574 AV.Maps <> i var
R40594:40599 AV.Maps ITree elt_eq def
R40603:40603 AV.Maps <> j var
R40601:40601 AV.Maps <> i var
R40620:40622 AV.Maps ITree get def
R40626:40626 AV.Maps <> m var
R40624:40624 AV.Maps <> i var
R40610:40613 Coq.Init.Datatypes <> None constr
R40660:40665 AV.Maps ITree elt_eq def
R40660:40665 AV.Maps ITree elt_eq def
R40688:40690 AV.Maps ITree grs thm
R40688:40690 AV.Maps ITree grs thm
R40699:40701 AV.Maps ITree gro thm
R40699:40701 AV.Maps ITree gro thm
def 40731:40733 ITree beq
R40754:40754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40769:40773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40777:40780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40784:40787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40788:40791 Coq.Init.Datatypes <> bool ind
R40781:40781 AV.Maps ITree t def
R40783:40783 AV.Maps <> A var
R40774:40774 AV.Maps ITree t def
R40776:40776 AV.Maps <> A var
R40756:40759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40761:40764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40765:40768 Coq.Init.Datatypes <> bool ind
R40760:40760 AV.Maps <> A var
R40755:40755 AV.Maps <> A var
R40796:40804 AV.Maps PTree beq def
prf 40817:40825 ITree beq_sound
R40856:40859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40861:40864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40865:40868 Coq.Init.Datatypes <> bool ind
R40860:40860 AV.Maps <> A var
R40855:40855 AV.Maps <> A var
R40879:40879 AV.Maps ITree t def
R40881:40881 AV.Maps <> A var
R40909:40916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40928:40930 AV.Maps ITree elt def
R40955:40957 AV.Maps ITree get def
R40961:40962 AV.Maps <> t2 var
R40959:40959 AV.Maps <> x var
R40945:40947 AV.Maps ITree get def
R40951:40952 AV.Maps <> t1 var
R40949:40949 AV.Maps <> x var
R40976:40979 Coq.Init.Datatypes <> None constr
R40982:40985 Coq.Init.Datatypes <> None constr
R40990:40993 Coq.Init.Logic <> True ind
R41002:41005 Coq.Init.Datatypes <> Some constr
R41011:41014 Coq.Init.Datatypes <> Some constr
R41031:41033 Coq.Init.Logic <> :type_scope:x_'='_x not
R41022:41024 AV.Maps <> eqA var
R41034:41037 Coq.Init.Datatypes <> true constr
R41054:41058 Coq.Init.Logic <> False ind
R40902:40904 Coq.Init.Logic <> :type_scope:x_'='_x not
R40889:40891 AV.Maps ITree beq def
R40900:40901 AV.Maps <> t2 var
R40897:40898 AV.Maps <> t1 var
R40893:40895 AV.Maps <> eqA var
R40905:40908 Coq.Init.Datatypes <> true constr
R41089:41091 AV.Maps ITree beq def
R41094:41096 AV.Maps ITree get def
R41115:41131 AV.Maps PTree beq_correct thm
R41115:41131 AV.Maps PTree beq_correct thm
R41115:41131 AV.Maps PTree beq_correct thm
def 41169:41175 ITree combine
R41200:41200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41233:41237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41241:41244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41248:41251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41252:41252 AV.Maps ITree t def
R41254:41254 AV.Maps <> C var
R41245:41245 AV.Maps ITree t def
R41247:41247 AV.Maps <> B var
R41238:41238 AV.Maps ITree t def
R41240:41240 AV.Maps <> A var
R41209:41212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41221:41224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41225:41230 Coq.Init.Datatypes <> option ind
R41232:41232 AV.Maps <> C var
R41213:41218 Coq.Init.Datatypes <> option ind
R41220:41220 AV.Maps <> B var
R41201:41206 Coq.Init.Datatypes <> option ind
R41208:41208 AV.Maps <> A var
R41259:41271 AV.Maps PTree combine def
prf 41284:41291 ITree gcombine
R41331:41334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41343:41346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41347:41352 Coq.Init.Datatypes <> option ind
R41354:41354 AV.Maps <> C var
R41335:41340 Coq.Init.Datatypes <> option ind
R41342:41342 AV.Maps <> B var
R41323:41328 Coq.Init.Datatypes <> option ind
R41330:41330 AV.Maps <> A var
R41380:41387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41400:41400 AV.Maps ITree t def
R41402:41402 AV.Maps <> A var
R41410:41410 AV.Maps ITree t def
R41412:41412 AV.Maps <> B var
R41419:41421 AV.Maps ITree elt def
R41452:41454 Coq.Init.Logic <> :type_scope:x_'='_x not
R41429:41431 AV.Maps ITree get def
R41436:41442 AV.Maps ITree combine def
R41449:41450 AV.Maps <> m2 var
R41446:41447 AV.Maps <> m1 var
R41444:41444 AV.Maps <> f var
R41433:41433 AV.Maps <> i var
R41455:41455 AV.Maps <> f var
R41469:41471 AV.Maps ITree get def
R41475:41476 AV.Maps <> m2 var
R41473:41473 AV.Maps <> i var
R41458:41460 AV.Maps ITree get def
R41464:41465 AV.Maps <> m1 var
R41462:41462 AV.Maps <> i var
R41373:41375 Coq.Init.Logic <> :type_scope:x_'='_x not
R41362:41362 AV.Maps <> f var
R41369:41372 Coq.Init.Datatypes <> None constr
R41364:41367 Coq.Init.Datatypes <> None constr
R41376:41379 Coq.Init.Datatypes <> None constr
R41507:41520 AV.Maps PTree gcombine thm
R41507:41520 AV.Maps PTree gcombine thm
R41540:41544 AV.Maps ITree <> mod
R41564:41568 AV.Maps ITree <> modtype
R41570:41577 AV.Maps ZIndexed <> modtype
mod 41555:41559 <> ZTree
R41651:41654 AV.Maps TREE <> mod
mod 41632:41646 <> Tree_Properties
sec 41711:41723 Tree_Properties TREE_FOLD_IND
var 41737:41737 Tree_Properties.TREE_FOLD_IND V
var 41739:41739 Tree_Properties.TREE_FOLD_IND A
var 41757:41757 Tree_Properties.TREE_FOLD_IND f
R41761:41764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41770:41773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41775:41778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41779:41779 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41774:41774 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R41765:41769 AV.Maps T elt defax
R41760:41760 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41791:41791 Tree_Properties.TREE_FOLD_IND P
R41799:41802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41804:41807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41803:41803 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41794:41796 AV.Maps T t defax
R41798:41798 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41823:41826 Tree_Properties.TREE_FOLD_IND init
R41829:41829 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41841:41847 Tree_Properties.TREE_FOLD_IND m_final
R41850:41852 AV.Maps T t defax
R41854:41854 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41869:41876 Tree_Properties.TREE_FOLD_IND P_compat
R41898:41898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41931:41937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41943:41946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41947:41947 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41952:41952 AV.Maps <> a var
R41949:41950 AV.Maps <> m' var
R41938:41938 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41942:41942 AV.Maps <> a var
R41940:41940 AV.Maps <> m var
R41918:41920 Coq.Init.Logic <> :type_scope:x_'='_x not
R41909:41913 AV.Maps T get defax
R41917:41917 AV.Maps <> m var
R41915:41915 AV.Maps <> x var
R41921:41925 AV.Maps T get defax
R41929:41930 AV.Maps <> m' var
R41927:41927 AV.Maps <> x var
var 41967:41972 Tree_Properties.TREE_FOLD_IND H_base
R41977:41977 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41991:41994 AV.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41980:41986 AV.Maps T empty defax
var 42009:42013 Tree_Properties.TREE_FOLD_IND H_rec
R42052:42055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42080:42083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42089:42092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42093:42093 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42110:42110 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42116:42116 AV.Maps <> v var
R42114:42114 AV.Maps <> k var
R42112:42112 AV.Maps <> a var
R42096:42100 AV.Maps T set defax
R42106:42106 AV.Maps <> m var
R42104:42104 AV.Maps <> v var
R42102:42102 AV.Maps <> k var
R42084:42084 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42088:42088 AV.Maps <> a var
R42086:42086 AV.Maps <> m var
R42071:42073 Coq.Init.Logic <> :type_scope:x_'='_x not
R42056:42060 AV.Maps T get defax
R42064:42070 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42062:42062 AV.Maps <> k var
R42074:42077 Coq.Init.Datatypes <> Some constr
R42079:42079 AV.Maps <> v var
R42045:42047 Coq.Init.Logic <> :type_scope:x_'='_x not
R42036:42040 AV.Maps T get defax
R42044:42044 AV.Maps <> m var
R42042:42042 AV.Maps <> k var
R42048:42051 Coq.Init.Datatypes <> None constr
var 42125:42126 Tree_Properties.TREE_FOLD_IND f'
R42132:42132 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R42145:42147 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R42140:42144 AV.Maps T elt defax
R42148:42148 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42154:42154 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42167:42169 Coq.Init.Datatypes <> snd def
R42171:42171 AV.Maps <> p var
R42159:42161 Coq.Init.Datatypes <> fst def
R42163:42163 AV.Maps <> p var
R42156:42156 AV.Maps <> a var
var 42180:42181 Tree_Properties.TREE_FOLD_IND P'
R42187:42190 Coq.Init.Datatypes <> list ind
R42198:42200 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R42193:42197 AV.Maps T elt defax
R42201:42201 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42209:42209 AV.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R42261:42264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42265:42265 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42269:42269 AV.Maps <> a var
R42267:42267 AV.Maps <> m var
R42234:42243 AV.Coqlib <> list_equiv def
R42248:42257 AV.Maps T elements defax
R42259:42259 AV.Maps <> m var
R42245:42245 AV.Maps <> l var
prf 42280:42286 Tree_Properties H_base'
R42291:42292 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42298:42301 AV.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R42294:42296 Coq.Init.Datatypes <> nil constr
R42347:42353 AV.Maps T empty defax
R42332:42339 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42347:42353 AV.Maps T empty defax
R42332:42339 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42383:42390 AV.Maps T gempty prfax
R42383:42390 AV.Maps T gempty prfax
R42383:42390 AV.Maps T gempty prfax
R42412:42416 AV.Maps T get defax
R42412:42416 AV.Maps T get defax
R42448:42449 Coq.Lists.List <> In def
R42458:42460 Coq.Init.Datatypes <> nil constr
R42451:42451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42453:42454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42456:42456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42448:42449 Coq.Lists.List <> In def
R42458:42460 Coq.Init.Datatypes <> nil constr
R42451:42451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42453:42454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42456:42456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42475:42475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42480:42480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42475:42475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42480:42480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42475:42475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42480:42480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42490:42507 AV.Maps T elements_correct prfax
R42490:42507 AV.Maps T elements_correct prfax
prf 42546:42551 Tree_Properties H_rec'
R42607:42612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42643:42648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42655:42660 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42661:42662 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42686:42686 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42692:42692 AV.Maps <> v var
R42690:42690 AV.Maps <> k var
R42688:42688 AV.Maps <> a var
R42666:42669 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R42665:42665 AV.Maps <> l var
R42676:42679 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42670:42670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42672:42673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42675:42675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42671:42671 AV.Maps <> k var
R42674:42674 AV.Maps <> v var
R42680:42682 Coq.Init.Datatypes <> nil constr
R42649:42650 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42654:42654 AV.Maps <> a var
R42652:42652 AV.Maps <> l var
R42613:42614 Coq.Lists.List <> In def
R42624:42633 AV.Maps T elements defax
R42635:42641 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42616:42616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42618:42619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42621:42621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42617:42617 AV.Maps <> k var
R42620:42620 AV.Maps <> v var
R42574:42574 Coq.Init.Logic <> :type_scope:'~'_x not
R42575:42576 Coq.Lists.List <> In def
R42581:42588 Coq.Lists.List <> map def
R42605:42605 AV.Maps <> l var
R42592:42594 Coq.Init.Datatypes <> fst def
R42602:42602 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42596:42600 AV.Maps T elt defax
R42578:42578 AV.Maps <> k var
R42712:42713 AV.Maps <> P' vardef
R42737:42744 AV.Maps T remove defax
R42737:42744 AV.Maps T remove defax
R42775:42779 AV.Maps T set defax
R42760:42767 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42775:42779 AV.Maps T set defax
R42760:42767 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42821:42828 AV.Maps T gsspec prfax
R42821:42828 AV.Maps T gsspec prfax
R42821:42828 AV.Maps T gsspec prfax
R42841:42848 AV.Maps T elt_eq defax
R42841:42848 AV.Maps T elt_eq defax
R42876:42894 AV.Maps T elements_complete prfax
R42876:42894 AV.Maps T elements_complete prfax
R42912:42912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42917:42917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42912:42912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42917:42917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42912:42912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42917:42917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42931:42939 Coq.Lists.List <> in_or_app thm
R42931:42939 Coq.Lists.List <> in_or_app thm
R42981:42985 AV.Maps T gro prfax
R42981:42985 AV.Maps T gro prfax
R43002:43006 AV.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R43002:43006 AV.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R43026:43030 AV.Maps T grs prfax
R43026:43030 AV.Maps T grs prfax
R43039:43057 AV.Maps T elements_complete prfax
R43039:43057 AV.Maps T elements_complete prfax
R43124:43141 AV.Maps T elements_correct prfax
R43124:43141 AV.Maps T elements_correct prfax
R43163:43167 AV.Maps T gro prfax
R43163:43167 AV.Maps T gro prfax
R43163:43167 AV.Maps T gro prfax
R43163:43167 AV.Maps T gro prfax
R43176:43194 AV.Maps T elements_complete prfax
R43176:43194 AV.Maps T elements_complete prfax
R43214:43214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43217:43218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43221:43221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43214:43214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43217:43218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43221:43221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43214:43214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43217:43218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43221:43221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43231:43239 Coq.Lists.List <> in_or_app thm
R43231:43239 Coq.Lists.List <> in_or_app thm
R43295:43297 Coq.Init.Datatypes <> fst def
R43299:43299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43301:43302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43305:43305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43295:43297 Coq.Init.Datatypes <> fst def
R43299:43299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43301:43302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43305:43305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43315:43320 Coq.Lists.List <> in_map thm
R43315:43320 Coq.Lists.List <> in_map thm
R43350:43352 Coq.Init.Logic <> :type_scope:x_'='_x not
R43339:43343 AV.Maps T get defax
R43353:43356 Coq.Init.Datatypes <> Some constr
R43350:43352 Coq.Init.Logic <> :type_scope:x_'='_x not
R43339:43343 AV.Maps T get defax
R43353:43356 Coq.Init.Datatypes <> Some constr
R43369:43387 AV.Maps T elements_complete prfax
R43369:43387 AV.Maps T elements_complete prfax
R43423:43430 AV.Maps T grspec prfax
R43423:43430 AV.Maps T grspec prfax
R43423:43430 AV.Maps T grspec prfax
R43449:43456 AV.Maps T elt_eq defax
R43449:43456 AV.Maps T elt_eq defax
R43487:43488 Coq.Lists.List <> In def
R43500:43509 AV.Maps T elements defax
R43490:43490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43493:43494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43497:43497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43487:43488 Coq.Lists.List <> In def
R43500:43509 AV.Maps T elements defax
R43490:43490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43493:43494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43497:43497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43522:43539 AV.Maps T elements_correct prfax
R43522:43539 AV.Maps T elements_correct prfax
R43565:43565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43568:43569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43572:43572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43565:43565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43568:43569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43572:43572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43565:43565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43568:43569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43572:43572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43592:43600 Coq.Lists.List <> in_app_or thm
R43592:43600 Coq.Lists.List <> in_app_or thm
prf 43668:43679 Tree_Properties fold_rec_aux
R43744:43749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43821:43826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43868:43873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43881:43884 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43885:43886 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43900:43913 Coq.Lists.List <> fold_left def
R43921:43921 AV.Maps <> a var
R43918:43919 AV.Maps <> l1 var
R43915:43916 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R43891:43894 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43889:43890 AV.Maps <> l2 var
R43895:43896 AV.Maps <> l1 var
R43874:43875 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43880:43880 AV.Maps <> a var
R43877:43878 AV.Maps <> l2 var
R43827:43838 AV.Coqlib <> list_norepet ind
R43841:43848 Coq.Lists.List <> map def
R43865:43866 AV.Maps <> l1 var
R43852:43854 Coq.Init.Datatypes <> fst def
R43862:43862 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43856:43860 AV.Maps T elt defax
R43750:43762 AV.Coqlib <> list_disjoint def
R43794:43801 Coq.Lists.List <> map def
R43818:43819 AV.Maps <> l2 var
R43805:43807 Coq.Init.Datatypes <> fst def
R43815:43815 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43809:43813 AV.Maps T elt defax
R43765:43772 Coq.Lists.List <> map def
R43789:43790 AV.Maps <> l1 var
R43776:43778 Coq.Init.Datatypes <> fst def
R43786:43786 AV.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43780:43784 AV.Maps T elt defax
R43702:43711 AV.Coqlib <> list_equiv def
R43725:43734 AV.Maps T elements defax
R43736:43742 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R43716:43719 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43714:43715 AV.Maps <> l2 var
R43720:43721 AV.Maps <> l1 var
R43976:43991 Coq.Lists.List <> app_nil_end thm
R43976:43991 Coq.Lists.List <> app_nil_end thm
R43976:43991 Coq.Lists.List <> app_nil_end thm
R44073:44073 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44087:44091 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44080:44083 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44074:44074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44079:44079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44084:44086 Coq.Init.Datatypes <> nil constr
R44059:44062 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44053:44053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44055:44056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44058:44058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44059:44062 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44053:44053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44055:44056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44058:44058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44073 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44087:44091 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44080:44083 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44074:44074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44079:44079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44084:44086 Coq.Init.Datatypes <> nil constr
R44108:44119 Coq.Lists.List <> app_ass syndef
R44108:44119 Coq.Lists.List <> app_ass syndef
R44108:44119 Coq.Lists.List <> app_ass syndef
R44144:44150 Coq.Lists.List <> app_ass syndef
R44144:44150 Coq.Lists.List <> app_ass syndef
R44144:44150 Coq.Lists.List <> app_ass syndef
R44182:44188 Coq.Lists.List <> map_app thm
R44182:44188 Coq.Lists.List <> map_app thm
R44182:44188 Coq.Lists.List <> map_app thm
R44207:44215 Coq.Lists.List <> in_app_or thm
R44207:44215 Coq.Lists.List <> in_app_or thm
R44310:44311 AV.Maps <> f' vardef
R44327:44332 AV.Maps Tree_Properties H_rec' thm
R44327:44332 AV.Maps Tree_Properties H_rec' thm
R44348:44366 AV.Coqlib <> list_disjoint_notin thm
R44348:44366 AV.Coqlib <> list_disjoint_notin thm
R44404:44404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44409:44409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44404:44404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44409:44409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44404:44404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44409:44409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44419:44427 Coq.Lists.List <> in_or_app thm
R44419:44427 Coq.Lists.List <> in_or_app thm
prf 44457:44464 Tree_Properties fold_rec
R44469:44469 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R44480:44485 AV.Maps T fold defax
R44497:44500 AV.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44489:44495 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44487:44487 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R44471:44477 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44529:44539 AV.Maps T fold_spec prfax
R44529:44539 AV.Maps T fold_spec prfax
R44529:44539 AV.Maps T fold_spec prfax
R44547:44548 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44547:44548 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44561:44562 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44593:44606 Coq.Lists.List <> fold_left def
R44632:44635 AV.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44612:44621 AV.Maps T elements defax
R44623:44629 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44608:44609 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44568:44571 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44565:44567 Coq.Init.Datatypes <> nil constr
R44572:44581 AV.Maps T elements defax
R44583:44589 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44561:44562 AV.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44593:44606 Coq.Lists.List <> fold_left def
R44632:44635 AV.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44612:44621 AV.Maps T elements defax
R44623:44629 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44608:44609 AV.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44568:44571 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44565:44567 Coq.Init.Datatypes <> nil constr
R44572:44581 AV.Maps T elements defax
R44583:44589 AV.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44650:44661 AV.Maps Tree_Properties fold_rec_aux thm
R44650:44661 AV.Maps Tree_Properties fold_rec_aux thm
R44738:44760 AV.Maps T elements_keys_norepet prfax
R44738:44760 AV.Maps T elements_keys_norepet prfax
R44773:44779 AV.Maps Tree_Properties H_base' thm
R44773:44779 AV.Maps Tree_Properties H_base' thm
R44845:44857 AV.Maps Tree_Properties.TREE_FOLD_IND <> sec
sec 44910:44916 Tree_Properties MEASURE
var 44929:44929 Tree_Properties.MEASURE V
def 44950:44957 Tree_Properties cardinal
R44963:44965 AV.Maps T t defax
R44967:44967 AV.Maps <> Tree_Properties.MEASURE.V var
R44972:44974 Coq.Init.Datatypes <> nat ind
R44979:44989 Coq.Lists.List <> length syndef
R44992:45001 AV.Maps T elements defax
R45003:45003 AV.Maps <> x var
prf 45016:45030 Tree_Properties cardinal_remove
R45067:45070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45095:45097 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R45072:45079 AV.Maps Tree_Properties cardinal def
R45082:45089 AV.Maps T remove defax
R45093:45093 AV.Maps <> m var
R45091:45091 AV.Maps <> x var
R45098:45105 AV.Maps Tree_Properties cardinal def
R45107:45107 AV.Maps <> m var
R45058:45060 Coq.Init.Logic <> :type_scope:x_'='_x not
R45049:45053 AV.Maps T get defax
R45057:45057 AV.Maps <> m var
R45055:45055 AV.Maps <> x var
R45061:45064 Coq.Init.Datatypes <> Some constr
R45066:45066 AV.Maps <> y var
R45131:45138 AV.Maps Tree_Properties cardinal def
R45159:45175 AV.Maps T elements_remove prfax
R45237:45246 Coq.Lists.List <> app_length thm
R45237:45246 Coq.Lists.List <> app_length thm
R45237:45246 Coq.Lists.List <> app_length thm
R45237:45246 Coq.Lists.List <> app_length thm
R45237:45246 Coq.Lists.List <> app_length thm
prf 45277:45288 Tree_Properties cardinal_set
R45323:45326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45338:45340 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R45328:45335 AV.Maps Tree_Properties cardinal def
R45337:45337 AV.Maps <> m var
R45341:45348 AV.Maps Tree_Properties cardinal def
R45351:45355 AV.Maps T set defax
R45361:45361 AV.Maps <> m var
R45359:45359 AV.Maps <> y var
R45357:45357 AV.Maps <> x var
R45316:45318 Coq.Init.Logic <> :type_scope:x_'='_x not
R45307:45311 AV.Maps T get defax
R45315:45315 AV.Maps <> m var
R45313:45313 AV.Maps <> x var
R45319:45322 Coq.Init.Datatypes <> None constr
R45398:45402 AV.Maps T set defax
R45398:45402 AV.Maps T set defax
R45423:45430 AV.Maps Tree_Properties cardinal def
R45441:45448 AV.Maps Tree_Properties cardinal def
R45451:45458 AV.Maps T remove defax
R45423:45430 AV.Maps Tree_Properties cardinal def
R45441:45448 AV.Maps Tree_Properties cardinal def
R45451:45458 AV.Maps T remove defax
R45476:45490 AV.Maps Tree_Properties cardinal_remove thm
R45476:45490 AV.Maps Tree_Properties cardinal_remove thm
R45517:45521 AV.Maps T gss prfax
R45517:45521 AV.Maps T gss prfax
R45533:45540 AV.Maps Tree_Properties cardinal def
R45558:45579 AV.Maps T elements_extensional prfax
R45558:45579 AV.Maps T elements_extensional prfax
R45611:45618 AV.Maps T grspec prfax
R45621:45628 AV.Maps T gsspec prfax
R45611:45618 AV.Maps T grspec prfax
R45611:45618 AV.Maps T grspec prfax
R45621:45628 AV.Maps T gsspec prfax
R45621:45628 AV.Maps T gsspec prfax
R45643:45650 AV.Maps T elt_eq defax
R45643:45650 AV.Maps T elt_eq defax
R45686:45692 AV.Maps Tree_Properties.MEASURE <> sec
sec 45730:45742 Tree_Properties FORALL_EXISTS
var 45755:45755 Tree_Properties.FORALL_EXISTS A
def 45776:45782 Tree_Properties for_all
R45788:45790 AV.Maps T t defax
R45792:45792 AV.Maps <> Tree_Properties.FORALL_EXISTS.A var
R45804:45807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45809:45812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45813:45816 Coq.Init.Datatypes <> bool ind
R45808:45808 AV.Maps <> Tree_Properties.FORALL_EXISTS.A var
R45799:45803 AV.Maps T elt defax
R45821:45824 Coq.Init.Datatypes <> bool ind
R45831:45836 AV.Maps T fold defax
R45866:45869 Coq.Init.Datatypes <> true constr
R45864:45864 AV.Maps <> m var
R45853:45856 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R45852:45852 AV.Maps <> b var
R45857:45857 AV.Maps <> f var
R45861:45861 AV.Maps <> a var
R45859:45859 AV.Maps <> x var
prf 45879:45893 Tree_Properties for_all_correct
R45930:45935 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45982:45982 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45923:45925 Coq.Init.Logic <> :type_scope:x_'='_x not
R45912:45918 AV.Maps Tree_Properties for_all def
R45922:45922 AV.Maps <> f var
R45920:45920 AV.Maps <> m var
R45926:45929 Coq.Init.Datatypes <> true constr
R45966:45969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45975:45977 Coq.Init.Logic <> :type_scope:x_'='_x not
R45970:45970 AV.Maps <> f var
R45974:45974 AV.Maps <> a var
R45972:45972 AV.Maps <> x var
R45978:45981 Coq.Init.Datatypes <> true constr
R45957:45959 Coq.Init.Logic <> :type_scope:x_'='_x not
R45948:45952 AV.Maps T get defax
R45956:45956 AV.Maps <> m var
R45954:45954 AV.Maps <> x var
R45960:45963 Coq.Init.Datatypes <> Some constr
R45965:45965 AV.Maps <> a var
R46016:46022 AV.Maps Tree_Properties for_all def
R46031:46038 AV.Maps Tree_Properties fold_rec thm
R46031:46038 AV.Maps Tree_Properties fold_rec thm
R46193:46200 AV.Maps T gempty prfax
R46193:46200 AV.Maps T gempty prfax
R46193:46200 AV.Maps T gempty prfax
R46279:46287 Coq.Init.Datatypes <> andb_prop thm
R46279:46287 Coq.Init.Datatypes <> andb_prop thm
R46306:46313 AV.Maps T gsspec prfax
R46306:46313 AV.Maps T gsspec prfax
R46306:46313 AV.Maps T gsspec prfax
R46332:46339 AV.Maps T elt_eq defax
R46332:46339 AV.Maps T elt_eq defax
R46389:46403 Coq.Init.Datatypes <> andb_true_intro thm
R46389:46403 Coq.Init.Datatypes <> andb_true_intro thm
R46453:46457 AV.Maps T gso prfax
R46453:46457 AV.Maps T gso prfax
R46453:46457 AV.Maps T gso prfax
R46453:46457 AV.Maps T gso prfax
R46496:46500 AV.Maps T gss prfax
R46496:46500 AV.Maps T gss prfax
def 46520:46526 Tree_Properties exists_
R46532:46534 AV.Maps T t defax
R46536:46536 AV.Maps <> Tree_Properties.FORALL_EXISTS.A var
R46548:46551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46553:46556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46557:46560 Coq.Init.Datatypes <> bool ind
R46552:46552 AV.Maps <> Tree_Properties.FORALL_EXISTS.A var
R46543:46547 AV.Maps T elt defax
R46565:46568 Coq.Init.Datatypes <> bool ind
R46575:46580 AV.Maps T fold defax
R46610:46614 Coq.Init.Datatypes <> false constr
R46608:46608 AV.Maps <> m var
R46597:46600 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R46596:46596 AV.Maps <> b var
R46601:46601 AV.Maps <> f var
R46605:46605 AV.Maps <> a var
R46603:46603 AV.Maps <> x var
prf 46624:46637 Tree_Properties exists_correct
R46674:46679 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46726:46726 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46667:46669 Coq.Init.Logic <> :type_scope:x_'='_x not
R46656:46662 AV.Maps Tree_Properties exists_ def
R46666:46666 AV.Maps <> f var
R46664:46664 AV.Maps <> m var
R46670:46673 Coq.Init.Datatypes <> true constr
R46680:46686 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46690:46691 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46710:46713 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46701:46703 Coq.Init.Logic <> :type_scope:x_'='_x not
R46692:46696 AV.Maps T get defax
R46700:46700 AV.Maps <> m var
R46698:46698 AV.Maps <> x var
R46704:46707 Coq.Init.Datatypes <> Some constr
R46709:46709 AV.Maps <> a var
R46719:46721 Coq.Init.Logic <> :type_scope:x_'='_x not
R46714:46714 AV.Maps <> f var
R46718:46718 AV.Maps <> a var
R46716:46716 AV.Maps <> x var
R46722:46725 Coq.Init.Datatypes <> true constr
R46760:46766 AV.Maps Tree_Properties exists_ def
R46775:46782 AV.Maps Tree_Properties fold_rec thm
R46775:46782 AV.Maps Tree_Properties fold_rec thm
R46996:47003 AV.Maps T gempty prfax
R46996:47003 AV.Maps T gempty prfax
R46996:47003 AV.Maps T gempty prfax
R47075:47087 Coq.Bool.Bool <> orb_true_elim thm
R47075:47087 Coq.Bool.Bool <> orb_true_elim thm
R47195:47199 AV.Maps T gso prfax
R47195:47199 AV.Maps T gso prfax
R47195:47199 AV.Maps T gso prfax
R47195:47199 AV.Maps T gso prfax
R47261:47265 AV.Maps T gss prfax
R47261:47265 AV.Maps T gss prfax
R47310:47323 Coq.Bool.Bool <> orb_true_intro thm
R47310:47323 Coq.Bool.Bool <> orb_true_intro thm
R47336:47343 AV.Maps T gsspec prfax
R47336:47343 AV.Maps T gsspec prfax
R47336:47343 AV.Maps T gsspec prfax
R47361:47368 AV.Maps T elt_eq defax
R47361:47368 AV.Maps T elt_eq defax
prf 47458:47471 Tree_Properties exists_for_all
R47501:47503 Coq.Init.Logic <> :type_scope:x_'='_x not
R47490:47496 AV.Maps Tree_Properties exists_ def
R47500:47500 AV.Maps <> f var
R47498:47498 AV.Maps <> m var
R47504:47507 Coq.Init.Datatypes <> negb def
R47510:47516 AV.Maps Tree_Properties for_all def
R47532:47535 Coq.Init.Datatypes <> negb def
R47538:47538 AV.Maps <> f var
R47542:47542 AV.Maps <> a var
R47540:47540 AV.Maps <> x var
R47518:47518 AV.Maps <> m var
R47572:47578 AV.Maps Tree_Properties exists_ def
R47581:47587 AV.Maps Tree_Properties for_all def
R47600:47610 AV.Maps T fold_spec prfax
R47600:47610 AV.Maps T fold_spec prfax
R47600:47610 AV.Maps T fold_spec prfax
R47600:47610 AV.Maps T fold_spec prfax
R47600:47610 AV.Maps T fold_spec prfax
R47634:47637 Coq.Init.Datatypes <> negb def
R47639:47642 Coq.Init.Datatypes <> true constr
R47622:47626 Coq.Init.Datatypes <> false constr
R47622:47626 Coq.Init.Datatypes <> false constr
R47634:47637 Coq.Init.Datatypes <> negb def
R47639:47642 Coq.Init.Datatypes <> true constr
R47658:47667 AV.Maps T elements defax
R47672:47675 Coq.Init.Datatypes <> true constr
R47658:47667 AV.Maps T elements defax
R47672:47675 Coq.Init.Datatypes <> true constr
R47778:47780 Coq.Init.Datatypes <> snd def
R47770:47772 Coq.Init.Datatypes <> fst def
R47778:47780 Coq.Init.Datatypes <> snd def
R47770:47772 Coq.Init.Datatypes <> fst def
R47778:47780 Coq.Init.Datatypes <> snd def
R47770:47772 Coq.Init.Datatypes <> fst def
prf 47813:47826 Tree_Properties for_all_exists
R47856:47858 Coq.Init.Logic <> :type_scope:x_'='_x not
R47845:47851 AV.Maps Tree_Properties for_all def
R47855:47855 AV.Maps <> f var
R47853:47853 AV.Maps <> m var
R47859:47862 Coq.Init.Datatypes <> negb def
R47865:47871 AV.Maps Tree_Properties exists_ def
R47887:47890 Coq.Init.Datatypes <> negb def
R47893:47893 AV.Maps <> f var
R47897:47897 AV.Maps <> a var
R47895:47895 AV.Maps <> x var
R47873:47873 AV.Maps <> m var
R47927:47933 AV.Maps Tree_Properties exists_ def
R47936:47942 AV.Maps Tree_Properties for_all def
R47955:47965 AV.Maps T fold_spec prfax
R47955:47965 AV.Maps T fold_spec prfax
R47955:47965 AV.Maps T fold_spec prfax
R47955:47965 AV.Maps T fold_spec prfax
R47955:47965 AV.Maps T fold_spec prfax
R47988:47991 Coq.Init.Datatypes <> negb def
R47993:47997 Coq.Init.Datatypes <> false constr
R47977:47980 Coq.Init.Datatypes <> true constr
R47977:47980 Coq.Init.Datatypes <> true constr
R47988:47991 Coq.Init.Datatypes <> negb def
R47993:47997 Coq.Init.Datatypes <> false constr
R48013:48022 AV.Maps T elements defax
R48027:48031 Coq.Init.Datatypes <> false constr
R48013:48022 AV.Maps T elements defax
R48027:48031 Coq.Init.Datatypes <> false constr
R48134:48136 Coq.Init.Datatypes <> snd def
R48126:48128 Coq.Init.Datatypes <> fst def
R48134:48136 Coq.Init.Datatypes <> snd def
R48126:48128 Coq.Init.Datatypes <> fst def
R48134:48136 Coq.Init.Datatypes <> snd def
R48126:48128 Coq.Init.Datatypes <> fst def
prf 48168:48180 Tree_Properties for_all_false
R48218:48223 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48271:48271 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48210:48212 Coq.Init.Logic <> :type_scope:x_'='_x not
R48199:48205 AV.Maps Tree_Properties for_all def
R48209:48209 AV.Maps <> f var
R48207:48207 AV.Maps <> m var
R48213:48217 Coq.Init.Datatypes <> false constr
R48224:48230 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48234:48235 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48254:48257 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R48245:48247 Coq.Init.Logic <> :type_scope:x_'='_x not
R48236:48240 AV.Maps T get defax
R48244:48244 AV.Maps <> m var
R48242:48242 AV.Maps <> x var
R48248:48251 Coq.Init.Datatypes <> Some constr
R48253:48253 AV.Maps <> a var
R48263:48265 Coq.Init.Logic <> :type_scope:x_'='_x not
R48258:48258 AV.Maps <> f var
R48262:48262 AV.Maps <> a var
R48260:48260 AV.Maps <> x var
R48266:48270 Coq.Init.Datatypes <> false constr
R48299:48312 AV.Maps Tree_Properties for_all_exists thm
R48299:48312 AV.Maps Tree_Properties for_all_exists thm
R48299:48312 AV.Maps Tree_Properties for_all_exists thm
R48325:48338 Coq.Bool.Bool <> negb_false_iff thm
R48325:48338 Coq.Bool.Bool <> negb_false_iff thm
R48325:48338 Coq.Bool.Bool <> negb_false_iff thm
R48349:48362 AV.Maps Tree_Properties exists_correct thm
R48349:48362 AV.Maps Tree_Properties exists_correct thm
R48349:48362 AV.Maps Tree_Properties exists_correct thm
R48441:48453 Coq.Bool.Bool <> negb_true_iff thm
R48441:48453 Coq.Bool.Bool <> negb_true_iff thm
R48441:48453 Coq.Bool.Bool <> negb_true_iff thm
prf 48498:48509 Tree_Properties exists_false
R48547:48552 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48600:48600 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48539:48541 Coq.Init.Logic <> :type_scope:x_'='_x not
R48528:48534 AV.Maps Tree_Properties exists_ def
R48538:48538 AV.Maps <> f var
R48536:48536 AV.Maps <> m var
R48542:48546 Coq.Init.Datatypes <> false constr
R48583:48586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48592:48594 Coq.Init.Logic <> :type_scope:x_'='_x not
R48587:48587 AV.Maps <> f var
R48591:48591 AV.Maps <> a var
R48589:48589 AV.Maps <> x var
R48595:48599 Coq.Init.Datatypes <> false constr
R48574:48576 Coq.Init.Logic <> :type_scope:x_'='_x not
R48565:48569 AV.Maps T get defax
R48573:48573 AV.Maps <> m var
R48571:48571 AV.Maps <> x var
R48577:48580 Coq.Init.Datatypes <> Some constr
R48582:48582 AV.Maps <> a var
R48628:48641 AV.Maps Tree_Properties exists_for_all thm
R48628:48641 AV.Maps Tree_Properties exists_for_all thm
R48628:48641 AV.Maps Tree_Properties exists_for_all thm
R48654:48667 Coq.Bool.Bool <> negb_false_iff thm
R48654:48667 Coq.Bool.Bool <> negb_false_iff thm
R48654:48667 Coq.Bool.Bool <> negb_false_iff thm
R48678:48692 AV.Maps Tree_Properties for_all_correct thm
R48678:48692 AV.Maps Tree_Properties for_all_correct thm
R48678:48692 AV.Maps Tree_Properties for_all_correct thm
R48735:48747 Coq.Bool.Bool <> negb_true_iff thm
R48735:48747 Coq.Bool.Bool <> negb_true_iff thm
R48735:48747 Coq.Bool.Bool <> negb_true_iff thm
R48789:48801 AV.Maps Tree_Properties.FORALL_EXISTS <> sec
sec 48838:48853 Tree_Properties BOOLEAN_EQUALITY
var 48866:48866 Tree_Properties.BOOLEAN_EQUALITY A
var 48884:48887 Tree_Properties.BOOLEAN_EQUALITY beqA
R48891:48894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48896:48899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48900:48903 Coq.Init.Datatypes <> bool ind
R48895:48895 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
R48890:48890 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
prf 48915:48923 Tree_Properties beq_false
R48968:48974 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48960:48962 Coq.Init.Logic <> :type_scope:x_'='_x not
R48944:48948 AV.Maps T beq defax
R48958:48959 AV.Maps <> m2 var
R48955:48956 AV.Maps <> m1 var
R48950:48953 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R48963:48967 Coq.Init.Datatypes <> false constr
R48975:48981 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48983:48984 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49003:49007 AV.Maps T get defax
R49011:49012 AV.Maps <> m2 var
R49009:49009 AV.Maps <> x var
R48991:48995 AV.Maps T get defax
R48999:49000 AV.Maps <> m1 var
R48997:48997 AV.Maps <> x var
R49033:49036 Coq.Init.Datatypes <> None constr
R49039:49042 Coq.Init.Datatypes <> None constr
R49047:49051 Coq.Init.Logic <> False ind
R49067:49070 Coq.Init.Datatypes <> Some constr
R49076:49079 Coq.Init.Datatypes <> Some constr
R49097:49099 Coq.Init.Logic <> :type_scope:x_'='_x not
R49087:49090 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49100:49104 Coq.Init.Datatypes <> false constr
R49128:49131 Coq.Init.Logic <> True ind
R49246:49250 AV.Maps T get defax
R49252:49252 AV.Maps <> x var
R49262:49265 Coq.Init.Datatypes <> None constr
R49270:49274 Coq.Init.Datatypes <> false constr
R49278:49281 Coq.Init.Datatypes <> Some constr
R49289:49292 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49294:49295 AV.Maps <> a1 var
R49246:49250 AV.Maps T get defax
R49252:49252 AV.Maps <> x var
R49262:49265 Coq.Init.Datatypes <> None constr
R49270:49274 Coq.Init.Datatypes <> false constr
R49278:49281 Coq.Init.Datatypes <> Some constr
R49289:49292 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49294:49295 AV.Maps <> a1 var
R49337:49341 AV.Maps T get defax
R49343:49343 AV.Maps <> x var
R49353:49356 Coq.Init.Datatypes <> None constr
R49361:49365 Coq.Init.Datatypes <> false constr
R49369:49372 Coq.Init.Datatypes <> Some constr
R49380:49383 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49388:49389 AV.Maps <> a2 var
R49337:49341 AV.Maps T get defax
R49343:49343 AV.Maps <> x var
R49353:49356 Coq.Init.Datatypes <> None constr
R49361:49365 Coq.Init.Datatypes <> false constr
R49369:49372 Coq.Init.Datatypes <> Some constr
R49380:49383 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49388:49389 AV.Maps <> a2 var
R49409:49415 AV.Maps Tree_Properties for_all def
R49443:49449 AV.Maps Tree_Properties for_all def
R49409:49415 AV.Maps Tree_Properties for_all def
R49443:49449 AV.Maps Tree_Properties for_all def
R49500:49502 Coq.Init.Logic <> :type_scope:x_'='_x not
R49484:49488 AV.Maps T beq defax
R49490:49493 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49503:49506 Coq.Init.Datatypes <> true constr
R49500:49502 Coq.Init.Logic <> :type_scope:x_'='_x not
R49484:49488 AV.Maps T beq defax
R49490:49493 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49503:49506 Coq.Init.Datatypes <> true constr
R49534:49548 AV.Maps Tree_Properties for_all_correct thm
R49534:49548 AV.Maps Tree_Properties for_all_correct thm
R49534:49548 AV.Maps Tree_Properties for_all_correct thm
R49564:49576 AV.Maps T beq_correct prfax
R49564:49576 AV.Maps T beq_correct prfax
R49564:49576 AV.Maps T beq_correct prfax
R49601:49605 AV.Maps T get defax
R49601:49605 AV.Maps T get defax
R49679:49683 AV.Maps T get defax
R49679:49683 AV.Maps T get defax
R49718:49722 AV.Maps T get defax
R49718:49722 AV.Maps T get defax
R49828:49840 AV.Maps Tree_Properties for_all_false thm
R49828:49840 AV.Maps Tree_Properties for_all_false thm
R49828:49840 AV.Maps Tree_Properties for_all_false thm
R49932:49936 AV.Maps T get defax
R49932:49936 AV.Maps T get defax
R49963:49975 AV.Maps Tree_Properties for_all_false thm
R49963:49975 AV.Maps Tree_Properties for_all_false thm
R49963:49975 AV.Maps Tree_Properties for_all_false thm
R50067:50071 AV.Maps T get defax
R50067:50071 AV.Maps T get defax
R50154:50158 AV.Maps T beq defax
R50160:50163 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50154:50158 AV.Maps T beq defax
R50160:50163 AV.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50195:50207 AV.Maps T beq_correct prfax
R50195:50207 AV.Maps T beq_correct prfax
R50195:50207 AV.Maps T beq_correct prfax
R50245:50249 AV.Maps T get defax
R50268:50272 AV.Maps T get defax
R50245:50249 AV.Maps T get defax
R50268:50272 AV.Maps T get defax
R50268:50272 AV.Maps T get defax
R50312:50327 AV.Maps Tree_Properties.BOOLEAN_EQUALITY <> sec
sec 50382:50401 Tree_Properties EXTENSIONAL_EQUALITY
var 50414:50414 Tree_Properties.EXTENSIONAL_EQUALITY A
var 50432:50434 Tree_Properties.EXTENSIONAL_EQUALITY eqA
R50438:50441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50443:50446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50442:50442 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R50437:50437 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
var 50464:50468 Tree_Properties.EXTENSIONAL_EQUALITY eqAeq
R50471:50481 Coq.Classes.RelationClasses <> Equivalence class
R50483:50485 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
def 50500:50504 Tree_Properties Equal
R50514:50516 AV.Maps T t defax
R50518:50518 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R50561:50565 AV.Maps T get defax
R50569:50570 AV.Maps <> m2 var
R50567:50567 AV.Maps <> x var
R50549:50553 AV.Maps T get defax
R50557:50558 AV.Maps <> m1 var
R50555:50555 AV.Maps <> x var
R50595:50598 Coq.Init.Datatypes <> None constr
R50601:50604 Coq.Init.Datatypes <> None constr
R50609:50612 Coq.Init.Logic <> True ind
R50632:50635 Coq.Init.Datatypes <> Some constr
R50641:50644 Coq.Init.Datatypes <> Some constr
R50654:50658 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R50688:50692 Coq.Init.Logic <> False ind
prf 50718:50727 Tree_Properties Equal_refl
R50740:50744 AV.Maps Tree_Properties Equal def
R50748:50748 AV.Maps <> m var
R50746:50746 AV.Maps <> m var
R50791:50795 AV.Maps T get defax
R50791:50795 AV.Maps T get defax
prf 50834:50842 Tree_Properties Equal_sym
R50870:50873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50874:50878 AV.Maps Tree_Properties Equal def
R50883:50884 AV.Maps <> m1 var
R50880:50881 AV.Maps <> m2 var
R50859:50863 AV.Maps Tree_Properties Equal def
R50868:50869 AV.Maps <> m2 var
R50865:50866 AV.Maps <> m1 var
R50945:50949 AV.Maps T get defax
R50968:50972 AV.Maps T get defax
R50945:50949 AV.Maps T get defax
R50968:50972 AV.Maps T get defax
R50968:50972 AV.Maps T get defax
prf 51023:51033 Tree_Properties Equal_trans
R51064:51067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51079:51082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51083:51087 AV.Maps Tree_Properties Equal def
R51092:51093 AV.Maps <> m3 var
R51089:51090 AV.Maps <> m1 var
R51068:51072 AV.Maps Tree_Properties Equal def
R51077:51078 AV.Maps <> m3 var
R51074:51075 AV.Maps <> m2 var
R51053:51057 AV.Maps Tree_Properties Equal def
R51062:51063 AV.Maps <> m2 var
R51059:51060 AV.Maps <> m1 var
R51163:51167 AV.Maps T get defax
R51186:51190 AV.Maps T get defax
R51222:51226 AV.Maps T get defax
R51163:51167 AV.Maps T get defax
R51186:51190 AV.Maps T get defax
R51186:51190 AV.Maps T get defax
R51222:51226 AV.Maps T get defax
inst 51294:51310 Tree_Properties Equal_Equivalence
R51314:51324 Coq.Classes.RelationClasses <> Equivalence class
R51326:51330 AV.Maps Tree_Properties Equal def
R51416:51437 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R51378:51398 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R51339:51359 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R51364:51373 AV.Maps Tree_Properties Equal_refl thm
R51403:51411 AV.Maps Tree_Properties Equal_sym thm
R51442:51452 AV.Maps Tree_Properties Equal_trans thm
var 51469:51474 Tree_Properties.EXTENSIONAL_EQUALITY eqAdec
R51477:51481 Coq.Classes.EquivDec <> EqDec class
R51485:51487 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
R51483:51483 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
def 51510:51518 Tree_Properties Equal_dec
R51528:51530 AV.Maps T t defax
R51532:51532 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R51537:51538 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51548:51554 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51564:51565 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51541:51545 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R51539:51540 AV.Maps <> m1 var
R51546:51547 AV.Maps <> m2 var
R51557:51561 Coq.Classes.Equivalence <> :equiv_scope:x_'=/='_x not
R51555:51556 AV.Maps <> m1 var
R51562:51563 AV.Maps <> m2 var
R51578:51582 AV.Maps T beq defax
R51626:51627 AV.Maps <> m2 var
R51623:51624 AV.Maps <> m1 var
R51598:51609 AV.Coqlib <> proj_sumbool def
R51614:51617 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51612:51613 AV.Maps <> a1 var
R51618:51619 AV.Maps <> a2 var
R51638:51641 Coq.Init.Datatypes <> true constr
R51646:51649 Coq.Init.Specif <> left constr
R51657:51661 Coq.Init.Datatypes <> false constr
R51666:51670 Coq.Init.Specif <> right constr
R51754:51766 AV.Maps T beq_correct prfax
R51754:51766 AV.Maps T beq_correct prfax
R51754:51766 AV.Maps T beq_correct prfax
R51819:51823 AV.Maps T get defax
R51842:51846 AV.Maps T get defax
R51819:51823 AV.Maps T get defax
R51842:51846 AV.Maps T get defax
R51842:51846 AV.Maps T get defax
R51878:51894 AV.Coqlib <> proj_sumbool_true thm
R51878:51894 AV.Coqlib <> proj_sumbool_true thm
R51986:51988 Coq.Init.Logic <> :type_scope:x_'='_x not
R51936:51940 AV.Maps T beq defax
R51956:51967 AV.Coqlib <> proj_sumbool def
R51972:51975 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51970:51971 AV.Maps <> a1 var
R51976:51977 AV.Maps <> a2 var
R51989:51992 Coq.Init.Datatypes <> true constr
R51986:51988 Coq.Init.Logic <> :type_scope:x_'='_x not
R51936:51940 AV.Maps T beq defax
R51956:51967 AV.Coqlib <> proj_sumbool def
R51972:51975 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51970:51971 AV.Maps <> a1 var
R51976:51977 AV.Maps <> a2 var
R51989:51992 Coq.Init.Datatypes <> true constr
R52004:52016 AV.Maps T beq_correct prfax
R52004:52016 AV.Maps T beq_correct prfax
R52059:52063 AV.Maps T get defax
R52082:52086 AV.Maps T get defax
R52059:52063 AV.Maps T get defax
R52082:52086 AV.Maps T get defax
R52082:52086 AV.Maps T get defax
R52122:52141 AV.Coqlib <> proj_sumbool_is_true thm
R52122:52141 AV.Coqlib <> proj_sumbool_is_true thm
R52159:52163 Coq.Classes.Equivalence <> equiv def
R52166:52175 Coq.Classes.RelationClasses <> complement def
inst 52211:52221 Tree_Properties Equal_EqDec
R52225:52229 Coq.Classes.EquivDec <> EqDec class
R52239:52243 AV.Maps Tree_Properties Equal def
R52232:52234 AV.Maps T t defax
R52236:52236 AV.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R52248:52256 AV.Maps Tree_Properties Equal_dec def
R52264:52283 AV.Maps Tree_Properties.EXTENSIONAL_EQUALITY <> sec
sec 52354:52360 Tree_Properties OF_LIST
var 52373:52373 Tree_Properties.OF_LIST A
var 52387:52387 Tree_Properties.OF_LIST f
R52400:52402 AV.Maps T t defax
R52404:52404 AV.Maps <> Tree_Properties.OF_LIST.A var
R52418:52420 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52413:52417 AV.Maps T elt defax
R52421:52421 AV.Maps <> Tree_Properties.OF_LIST.A var
R52427:52431 AV.Maps T set defax
R52453:52453 AV.Maps <> m var
R52444:52446 Coq.Init.Datatypes <> snd def
R52448:52450 AV.Maps <> k_v var
R52434:52436 Coq.Init.Datatypes <> fst def
R52438:52440 AV.Maps <> k_v var
def 52468:52474 Tree_Properties of_list
R52480:52483 Coq.Init.Datatypes <> list ind
R52491:52493 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52486:52490 AV.Maps T elt defax
R52494:52494 AV.Maps <> Tree_Properties.OF_LIST.A var
R52500:52502 AV.Maps T t defax
R52504:52504 AV.Maps <> Tree_Properties.OF_LIST.A var
R52511:52524 Coq.Lists.List <> fold_left def
R52531:52537 AV.Maps T empty defax
R52528:52528 AV.Maps <> l var
R52526:52526 AV.Maps <> Tree_Properties.OF_LIST.f var
prf 52550:52559 Tree_Properties in_of_list
R52606:52609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52610:52611 Coq.Lists.List <> In def
R52620:52620 AV.Maps <> l var
R52613:52613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52615:52616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52618:52618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52614:52614 AV.Maps <> k var
R52617:52617 AV.Maps <> v var
R52597:52599 Coq.Init.Logic <> :type_scope:x_'='_x not
R52578:52582 AV.Maps T get defax
R52587:52593 AV.Maps Tree_Properties of_list def
R52595:52595 AV.Maps <> l var
R52584:52584 AV.Maps <> k var
R52600:52603 Coq.Init.Datatypes <> Some constr
R52605:52605 AV.Maps <> v var
R52706:52709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52721:52724 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52710:52711 Coq.Lists.List <> In def
R52720:52720 AV.Maps <> l var
R52713:52713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52715:52716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52718:52718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52714:52714 AV.Maps <> k var
R52717:52717 AV.Maps <> v var
R52734:52736 Coq.Init.Logic <> :type_scope:x_'='_x not
R52725:52729 AV.Maps T get defax
R52733:52733 AV.Maps <> m var
R52731:52731 AV.Maps <> k var
R52737:52740 Coq.Init.Datatypes <> Some constr
R52742:52742 AV.Maps <> v var
R52697:52699 Coq.Init.Logic <> :type_scope:x_'='_x not
R52672:52676 AV.Maps T get defax
R52681:52689 Coq.Lists.List <> fold_left def
R52695:52695 AV.Maps <> m var
R52693:52693 AV.Maps <> l var
R52691:52691 AV.Maps <> Tree_Properties.OF_LIST.f var
R52678:52678 AV.Maps <> k var
R52700:52703 Coq.Init.Datatypes <> Some constr
R52705:52705 AV.Maps <> v var
R52706:52709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52721:52724 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52710:52711 Coq.Lists.List <> In def
R52720:52720 AV.Maps <> l var
R52713:52713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52715:52716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52718:52718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52714:52714 AV.Maps <> k var
R52717:52717 AV.Maps <> v var
R52734:52736 Coq.Init.Logic <> :type_scope:x_'='_x not
R52725:52729 AV.Maps T get defax
R52733:52733 AV.Maps <> m var
R52731:52731 AV.Maps <> k var
R52737:52740 Coq.Init.Datatypes <> Some constr
R52742:52742 AV.Maps <> v var
R52697:52699 Coq.Init.Logic <> :type_scope:x_'='_x not
R52672:52676 AV.Maps T get defax
R52681:52689 Coq.Lists.List <> fold_left def
R52695:52695 AV.Maps <> m var
R52693:52693 AV.Maps <> l var
R52691:52691 AV.Maps <> Tree_Properties.OF_LIST.f var
R52678:52678 AV.Maps <> k var
R52700:52703 Coq.Init.Datatypes <> Some constr
R52705:52705 AV.Maps <> v var
R52834:52834 AV.Maps <> f vardef
R52862:52869 AV.Maps T gsspec prfax
R52862:52869 AV.Maps T gsspec prfax
R52862:52869 AV.Maps T gsspec prfax
R52913:52920 AV.Maps T elt_eq defax
R52913:52920 AV.Maps T elt_eq defax
R52986:52993 AV.Maps T gempty prfax
R52986:52993 AV.Maps T gempty prfax
R52986:52993 AV.Maps T gempty prfax
prf 53035:53045 Tree_Properties of_list_dom
R53078:53081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53082:53088 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53090:53091 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53111:53113 Coq.Init.Logic <> :type_scope:x_'='_x not
R53092:53096 AV.Maps T get defax
R53101:53107 AV.Maps Tree_Properties of_list def
R53109:53109 AV.Maps <> l var
R53098:53098 AV.Maps <> k var
R53114:53117 Coq.Init.Datatypes <> Some constr
R53119:53119 AV.Maps <> v var
R53062:53063 Coq.Lists.List <> In def
R53068:53070 Coq.Lists.List <> map def
R53076:53076 AV.Maps <> l var
R53072:53074 Coq.Init.Datatypes <> fst def
R53065:53065 AV.Maps <> k var
R53220:53235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53236:53242 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53244:53245 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53271:53273 Coq.Init.Logic <> :type_scope:x_'='_x not
R53246:53250 AV.Maps T get defax
R53255:53263 Coq.Lists.List <> fold_left def
R53269:53269 AV.Maps <> m var
R53267:53267 AV.Maps <> l var
R53265:53265 AV.Maps <> Tree_Properties.OF_LIST.f var
R53252:53252 AV.Maps <> k var
R53274:53277 Coq.Init.Datatypes <> Some constr
R53279:53279 AV.Maps <> v var
R53186:53190 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53219:53219 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53170:53171 Coq.Lists.List <> In def
R53176:53178 Coq.Lists.List <> map def
R53184:53184 AV.Maps <> l var
R53180:53182 Coq.Init.Datatypes <> fst def
R53173:53173 AV.Maps <> k var
R53191:53197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53199:53200 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53210:53212 Coq.Init.Logic <> :type_scope:x_'='_x not
R53201:53205 AV.Maps T get defax
R53209:53209 AV.Maps <> m var
R53207:53207 AV.Maps <> k var
R53213:53216 Coq.Init.Datatypes <> Some constr
R53218:53218 AV.Maps <> v var
R53220:53235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53236:53242 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53244:53245 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53271:53273 Coq.Init.Logic <> :type_scope:x_'='_x not
R53246:53250 AV.Maps T get defax
R53255:53263 Coq.Lists.List <> fold_left def
R53269:53269 AV.Maps <> m var
R53267:53267 AV.Maps <> l var
R53265:53265 AV.Maps <> Tree_Properties.OF_LIST.f var
R53252:53252 AV.Maps <> k var
R53274:53277 Coq.Init.Datatypes <> Some constr
R53279:53279 AV.Maps <> v var
R53186:53190 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53219:53219 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53170:53171 Coq.Lists.List <> In def
R53176:53178 Coq.Lists.List <> map def
R53184:53184 AV.Maps <> l var
R53180:53182 Coq.Init.Datatypes <> fst def
R53173:53173 AV.Maps <> k var
R53191:53197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53199:53200 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53210:53212 Coq.Init.Logic <> :type_scope:x_'='_x not
R53201:53205 AV.Maps T get defax
R53209:53209 AV.Maps <> m var
R53207:53207 AV.Maps <> k var
R53213:53216 Coq.Init.Datatypes <> Some constr
R53218:53218 AV.Maps <> v var
R53366:53366 AV.Maps <> f vardef
R53377:53384 AV.Maps T gsspec prfax
R53377:53384 AV.Maps T gsspec prfax
R53377:53384 AV.Maps T gsspec prfax
R53404:53411 AV.Maps T elt_eq defax
R53404:53411 AV.Maps T elt_eq defax
prf 53522:53538 Tree_Properties of_list_unchanged
R53574:53577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53608:53610 Coq.Init.Logic <> :type_scope:x_'='_x not
R53578:53582 AV.Maps T get defax
R53587:53600 Coq.Lists.List <> fold_left def
R53606:53606 AV.Maps <> m var
R53604:53604 AV.Maps <> l var
R53602:53602 AV.Maps <> Tree_Properties.OF_LIST.f var
R53584:53584 AV.Maps <> k var
R53611:53615 AV.Maps T get defax
R53619:53619 AV.Maps <> m var
R53617:53617 AV.Maps <> k var
R53557:53557 Coq.Init.Logic <> :type_scope:'~'_x not
R53558:53559 Coq.Lists.List <> In def
R53564:53566 Coq.Lists.List <> map def
R53572:53572 AV.Maps <> l var
R53568:53570 Coq.Init.Datatypes <> fst def
R53561:53561 AV.Maps <> k var
R53716:53716 AV.Maps <> f vardef
R53725:53729 AV.Maps T gso prfax
R53725:53729 AV.Maps T gso prfax
prf 53760:53773 Tree_Properties of_list_unique
R53816:53819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53858:53860 Coq.Init.Logic <> :type_scope:x_'='_x not
R53820:53824 AV.Maps T get defax
R53829:53835 AV.Maps Tree_Properties of_list def
R53840:53843 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R53838:53839 AV.Maps <> l1 var
R53850:53853 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53844:53844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53846:53847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53849:53849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53845:53845 AV.Maps <> k var
R53848:53848 AV.Maps <> v var
R53854:53855 AV.Maps <> l2 var
R53826:53826 AV.Maps <> k var
R53861:53864 Coq.Init.Datatypes <> Some constr
R53866:53866 AV.Maps <> v var
R53798:53798 Coq.Init.Logic <> :type_scope:'~'_x not
R53799:53800 Coq.Lists.List <> In def
R53805:53807 Coq.Lists.List <> map def
R53813:53814 AV.Maps <> l2 var
R53809:53811 Coq.Init.Datatypes <> fst def
R53802:53802 AV.Maps <> k var
R53893:53899 AV.Maps Tree_Properties of_list def
R53910:53922 Coq.Lists.List <> fold_left_app thm
R53910:53922 Coq.Lists.List <> fold_left_app thm
R53910:53922 Coq.Lists.List <> fold_left_app thm
R53942:53958 AV.Maps Tree_Properties of_list_unchanged thm
R53942:53958 AV.Maps Tree_Properties of_list_unchanged thm
R53942:53958 AV.Maps Tree_Properties of_list_unchanged thm
R53976:53976 AV.Maps <> f vardef
R53985:53989 AV.Maps T gss prfax
R53985:53989 AV.Maps T gss prfax
prf 54004:54018 Tree_Properties of_list_norepet
R54061:54064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54076:54079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54099:54101 Coq.Init.Logic <> :type_scope:x_'='_x not
R54080:54084 AV.Maps T get defax
R54089:54095 AV.Maps Tree_Properties of_list def
R54097:54097 AV.Maps <> l var
R54086:54086 AV.Maps <> k var
R54102:54105 Coq.Init.Datatypes <> Some constr
R54107:54107 AV.Maps <> v var
R54065:54066 Coq.Lists.List <> In def
R54075:54075 AV.Maps <> l var
R54068:54068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54070:54071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54073:54073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54069:54069 AV.Maps <> k var
R54072:54072 AV.Maps <> v var
R54037:54048 AV.Coqlib <> list_norepet ind
R54051:54053 Coq.Lists.List <> map def
R54059:54059 AV.Maps <> l var
R54055:54057 Coq.Init.Datatypes <> fst def
R54184:54199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54211:54226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54252:54254 Coq.Init.Logic <> :type_scope:x_'='_x not
R54227:54231 AV.Maps T get defax
R54236:54244 Coq.Lists.List <> fold_left def
R54250:54250 AV.Maps <> m var
R54248:54248 AV.Maps <> l var
R54246:54246 AV.Maps <> Tree_Properties.OF_LIST.f var
R54233:54233 AV.Maps <> k var
R54255:54258 Coq.Init.Datatypes <> Some constr
R54260:54260 AV.Maps <> v var
R54200:54201 Coq.Lists.List <> In def
R54210:54210 AV.Maps <> l var
R54203:54203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54205:54206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54208:54208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54204:54204 AV.Maps <> k var
R54207:54207 AV.Maps <> v var
R54160:54171 AV.Coqlib <> list_norepet ind
R54174:54176 Coq.Lists.List <> map def
R54182:54182 AV.Maps <> l var
R54178:54180 Coq.Init.Datatypes <> fst def
R54184:54199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54211:54226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54252:54254 Coq.Init.Logic <> :type_scope:x_'='_x not
R54227:54231 AV.Maps T get defax
R54236:54244 Coq.Lists.List <> fold_left def
R54250:54250 AV.Maps <> m var
R54248:54248 AV.Maps <> l var
R54246:54246 AV.Maps <> Tree_Properties.OF_LIST.f var
R54233:54233 AV.Maps <> k var
R54255:54258 Coq.Init.Datatypes <> Some constr
R54260:54260 AV.Maps <> v var
R54200:54201 Coq.Lists.List <> In def
R54210:54210 AV.Maps <> l var
R54203:54203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54205:54206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54208:54208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54204:54204 AV.Maps <> k var
R54207:54207 AV.Maps <> v var
R54160:54171 AV.Coqlib <> list_norepet ind
R54174:54176 Coq.Lists.List <> map def
R54182:54182 AV.Maps <> l var
R54178:54180 Coq.Init.Datatypes <> fst def
R54376:54392 AV.Maps Tree_Properties of_list_unchanged thm
R54376:54392 AV.Maps Tree_Properties of_list_unchanged thm
R54376:54392 AV.Maps Tree_Properties of_list_unchanged thm
R54409:54413 AV.Maps T gss prfax
R54409:54413 AV.Maps T gss prfax
prf 54480:54495 Tree_Properties of_list_elements
R54544:54546 Coq.Init.Logic <> :type_scope:x_'='_x not
R54512:54516 AV.Maps T get defax
R54521:54527 AV.Maps Tree_Properties of_list def
R54530:54539 AV.Maps T elements defax
R54541:54541 AV.Maps <> m var
R54518:54518 AV.Maps <> k var
R54547:54551 AV.Maps T get defax
R54555:54555 AV.Maps <> m var
R54553:54553 AV.Maps <> k var
R54585:54589 AV.Maps T get defax
R54585:54589 AV.Maps T get defax
R54619:54633 AV.Maps Tree_Properties of_list_norepet thm
R54619:54633 AV.Maps Tree_Properties of_list_norepet thm
R54642:54664 AV.Maps T elements_keys_norepet prfax
R54642:54664 AV.Maps T elements_keys_norepet prfax
R54673:54690 AV.Maps T elements_correct prfax
R54673:54690 AV.Maps T elements_correct prfax
R54711:54715 AV.Maps T get defax
R54720:54726 AV.Maps Tree_Properties of_list def
R54729:54738 AV.Maps T elements defax
R54711:54715 AV.Maps T get defax
R54720:54726 AV.Maps Tree_Properties of_list def
R54729:54738 AV.Maps T elements defax
R54775:54784 AV.Maps Tree_Properties in_of_list thm
R54775:54784 AV.Maps Tree_Properties in_of_list thm
R54799:54817 AV.Maps T elements_complete prfax
R54799:54817 AV.Maps T elements_complete prfax
R54848:54854 AV.Maps Tree_Properties.OF_LIST <> sec
prf 54864:54878 Tree_Properties of_list_related
R54907:54910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54912:54915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54911:54911 AV.Maps <> B var
R54906:54906 AV.Maps <> A var
R55005:55010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55011:55020 AV.Coqlib <> option_rel ind
R55048:55052 AV.Maps T get defax
R55057:55063 AV.Maps Tree_Properties of_list def
R55065:55066 AV.Maps <> l2 var
R55054:55054 AV.Maps <> k var
R55025:55029 AV.Maps T get defax
R55034:55040 AV.Maps Tree_Properties of_list def
R55042:55043 AV.Maps <> l1 var
R55031:55031 AV.Maps <> k var
R55022:55022 AV.Maps <> R var
R54933:54944 AV.Coqlib <> list_forall2 ind
R55003:55004 AV.Maps <> l2 var
R55000:55001 AV.Maps <> l1 var
R54975:54978 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54966:54968 Coq.Init.Logic <> :type_scope:x_'='_x not
R54960:54962 Coq.Init.Datatypes <> fst def
R54964:54965 AV.Maps <> ka var
R54969:54971 Coq.Init.Datatypes <> fst def
R54973:54974 AV.Maps <> kb var
R54979:54979 AV.Maps <> R var
R54991:54993 Coq.Init.Datatypes <> snd def
R54995:54996 AV.Maps <> kb var
R54982:54984 Coq.Init.Datatypes <> snd def
R54986:54987 AV.Maps <> ka var
R55103:55109 AV.Maps Tree_Properties of_list def
R55153:55156 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55144:55146 Coq.Init.Logic <> :type_scope:x_'='_x not
R55138:55140 Coq.Init.Datatypes <> fst def
R55142:55143 AV.Maps <> ka var
R55147:55149 Coq.Init.Datatypes <> fst def
R55151:55152 AV.Maps <> kb var
R55169:55171 Coq.Init.Datatypes <> snd def
R55173:55174 AV.Maps <> kb var
R55160:55162 Coq.Init.Datatypes <> snd def
R55164:55165 AV.Maps <> ka var
R55153:55156 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55144:55146 Coq.Init.Logic <> :type_scope:x_'='_x not
R55138:55140 Coq.Init.Datatypes <> fst def
R55142:55143 AV.Maps <> ka var
R55147:55149 Coq.Init.Datatypes <> fst def
R55151:55152 AV.Maps <> kb var
R55169:55171 Coq.Init.Datatypes <> snd def
R55173:55174 AV.Maps <> kb var
R55160:55162 Coq.Init.Datatypes <> snd def
R55164:55165 AV.Maps <> ka var
R55201:55203 AV.Maps T t defax
R55220:55222 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55215:55219 AV.Maps T elt defax
R55229:55233 AV.Maps T set defax
R55255:55255 AV.Maps <> m var
R55246:55248 Coq.Init.Datatypes <> snd def
R55250:55252 AV.Maps <> k_v var
R55236:55238 Coq.Init.Datatypes <> fst def
R55240:55242 AV.Maps <> k_v var
R55201:55203 AV.Maps T t defax
R55220:55222 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55215:55219 AV.Maps T elt defax
R55229:55233 AV.Maps T set defax
R55255:55255 AV.Maps <> m var
R55246:55248 Coq.Init.Datatypes <> snd def
R55250:55252 AV.Maps <> k_v var
R55236:55238 Coq.Init.Datatypes <> fst def
R55240:55242 AV.Maps <> k_v var
R55281:55283 AV.Maps T t defax
R55300:55302 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55295:55299 AV.Maps T elt defax
R55309:55313 AV.Maps T set defax
R55335:55335 AV.Maps <> m var
R55326:55328 Coq.Init.Datatypes <> snd def
R55330:55332 AV.Maps <> k_v var
R55316:55318 Coq.Init.Datatypes <> fst def
R55320:55322 AV.Maps <> k_v var
R55281:55283 AV.Maps T t defax
R55300:55302 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55295:55299 AV.Maps T elt defax
R55309:55313 AV.Maps T set defax
R55335:55335 AV.Maps <> m var
R55326:55328 Coq.Init.Datatypes <> snd def
R55330:55332 AV.Maps <> k_v var
R55316:55318 Coq.Init.Datatypes <> fst def
R55320:55322 AV.Maps <> k_v var
R55389:55407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55460:55478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55479:55488 AV.Coqlib <> option_rel ind
R55524:55528 AV.Maps T get defax
R55533:55541 Coq.Lists.List <> fold_left def
R55549:55550 AV.Maps <> m2 var
R55546:55547 AV.Maps <> l2 var
R55493:55497 AV.Maps T get defax
R55502:55510 Coq.Lists.List <> fold_left def
R55518:55519 AV.Maps <> m1 var
R55515:55516 AV.Maps <> l1 var
R55422:55431 AV.Coqlib <> option_rel ind
R55449:55453 AV.Maps T get defax
R55457:55458 AV.Maps <> m2 var
R55436:55440 AV.Maps T get defax
R55444:55445 AV.Maps <> m1 var
R55368:55379 AV.Coqlib <> list_forall2 ind
R55387:55388 AV.Maps <> l2 var
R55384:55385 AV.Maps <> l1 var
R55389:55407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55460:55478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55479:55488 AV.Coqlib <> option_rel ind
R55524:55528 AV.Maps T get defax
R55533:55541 Coq.Lists.List <> fold_left def
R55549:55550 AV.Maps <> m2 var
R55546:55547 AV.Maps <> l2 var
R55493:55497 AV.Maps T get defax
R55502:55510 Coq.Lists.List <> fold_left def
R55518:55519 AV.Maps <> m1 var
R55515:55516 AV.Maps <> l1 var
R55422:55431 AV.Coqlib <> option_rel ind
R55449:55453 AV.Maps T get defax
R55457:55458 AV.Maps <> m2 var
R55436:55440 AV.Maps T get defax
R55444:55445 AV.Maps <> m1 var
R55368:55379 AV.Coqlib <> list_forall2 ind
R55387:55388 AV.Maps <> l2 var
R55384:55385 AV.Maps <> l1 var
R55649:55656 AV.Maps T gsspec prfax
R55649:55656 AV.Maps T gsspec prfax
R55649:55656 AV.Maps T gsspec prfax
R55649:55656 AV.Maps T gsspec prfax
R55649:55656 AV.Maps T gsspec prfax
R55705:55712 AV.Maps T elt_eq defax
R55717:55719 Coq.Init.Datatypes <> fst def
R55705:55712 AV.Maps T elt_eq defax
R55717:55719 Coq.Init.Datatypes <> fst def
R55799:55806 AV.Maps T gempty prfax
R55799:55806 AV.Maps T gempty prfax
R55799:55806 AV.Maps T gempty prfax
R55799:55806 AV.Maps T gempty prfax
R55799:55806 AV.Maps T gempty prfax
R55832:55846 AV.Maps Tree_Properties <> mod
R55877:55891 AV.Maps Tree_Properties <> modtype
R55893:55897 AV.Maps PTree <> modtype
mod 55857:55872 <> PTree_Properties
R55950:55958 AV.Maps <> get def
not 55938:55938 <> ::x_'!'_x
R56001:56008 AV.Maps <> get def
not 55988:55988 <> ::x_'!!'_x
